# This workflow builds and pushes a Docker container to Google Artifact Registry
# and deploys it to Cloud Run when you push to the "main" branch.

name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - main

env:
  # ðŸ”§ Update these with your actual project details!
  PROJECT_ID: 'my-bible-app-462322'      # Replace with your actual Google Cloud Project ID
  REGION: 'us-central1'                   # e.g., us-central1, us-east1, etc.
  SERVICE: 'my-bible-api'                 # Cloud Run service name (same as your backend)
  WORKLOAD_IDENTITY_PROVIDER: ''          # Leave empty if not using Workload Identity Federation
  GCP_SA_KEY: '${{ secrets.GCP_SA_KEY }}' # Reference to your GitHub Secret (JSON service account)

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      # Authenticate to Google Cloud using the service account key
      - name: 'Set up Google Cloud authentication'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ env.GCP_SA_KEY }}'

      # Authenticate Docker to Google Artifact Registry
      - name: 'Configure Docker to use gcloud as a credential helper'
        run: gcloud auth configure-docker ${REGION}-docker.pkg.dev

      # Build and push the Docker image
      - name: 'Build and push Docker image'
        run: |
          IMAGE_URI="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/my-bible-app-repo/${{ env.SERVICE }}:${{ github.sha }}"
          docker build -t "${IMAGE_URI}" .
          docker push "${IMAGE_URI}"

      # Deploy to Cloud Run
      - name: 'Deploy to Cloud Run'
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/my-bible-app-repo/${{ env.SERVICE }}:${{ github.sha }}'

      # Optional: Print the deployed service URL
      - name: 'Show deployed service URL'
        run: echo "Cloud Run service deployed to ${{ steps.deploy.outputs.url }}"
