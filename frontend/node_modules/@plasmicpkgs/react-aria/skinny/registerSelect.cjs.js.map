{"version":3,"file":"registerSelect.cjs.js","sources":["../src/registerSelect.tsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport {\n  Select,\n  SelectProps,\n  SelectRenderProps,\n  SelectStateContext,\n  SelectValue,\n} from \"react-aria-components\";\nimport { COMMON_STYLES, arrowDown, getCommonProps } from \"./common\";\nimport {\n  PlasmicListBoxContext,\n  PlasmicPopoverTriggerContext,\n} from \"./contexts\";\nimport { useIdManager } from \"./OptionsItemIdManager\";\nimport { BUTTON_COMPONENT_NAME } from \"./registerButton\";\nimport { LABEL_COMPONENT_NAME } from \"./registerLabel\";\nimport { LIST_BOX_COMPONENT_NAME } from \"./registerListBox\";\nimport { POPOVER_COMPONENT_NAME } from \"./registerPopover\";\nimport {\n  BaseControlContextDataForLists,\n  HasControlContextData,\n  PlasmicCanvasProps,\n  Registerable,\n  extractPlasmicDataProps,\n  makeComponentName,\n  registerComponentHelper,\n  useAutoOpen,\n} from \"./utils\";\nimport { WithVariants, pickAriaComponentVariants } from \"./variant-utils\";\n\n// It cannot be used as a hook like useAutoOpen() within the BaseSelect component\n// because it needs access to SelectStateContext, which is only created in the BaseSelect component's render function.\nfunction SelectAutoOpen(props: any) {\n  const { open, close } = React.useContext(SelectStateContext) ?? {};\n  useAutoOpen({ props, open, close });\n  return null;\n}\n\nexport interface BaseSelectValueProps\n  extends React.ComponentProps<typeof SelectValue> {\n  children: React.ReactNode;\n}\n\nexport const BaseSelectValue = (props: BaseSelectValueProps) => {\n  const { children: placeholder, className } = props;\n  return (\n    <SelectValue className={className} style={COMMON_STYLES}>\n      {({ isPlaceholder, selectedText }) => (\n        <>{isPlaceholder ? placeholder : selectedText}</>\n      )}\n    </SelectValue>\n  );\n};\n\nconst SELECT_NAME = makeComponentName(\"select\");\n\nconst SELECT_VARIANTS = [\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"disabled\" as const,\n];\n\nconst { variants: SELECT_VARIANTS_DATA } =\n  pickAriaComponentVariants(SELECT_VARIANTS);\n\nexport interface BaseSelectProps\n  extends SelectProps<{}>, // NOTE: We don't need generic type here since we don't use items prop (that needs it). We just need to make the type checker happy\n    WithVariants<typeof SELECT_VARIANTS>,\n    PlasmicCanvasProps,\n    HasControlContextData<BaseControlContextDataForLists> {\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport function BaseSelect(props: BaseSelectProps) {\n  const {\n    selectedKey,\n    onSelectionChange,\n    onOpenChange,\n    isDisabled,\n    className,\n    children,\n    disabledKeys,\n    name,\n    setControlContextData,\n    plasmicUpdateVariant,\n    plasmicNotifyAutoOpenedContent,\n    __plasmic_selection_prop__,\n    defaultSelectedKey,\n    \"aria-label\": ariaLabel,\n  } = props;\n\n  const updateIds = useCallback(\n    (ids: string[]) => {\n      setControlContextData?.({\n        itemIds: ids,\n      });\n    },\n    [setControlContextData]\n  );\n\n  const idManager = useIdManager(updateIds);\n\n  const classNameProp = useCallback(\n    ({\n      isDisabled: isDisabled2,\n      isFocusVisible,\n      isFocused,\n    }: SelectRenderProps) => {\n      plasmicUpdateVariant?.({\n        disabled: isDisabled2,\n        focused: isFocused,\n        focusVisible: isFocusVisible,\n      });\n      return className ?? \"\";\n    },\n    [className, plasmicUpdateVariant]\n  );\n\n  return (\n    <Select\n      defaultSelectedKey={defaultSelectedKey}\n      selectedKey={selectedKey}\n      onSelectionChange={onSelectionChange}\n      onOpenChange={onOpenChange}\n      isDisabled={isDisabled}\n      className={classNameProp}\n      style={COMMON_STYLES}\n      name={name}\n      disabledKeys={disabledKeys}\n      aria-label={ariaLabel}\n      {...extractPlasmicDataProps(props)}\n    >\n      <SelectAutoOpen\n        __plasmic_selection_prop__={__plasmic_selection_prop__}\n        plasmicNotifyAutoOpenedContent={plasmicNotifyAutoOpenedContent}\n      />\n      {/* PlasmicPopoverTriggerContext is used by BasePopover */}\n      <PlasmicPopoverTriggerContext.Provider value={true}>\n        {/* PlasmicListBoxContext is used by\n          - BaseListBox\n          - BaseListBoxItem\n          - BaseSection\n        */}\n        <PlasmicListBoxContext.Provider\n          value={{\n            idManager,\n          }}\n        >\n          {children}\n        </PlasmicListBoxContext.Provider>\n      </PlasmicPopoverTriggerContext.Provider>\n    </Select>\n  );\n}\n\nexport function registerSelect(loader?: Registerable) {\n  const selectValueMeta = registerComponentHelper(loader, BaseSelectValue, {\n    name: makeComponentName(\"select-value\"),\n    displayName: \"Aria Selected Value\",\n    importPath: \"@plasmicpkgs/react-aria/skinny/registerSelect\",\n    importName: \"BaseSelectValue\",\n    parentComponentName: SELECT_NAME,\n    props: {\n      /** @deprecated use children (Placeholder) directly */\n      customize: {\n        type: \"boolean\",\n        displayName: \"Customize placeholder\",\n        defaultValue: true,\n        description: \"Customize the placeholder text and styles\",\n        /** Obsolete, but retained (permanently hidden) for backward compatibility.  */\n        hidden: () => true,\n      },\n      children: {\n        type: \"slot\",\n        displayName: \"Placeholder\",\n        defaultValue: [\n          {\n            type: \"text\",\n            value: \"Select an item\",\n          },\n        ],\n      },\n    },\n    trapsFocus: true,\n  });\n\n  registerComponentHelper(loader, BaseSelect, {\n    name: SELECT_NAME,\n    displayName: \"Aria Select\",\n    importPath: \"@plasmicpkgs/react-aria/skinny/registerSelect\",\n    importName: \"BaseSelect\",\n    variants: SELECT_VARIANTS_DATA,\n    props: {\n      ...getCommonProps<BaseSelectProps>(\"Select\", [\n        \"name\",\n        \"aria-label\",\n        \"isDisabled\",\n        \"autoFocus\",\n      ]),\n      selectedKey: {\n        type: \"choice\",\n        editOnly: true,\n        uncontrolledProp: \"defaultSelectedKey\",\n        displayName: \"Initial selected item\",\n        options: (_props, ctx) => (ctx?.itemIds ? Array.from(ctx.itemIds) : []),\n        // React Aria Select do not support multiple selections yet\n        multiSelect: false,\n      },\n      onSelectionChange: {\n        type: \"eventHandler\",\n        argTypes: [{ name: \"selectedValue\", type: \"string\" }],\n      },\n      disabledKeys: {\n        type: \"choice\",\n        displayName: \"Disabled values\",\n        description:\n          \"The items that are disabled. These items cannot be selected, focused, or otherwise interacted with.\",\n        options: (_props, ctx) => (ctx?.itemIds ? Array.from(ctx.itemIds) : []),\n        multiSelect: true,\n        advanced: true,\n      },\n      isOpen: {\n        type: \"boolean\",\n        defaultValue: false,\n        // It doesn't make sense to make isOpen prop editable (it's controlled by user interaction and always closed by default), so we keep this prop hidden. We have listed the prop here in the meta only so we can expose a writeable state for it.\n        hidden: () => true,\n      },\n      onOpenChange: {\n        type: \"eventHandler\",\n        argTypes: [{ name: \"isOpen\", type: \"boolean\" }],\n      },\n      children: {\n        type: \"slot\",\n        mergeWithParent: true,\n        defaultValue: [\n          {\n            type: \"vbox\",\n            styles: {\n              justifyContent: \"flex-start\",\n              alignItems: \"flex-start\",\n              width: \"300px\",\n              padding: 0,\n            },\n            children: [\n              {\n                type: \"component\",\n                name: LABEL_COMPONENT_NAME,\n                props: {\n                  children: {\n                    type: \"text\",\n                    value: \"Label\",\n                  },\n                },\n              },\n              {\n                type: \"component\",\n                name: BUTTON_COMPONENT_NAME,\n                styles: {\n                  width: \"100%\",\n                  padding: \"4px 10px\",\n                  background: \"white\",\n                },\n                props: {\n                  children: {\n                    type: \"hbox\",\n                    styles: {\n                      width: \"stretch\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                      padding: 0,\n                    },\n                    children: [\n                      {\n                        type: \"component\",\n                        name: selectValueMeta.name,\n                      },\n                      arrowDown,\n                    ],\n                  },\n                },\n              },\n              {\n                type: \"component\",\n                name: POPOVER_COMPONENT_NAME,\n                styles: {\n                  backgroundColor: \"white\",\n                  padding: \"10px\",\n                  overflow: \"scroll\",\n                  width: \"unset\",\n                },\n                props: {\n                  children: [\n                    {\n                      type: \"component\",\n                      name: LIST_BOX_COMPONENT_NAME,\n                      props: {\n                        selectionMode: \"single\",\n                      },\n                      styles: {\n                        borderWidth: 0,\n                        width: \"stretch\",\n                      },\n                    },\n                  ],\n                },\n              },\n            ],\n          },\n        ],\n      },\n    },\n    states: {\n      selectedValue: {\n        type: \"writable\",\n        valueProp: \"selectedKey\",\n        onChangeProp: \"onSelectionChange\",\n        variableType: \"text\",\n      },\n      isOpen: {\n        type: \"writable\",\n        valueProp: \"isOpen\",\n        onChangeProp: \"onOpenChange\",\n        variableType: \"boolean\",\n      },\n    },\n    trapsFocus: true,\n  });\n}\n"],"names":["SelectStateContext","useAutoOpen","React","SelectValue","COMMON_STYLES","makeComponentName","pickAriaComponentVariants","useCallback","useIdManager","Select","extractPlasmicDataProps","PlasmicPopoverTriggerContext","PlasmicListBoxContext","registerComponentHelper","getCommonProps","LABEL_COMPONENT_NAME","BUTTON_COMPONENT_NAME","arrowDown","POPOVER_COMPONENT_NAME","LIST_BOX_COMPONENT_NAME"],"mappings":"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"}