{"version":3,"file":"registerDialogTrigger.esm.js","sources":["../src/registerDialogTrigger.tsx"],"sourcesContent":["import React from \"react\";\nimport { mergeProps, useButton } from \"react-aria\";\nimport { DialogTrigger, DialogTriggerProps } from \"react-aria-components\";\nimport { COMMON_STYLES } from \"./common\";\nimport { PlasmicDialogTriggerContext } from \"./contexts\";\nimport { BUTTON_COMPONENT_NAME } from \"./registerButton\";\nimport { DIALOG_COMPONENT_NAME } from \"./registerDialog\";\nimport {\n  MODAL_COMPONENT_NAME,\n  MODAL_DEFAULT_SLOT_CONTENT,\n} from \"./registerModal\";\nimport {\n  CodeComponentMetaOverrides,\n  PlasmicCanvasProps,\n  Registerable,\n  makeComponentName,\n  registerComponentHelper,\n  useIsOpen,\n} from \"./utils\";\n\nexport interface TriggerWrapperProps {\n  children?: React.ReactNode;\n  className?: string;\n}\n\n/*\n  React Aria's DialogTrigger requires a Aria Button as trigger.\n  (Aria Button works as a trigger because it uses useButton behind the scenes).\n  So we use useButton as well for our custom trigger.\n\n  Discussion (React-aria-components DialogTrigger with custom button):\n  https://github.com/adobe/react-spectrum/discussions/5119#discussioncomment-7084661\n\n  */\nexport function TriggerWrapper({ children, className }: TriggerWrapperProps) {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const { buttonProps } = useButton({}, ref);\n\n  const mergedProps = mergeProps(buttonProps, {\n    ref,\n    // We expose className to allow user control over the wrapper div's styling.\n    className,\n    style: COMMON_STYLES,\n  });\n\n  return <div {...mergedProps}>{children}</div>;\n}\n\nexport interface BaseDialogTriggerProps\n  extends Omit<DialogTriggerProps, \"children\">,\n    PlasmicCanvasProps {\n  trigger?: React.ReactNode;\n  dialog?: React.ReactNode;\n  className?: string;\n}\n\nexport function BaseDialogTrigger(props: BaseDialogTriggerProps) {\n  const { trigger, dialog, isOpen, className, ...rest } = props;\n\n  const canvasAwareIsOpen = useIsOpen({\n    triggerSlotName: \"trigger\",\n    isOpen,\n    props,\n  });\n\n  const mergedProps = {\n    ...rest,\n    isOpen: canvasAwareIsOpen,\n  };\n\n  return (\n    // PlasmicDialogTriggerContext is used by BaseModal\n    <PlasmicDialogTriggerContext.Provider value={mergedProps}>\n      <DialogTrigger {...mergedProps}>\n        {trigger && (\n          <TriggerWrapper className={className}>{trigger}</TriggerWrapper>\n        )}\n        {dialog}\n      </DialogTrigger>\n    </PlasmicDialogTriggerContext.Provider>\n  );\n}\n\nexport function registerDialogTrigger(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseDialogTrigger>\n) {\n  registerComponentHelper(\n    loader,\n    BaseDialogTrigger,\n    {\n      name: makeComponentName(\"dialogTrigger\"),\n      displayName: \"Aria Dialog Trigger\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerDialogTrigger\",\n      importName: \"BaseDialogTrigger\",\n      props: {\n        trigger: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: {\n            type: \"component\",\n            name: BUTTON_COMPONENT_NAME,\n            props: {\n              children: {\n                type: \"text\",\n                value: \"Open Dialog\",\n              },\n            },\n          },\n        },\n        dialog: {\n          type: \"slot\",\n          mergeWithParent: true,\n          defaultValue: [\n            {\n              type: \"component\",\n              name: MODAL_COMPONENT_NAME,\n              props: {\n                children: {\n                  type: \"component\",\n                  name: DIALOG_COMPONENT_NAME,\n                  props: {\n                    children: MODAL_DEFAULT_SLOT_CONTENT,\n                  },\n                },\n              },\n            },\n          ],\n        },\n        isOpen: {\n          type: \"boolean\",\n          defaultValueHint: false,\n          editOnly: true,\n          uncontrolledProp: \"defaultOpen\",\n        },\n        onOpenChange: {\n          type: \"eventHandler\",\n          argTypes: [{ name: \"isOpen\", type: \"boolean\" }],\n        },\n      },\n      states: {\n        isOpen: {\n          type: \"writable\",\n          valueProp: \"isOpen\",\n          onChangeProp: \"onOpenChange\",\n          variableType: \"boolean\",\n        },\n      },\n      trapsFocus: true,\n    },\n    overrides\n  );\n}\n"],"names":[],"mappings":"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"}