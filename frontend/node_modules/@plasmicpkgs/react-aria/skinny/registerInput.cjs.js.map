{"version":3,"file":"registerInput.cjs.js","sources":["../src/registerInput.tsx"],"sourcesContent":["import React, { ChangeEvent, ForwardedRef, useEffect } from \"react\";\nimport { mergeProps, useFocusRing, useHover } from \"react-aria\";\nimport {\n  InputContext,\n  type InputProps,\n  useContextProps,\n} from \"react-aria-components\";\nimport { COMMON_STYLES, getCommonProps, resolveAutoComplete } from \"./common\";\nimport { PlasmicInputContext, PlasmicTextFieldContext } from \"./contexts\";\nimport {\n  CodeComponentMetaOverrides,\n  filterHoverProps,\n  HasControlContextData,\n  isDefined,\n  makeComponentName,\n  Registerable,\n  registerComponentHelper,\n} from \"./utils\";\nimport { pickAriaComponentVariants, WithVariants } from \"./variant-utils\";\n\nconst INPUT_VARIANTS = [\n  \"focused\" as const,\n  \"focusVisible\" as const,\n  \"hovered\" as const,\n  \"disabled\" as const,\n];\n\nconst { variants } = pickAriaComponentVariants(INPUT_VARIANTS);\n\nexport interface BaseInputProps\n  extends Omit<InputProps, \"autoComplete\" | \"className\">,\n    HasControlContextData,\n    WithVariants<typeof INPUT_VARIANTS> {\n  autoComplete?: string[];\n  isUncontrolled?: boolean;\n  className?: string;\n}\n\nexport const inputHelpers = {\n  states: {\n    value: {\n      onChangeArgsToValue: (e: ChangeEvent<HTMLInputElement>) => {\n        return e.target.value;\n      },\n    },\n  },\n};\n\nfunction BaseInput_(\n  props: BaseInputProps,\n  ref: ForwardedRef<HTMLInputElement>\n) {\n  const {\n    plasmicUpdateVariant,\n    setControlContextData,\n    autoComplete,\n    value,\n    className,\n    ...restProps\n  } = props;\n  const textFieldContext = React.useContext(PlasmicTextFieldContext);\n  const context = React.useContext(PlasmicInputContext);\n  const [inputContextProps, inputRef] = useContextProps(\n    restProps,\n    ref,\n    InputContext\n  );\n\n  const { hoverProps, isHovered } = useHover(props);\n  const { isFocused, isFocusVisible, focusProps } = useFocusRing({\n    isTextInput: true,\n    autoFocus: inputContextProps.autoFocus,\n  });\n\n  const mergedProps = mergeProps(\n    filterHoverProps(inputContextProps),\n    focusProps,\n    hoverProps,\n    {\n      style: COMMON_STYLES,\n      value:\n        context?.isUncontrolled || isDefined(textFieldContext)\n          ? undefined\n          : value,\n      autoComplete: resolveAutoComplete(autoComplete),\n      className,\n    }\n  );\n\n  const isDisabled = mergedProps.disabled || false;\n  const isInvalid =\n    !!mergedProps[\"aria-invalid\"] && mergedProps[\"aria-invalid\"] !== \"false\";\n\n  setControlContextData?.({\n    parent: textFieldContext,\n  });\n\n  useEffect(() => {\n    if (plasmicUpdateVariant) {\n      plasmicUpdateVariant({\n        disabled: isDisabled,\n        focused: isFocused,\n        focusVisible: isFocusVisible,\n        hovered: isHovered,\n      });\n    }\n  }, [isFocused, isFocusVisible, isHovered, isDisabled, plasmicUpdateVariant]);\n\n  return (\n    <input\n      {...mergedProps}\n      ref={inputRef}\n      data-focused={isFocused || undefined}\n      data-disabled={isDisabled || undefined}\n      data-hovered={isHovered || undefined}\n      data-focus-visible={isFocusVisible || undefined}\n      data-invalid={isInvalid || undefined}\n    />\n  );\n}\n\nexport const BaseInput = React.forwardRef(BaseInput_);\n\nexport const INPUT_COMPONENT_NAME = makeComponentName(\"input\");\n\nexport function registerInput(\n  loader?: Registerable,\n  overrides?: CodeComponentMetaOverrides<typeof BaseInput>\n) {\n  registerComponentHelper(\n    loader,\n    BaseInput,\n    {\n      name: INPUT_COMPONENT_NAME,\n      displayName: \"Aria Input\",\n      importPath: \"@plasmicpkgs/react-aria/skinny/registerInput\",\n      importName: \"BaseInput\",\n      variants,\n      defaultStyles: {\n        width: \"300px\",\n        borderWidth: \"1px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\",\n        padding: \"4px 10px\",\n      },\n      props: {\n        ...getCommonProps<BaseInputProps>(\"Input\", [\n          \"name\",\n          \"disabled\",\n          \"readOnly\",\n          \"autoFocus\",\n          \"aria-label\",\n          \"required\",\n          \"placeholder\",\n          \"value\",\n          \"maxLength\",\n          \"minLength\",\n          \"pattern\",\n          \"type\",\n          \"inputMode\",\n          \"autoComplete\",\n          \"onChange\",\n          \"onFocus\",\n          \"onBlur\",\n          \"onKeyDown\",\n          \"onKeyUp\",\n          \"onCopy\",\n          \"onCut\",\n          \"onPaste\",\n          \"onCompositionStart\",\n          \"onCompositionEnd\",\n          \"onCompositionUpdate\",\n          \"onSelect\",\n          \"onBeforeInput\",\n          \"onInput\",\n        ]),\n      },\n      states: {\n        value: {\n          type: \"writable\",\n          valueProp: \"value\",\n          onChangeProp: \"onChange\",\n          variableType: \"text\",\n          ...inputHelpers.states.value,\n        },\n      },\n\n      componentHelpers: {\n        helpers: inputHelpers,\n        importName: \"inputHelpers\",\n        importPath: \"@plasmicpkgs/react-aria/skinny/registerInput\",\n      },\n    },\n    overrides\n  );\n}\n"],"names":["pickAriaComponentVariants","React","PlasmicTextFieldContext","PlasmicInputContext","useContextProps","InputContext","useHover","useFocusRing","mergeProps","filterHoverProps","COMMON_STYLES","isDefined","resolveAutoComplete","useEffect","makeComponentName","registerComponentHelper","getCommonProps"],"mappings":"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"}