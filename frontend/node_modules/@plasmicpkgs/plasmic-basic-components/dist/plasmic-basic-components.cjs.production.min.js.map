{"version":3,"file":"plasmic-basic-components.cjs.production.min.js","sources":["../src/ConditionGuard.tsx","../src/Data.tsx","../src/common.ts","../src/Embed.tsx","../src/Iframe.tsx","../src/LoadingBoundary.tsx","../src/Repeater.tsx","../src/ScrollRevealer.tsx","../src/SideEffect.tsx","../src/Timer.tsx","../src/Video.tsx"],"sourcesContent":["import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\n\nexport interface ConditionGuardProps {\n  condition: boolean;\n  onNotSatisfied?: () => Promise<void>;\n  children: React.ReactNode;\n  skipPaths?: Array<{ path: string }>;\n}\n\nfunction ConditionGuardOnNotSatisfied({\n  onNotSatisfied,\n}: Pick<ConditionGuardProps, \"onNotSatisfied\">) {\n  const ref = React.useRef(false);\n  React.useEffect(() => {\n    if (!ref.current) {\n      ref.current = true;\n      onNotSatisfied?.();\n    }\n  }, [onNotSatisfied]);\n  return null;\n}\n\nfunction isCurrentLocationInSkipPaths(skipPaths?: Array<{ path: string }>) {\n  const pathname = window.location.pathname;\n  // Ignore search params\n  const currentPath = window.location.origin + pathname;\n  const plasmicPathname = (globalThis as any)?.[\"__PLASMIC_STUDIO_PATH\"]?.();\n  return skipPaths?.some(\n    ({ path }) =>\n      path === pathname || path === currentPath || path === plasmicPathname\n  );\n}\n\nexport function ConditionGuard({\n  condition,\n  onNotSatisfied,\n  children,\n  skipPaths,\n}: ConditionGuardProps) {\n  if (!condition && !isCurrentLocationInSkipPaths(skipPaths)) {\n    return <ConditionGuardOnNotSatisfied onNotSatisfied={onNotSatisfied} />;\n  }\n\n  return <>{children}</>;\n}\n\nexport const conditionGuardMeta: ComponentMeta<ConditionGuardProps> = {\n  name: \"hostless-condition-guard\",\n  displayName: \"Condition Guard\",\n  description:\n    \"Ensure some condition, or else run an interaction. Examples: ensure all users have a database row, or require new users to setup a profile.\",\n  importName: \"ConditionGuard\",\n  importPath: \"@plasmicpkgs/plasmic-basic-components\",\n  props: {\n    children: \"slot\",\n    condition: {\n      type: \"boolean\",\n      displayName: \"Condition\",\n      description: \"The condition to guard against\",\n      helpText:\n        \"Condition to check. Render contents only if true. Run interaction if false.\",\n      defaultValue: true,\n    },\n    onNotSatisfied: {\n      type: \"eventHandler\",\n      displayName: \"On condition false\",\n      description: \"The action to run when the condition is not satisfied\",\n      argTypes: [],\n    },\n    skipPaths: {\n      type: \"array\",\n      displayName: \"Skip Paths\",\n      description: \"Paths that the action should not run\",\n      itemType: {\n        type: \"object\",\n        fields: {\n          path: \"href\",\n        },\n        nameFunc: (item: any) => item?.path,\n      },\n    },\n  },\n};\n\nexport function registerConditionGuard(\n  loader?: { registerComponent: typeof registerComponent },\n  customConditionGuardMeta?: ComponentMeta<ConditionGuardProps>\n) {\n  if (loader) {\n    loader.registerComponent(\n      ConditionGuard,\n      customConditionGuardMeta ?? conditionGuardMeta\n    );\n  } else {\n    registerComponent(\n      ConditionGuard,\n      customConditionGuardMeta ?? conditionGuardMeta\n    );\n  }\n}\n","import {\n  applySelector as _applySelector,\n  ComponentMeta,\n  DataProvider as _DataProvider,\n  DataProviderProps,\n  repeatedElement,\n  SelectorDict,\n  useDataEnv as _useDataEnv,\n  useSelector as _useSelector,\n  useSelectors as _useSelectors,\n} from \"@plasmicapp/host\";\nimport registerComponent from \"@plasmicapp/host/registerComponent\";\nimport React, { ComponentProps, createElement, ReactNode } from \"react\";\n\nconst thisModule = \"@plasmicpkgs/plasmic-basic-components\";\n\n/**\n * @deprecated This should be imported from @plasmicapp/host instead.\n */\nexport const applySelector: typeof _applySelector = function (...args) {\n  console.warn(\n    \"DEPRECATED: Import applySelector from @plasmicapp/host instead.\"\n  );\n  return _applySelector(...args);\n};\n\n/**\n * @deprecated This should be imported from @plasmicapp/host instead.\n */\nexport const useSelector: typeof _useSelector = function (...args) {\n  console.warn(\"DEPRECATED: Import useSelector from @plasmicapp/host instead.\");\n  return _useSelector(...args);\n};\n\n/**\n * @deprecated This should be imported from @plasmicapp/host instead.\n */\nexport const useSelectors: typeof _useSelectors = function (...args) {\n  console.warn(\n    \"DEPRECATED: Import useSelectors from @plasmicapp/host instead.\"\n  );\n  return _useSelectors(...args);\n};\n\n/**\n * @deprecated This should be imported from @plasmicapp/host instead.\n */\nexport const useDataEnv: typeof _useDataEnv = function (...args) {\n  console.warn(\"DEPRECATED: Import useDataEnv from @plasmicapp/host instead.\");\n  return _useDataEnv(...args);\n};\n\nexport const DataProvider: typeof _DataProvider = function (...args) {\n  return _DataProvider(...args);\n};\n\nexport interface CommonDynamicProps {\n  className?: string;\n  tag?: string;\n  propSelectors?: SelectorDict;\n}\n\nexport function DynamicElement<\n  Tag extends keyof JSX.IntrinsicElements = \"div\"\n>({\n  tag = \"div\",\n  className,\n  children,\n  propSelectors,\n  ...props\n}: CommonDynamicProps & ComponentProps<Tag>) {\n  const computed = _useSelectors(propSelectors);\n  return createElement(tag, {\n    children,\n    ...props,\n    ...computed,\n    className: className + \" \" + computed.className,\n  });\n}\n\nexport interface DynamicTextProps extends CommonDynamicProps {\n  selector?: string;\n}\n\nexport function DynamicText({\n  selector,\n  propSelectors,\n  ...props\n}: DynamicTextProps) {\n  return (\n    <DynamicElement\n      {...props}\n      propSelectors={{ ...propSelectors, children: selector }}\n    >\n      {/*This is the default text*/}\n      (DynamicText requires a selector)\n    </DynamicElement>\n  );\n}\n\nexport interface DynamicImageProps\n  extends CommonDynamicProps,\n    ComponentProps<\"img\"> {\n  selector?: string;\n}\n\nexport function DynamicImage({\n  selector,\n  propSelectors,\n  ...props\n}: DynamicImageProps) {\n  return (\n    <DynamicElement<\"img\">\n      tag={\"img\"}\n      loading={\"lazy\"}\n      style={{\n        objectFit: \"cover\",\n      }}\n      {...props}\n      propSelectors={{ ...propSelectors, src: selector }}\n      // Default image placeholder\n      src=\"https://studio.plasmic.app/static/img/placeholder.png\"\n    />\n  );\n}\n\nexport interface DynamicRepeaterProps {\n  children?: ReactNode;\n  loopItemName?: string;\n  keySelector?: string;\n  selector?: string;\n  data?: any;\n}\n\nexport function DynamicRepeater({\n  children,\n  loopItemName,\n  keySelector,\n  selector,\n  data,\n}: DynamicRepeaterProps) {\n  // Defaults to an array of three items.\n  const finalData = data ?? _useSelector(selector) ?? [1, 2, 3];\n  return (\n    <>\n      {finalData?.map?.((item: any, index: number) => (\n        <_DataProvider\n          key={_applySelector(item, keySelector) ?? index}\n          name={loopItemName}\n          data={item}\n        >\n          {repeatedElement(index, children)}\n        </_DataProvider>\n      ))}\n    </>\n  );\n}\n\nexport const dynamicRepeaterProps = {\n  selector: {\n    type: \"string\",\n    description:\n      \"The selector expression to use to get the array of data to loop over, such as: someVariable.0.someField\",\n  },\n  loopItemName: {\n    type: \"string\",\n    defaultValue: \"item\",\n    description:\n      \"The name of the variable to use to store the current item in the loop\",\n  },\n  children: {\n    type: \"slot\",\n    isRepeated: true,\n  },\n} as const;\n\nexport const dynamicRepeaterMeta: ComponentMeta<DynamicRepeaterProps> = {\n  name: \"hostless-dynamic-repeater\",\n  displayName: \"Dynamic Repeater\",\n  importName: \"DynamicRepeater\",\n  importPath: thisModule,\n  props: dynamicRepeaterProps,\n};\n\nexport function registerDynamicRepeater(\n  loader?: { registerComponent: typeof registerComponent },\n  customDynamicRepeaterMeta?: ComponentMeta<DynamicRepeaterProps>\n) {\n  if (loader) {\n    loader.registerComponent(\n      DynamicRepeater,\n      customDynamicRepeaterMeta ?? dynamicRepeaterMeta\n    );\n  } else {\n    registerComponent(\n      DynamicRepeater,\n      customDynamicRepeaterMeta ?? dynamicRepeaterMeta\n    );\n  }\n}\n\nexport const dataProviderMeta: ComponentMeta<DataProviderProps> = {\n  name: \"hostless-data-provider\",\n  displayName: \"Data Provider\",\n  importName: \"DataProvider\",\n  importPath: thisModule,\n  providesData: true,\n  // description: \"Makes some specified data available to the subtree in a context\",\n  props: {\n    name: {\n      type: \"string\",\n      defaultValue: \"celebrities\",\n      description: \"The name of the variable to store the data in\",\n    },\n    data: {\n      type: \"object\",\n      defaultValue: [\n        {\n          name: \"Fill Murray\",\n          birthYear: 1950,\n          profilePicture: [\"https://www.fillmurray.com/200/300\"],\n        },\n        {\n          name: \"Place Cage\",\n          birthYear: 1950,\n          profilePicture: [\"https://www.placecage.com/200/300\"],\n        },\n      ],\n    },\n    children: {\n      type: \"slot\",\n    },\n  },\n};\n\nexport function registerDataProvider(\n  loader?: { registerComponent: typeof registerComponent },\n  customDataProviderMeta?: ComponentMeta<DataProviderProps>\n) {\n  if (loader) {\n    loader.registerComponent(\n      _DataProvider,\n      customDataProviderMeta ?? dataProviderMeta\n    );\n  } else {\n    registerComponent(\n      _DataProvider,\n      customDataProviderMeta ?? dataProviderMeta\n    );\n  }\n}\n\nconst dynamicPropsWithoutTag = {\n  propSelectors: {\n    type: \"object\",\n    defaultValueHint: {},\n    description:\n      \"An object whose keys are prop names and values are selector expressions. Use this to set any prop to a dynamic value.\",\n  },\n} as const;\n\nconst dynamicProps = {\n  ...dynamicPropsWithoutTag,\n  tag: {\n    type: \"string\",\n    defaultValueHint: \"div\",\n    description: \"The HTML tag to use\",\n  },\n} as const;\n\n// TODO Eventually we'll want to expose all the base HTML properties, but in the nicer way that we do within the studio.\n\nexport const dynamicElementMeta: ComponentMeta<CommonDynamicProps> = {\n  name: \"hostless-dynamic-element\",\n  displayName: \"Dynamic Element\",\n  importName: \"DynamicElement\",\n  importPath: thisModule,\n  props: { ...dynamicProps, children: \"slot\" },\n};\n\nexport function registerDynamicElement(\n  loader?: { registerComponent: typeof registerComponent },\n  customDynamicElementMeta?: ComponentMeta<CommonDynamicProps>\n) {\n  if (loader) {\n    loader.registerComponent(\n      DynamicElement,\n      customDynamicElementMeta ?? dynamicElementMeta\n    );\n  } else {\n    registerComponent(\n      DynamicElement,\n      customDynamicElementMeta ?? dynamicElementMeta\n    );\n  }\n}\n\nexport const dynamicTextMeta: ComponentMeta<DynamicTextProps> = {\n  name: \"hostless-dynamic-text\",\n  importName: \"DynamicText\",\n  displayName: \"Dynamic Text\",\n  importPath: thisModule,\n  props: {\n    ...dynamicProps,\n    selector: {\n      type: \"string\",\n      description:\n        \"The selector expression to use to get the text, such as: someVariable.0.someField\",\n    },\n  },\n};\n\nexport function registerDynamicText(\n  loader?: { registerComponent: typeof registerComponent },\n  customDynamicTextMeta?: ComponentMeta<DynamicTextProps>\n) {\n  if (loader) {\n    loader.registerComponent(\n      DynamicText,\n      customDynamicTextMeta ?? dynamicTextMeta\n    );\n  } else {\n    registerComponent(DynamicText, customDynamicTextMeta ?? dynamicTextMeta);\n  }\n}\n\nexport const dynamicImageMeta: ComponentMeta<DynamicImageProps> = {\n  name: \"hostless-dynamic-image\",\n  displayName: \"Dynamic Image\",\n  importName: \"DynamicImage\",\n  importPath: thisModule,\n  props: {\n    ...dynamicPropsWithoutTag,\n    selector: {\n      type: \"string\",\n      description:\n        \"The selector expression to use to get the image source URL, such as: someVariable.0.someField\",\n    },\n  },\n};\n\nexport function registerDynamicImage(\n  loader?: { registerComponent: typeof registerComponent },\n  customDynamicImageMeta?: ComponentMeta<DynamicImageProps>\n) {\n  if (loader) {\n    loader.registerComponent(\n      DynamicImage,\n      customDynamicImageMeta ?? dynamicImageMeta\n    );\n  } else {\n    registerComponent(DynamicImage, customDynamicImageMeta ?? dynamicImageMeta);\n  }\n}\n","import React from \"react\";\n\nexport const tuple = <T extends any[]>(...args: T): T => args;\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nexport const isBrowser = typeof window !== \"undefined\";\n\nexport const useIsomorphicLayoutEffect = isBrowser\n  ? React.useLayoutEffect\n  : React.useEffect;\n\nexport function useFirstRender() {\n  const ref = React.useRef(true);\n  const firstRender = ref.current;\n  ref.current = false;\n  return firstRender;\n}\n\n// Fix for React.useId type since it's only available for React 18+\nexport const useId: (() => string) | undefined = React.useId;\n","import { usePlasmicCanvasContext } from \"@plasmicapp/host\";\nimport registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React, { useEffect, useRef } from \"react\";\nimport { ensure, useFirstRender, useId } from \"./common\";\n\nexport interface EmbedProps {\n  className?: string;\n  code: string;\n  hideInEditor?: boolean;\n}\n\n/**\n * A common use case for embedding HTML snippets is loading/running script tags, so most of the logic here is for\n * handling that.\n *\n * You can't just write innerHTML with some <script> tags in there. You need to explicitly add each one via the DOM API.\n *\n * You also can't just add the script tags and expect them to run sequentially, and sometimes there are multiple scripts\n * with dependencies on each other. You have to explicitly wait for earlier ones to finish loading.\n *\n * One last complication is that Next.js can run the effect multiple times in development mode. There's nothing actually\n * that we can/should do about that, but just something to be aware of if you are here debugging issues.\n */\nexport function Embed({ className, code, hideInEditor = false }: EmbedProps) {\n  const rootElt = useRef<HTMLDivElement>(null);\n  const inEditor = usePlasmicCanvasContext();\n  const htmlId = useId?.();\n  const firstRender = useFirstRender();\n  useEffect(() => {\n    if (hideInEditor && inEditor) {\n      return;\n    }\n    // If it's the first render and we already set the global id for this component, it means that\n    // the HTML is already present in the DOM from the server-rendered HTML. We don't want to re-run.\n    // If it's not the first render, then it can mean that some dependency changed.\n    if (\n      htmlId &&\n      !inEditor &&\n      firstRender &&\n      (window as any)[makePlasmicVarName(htmlId)]\n    ) {\n      return;\n    }\n\n    // Load scripts sequentially one at a time, since later scripts can depend on earlier ones.\n    let cleanup = false;\n    (async () => {\n      for (const oldScript of Array.from(\n        ensure(rootElt.current).querySelectorAll(\"script\")\n      )) {\n        const newScript = document.createElement(\"script\");\n        // This doesn't actually have the effect we want, we need to explicitly wait on the load event, since all\n        // dynamically injected scripts are always async.\n        newScript.async = false;\n        Array.from(oldScript.attributes).forEach((attr) =>\n          newScript.setAttribute(attr.name, attr.value)\n        );\n        newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n        ensure(oldScript.parentNode).replaceChild(newScript, oldScript);\n        // Only scripts with src will ever fire a load event.\n        if (newScript.src) {\n          await new Promise((resolve) =>\n            newScript.addEventListener(\"load\", resolve)\n          );\n          if (cleanup) {\n            return;\n          }\n        }\n      }\n      return () => {\n        cleanup = true;\n      };\n    })();\n  }, [htmlId, code, hideInEditor, inEditor]);\n  const effectiveCode =\n    hideInEditor && inEditor\n      ? \"\"\n      : inEditor || !htmlId\n      ? code\n      : addIdentifierScript(htmlId, code);\n  return (\n    <div\n      ref={rootElt}\n      className={className}\n      dangerouslySetInnerHTML={{ __html: effectiveCode }}\n      style={{ whiteSpace: \"normal\" }}\n    />\n  );\n}\n\nfunction makePlasmicVarName(id: string) {\n  return `__plasmic_${id.replace(/[^a-z0-9]/gi, \"\")}`;\n}\n\nfunction addIdentifierScript(id: string, code: string) {\n  return `<script>\n    var ${makePlasmicVarName(id)} = 1;\n  </script>\n  ${code}`;\n}\n\nexport const embedMeta: ComponentMeta<EmbedProps> = {\n  name: \"hostless-embed\",\n  displayName: \"Embed HTML\",\n  importName: \"Embed\",\n  importPath: \"@plasmicpkgs/plasmic-basic-components\",\n  props: {\n    code: {\n      type: \"code\",\n      lang: \"html\",\n      defaultValue: \"<div>Paste your embed code via the right sidebar</div>\",\n      description: \"The HTML code to be embedded\",\n    },\n    hideInEditor: {\n      type: \"boolean\",\n      displayName: \"Hide in editor\",\n      description:\n        \"Disable running the code while editing in Plasmic Studio (may require reload)\",\n      editOnly: true,\n    },\n  },\n  defaultStyles: {\n    maxWidth: \"100%\",\n  },\n};\n\nexport function registerEmbed(\n  loader?: { registerComponent: typeof registerComponent },\n  customEmbedMeta?: ComponentMeta<EmbedProps>\n) {\n  if (loader) {\n    loader.registerComponent(Embed, customEmbedMeta ?? embedMeta);\n  } else {\n    registerComponent(Embed, customEmbedMeta ?? embedMeta);\n  }\n}\n","import { ComponentMeta, PlasmicCanvasContext } from \"@plasmicapp/host\";\nimport registerComponent from \"@plasmicapp/host/registerComponent\";\nimport React, { useContext } from \"react\";\n\nexport interface IframeProps {\n  useHtml?: boolean;\n  srcDoc?: string;\n  src?: string;\n  preview?: boolean;\n  className?: string;\n  onLoad?: React.ComponentProps<\"iframe\">[\"onLoad\"];\n}\n\nexport function Iframe({\n  preview,\n  src,\n  srcDoc,\n  useHtml,\n  className,\n  onLoad,\n}: IframeProps) {\n  const isEditing = useContext(PlasmicCanvasContext);\n  if (isEditing && !preview) {\n    return (\n      <div className={className}>\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            background: \"#eee\",\n            color: \"#888\",\n            fontSize: \"36px\",\n            fontFamily: \"sans-serif\",\n            fontWeight: \"bold\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            overflow: \"hidden\",\n          }}\n        >\n          Iframe placeholder\n        </div>\n      </div>\n    );\n  }\n  const srcProps = useHtml ? { srcDoc } : { src };\n  return <iframe {...srcProps} className={className} onLoad={onLoad} />;\n}\n\nexport const iframeMeta: ComponentMeta<IframeProps> = {\n  name: \"hostless-iframe\",\n  displayName: \"Iframe\",\n  importName: \"Iframe\",\n  importPath: \"@plasmicpkgs/plasmic-basic-components\",\n  props: {\n    useHtml: {\n      type: \"boolean\",\n      displayName: \"Use HTML source\",\n      description:\n        \"Insert custom HTML directly into the iframe instead of using a URL.\",\n      defaultValue: false,\n      advanced: true,\n    },\n    srcDoc: {\n      type: \"code\",\n      lang: \"html\",\n      displayName: \"HTML source\",\n      description: \"Raw HTML content that will be rendered inside an iframe.\",\n      defaultValue: `<div><h3>Heading</h3><p>Example text...</p></div>`,\n      hidden: (props) => !props.useHtml,\n    },\n    src: {\n      type: \"string\",\n      defaultValue: \"https://www.example.com\",\n      hidden: (props) => !!props.useHtml,\n    },\n    preview: {\n      type: \"boolean\",\n      description: \"Load the iframe while editing in Plasmic Studio\",\n    },\n    onLoad: {\n      type: \"eventHandler\",\n      argTypes: [{ name: \"event\", type: \"object\" }],\n    },\n  },\n  defaultStyles: {\n    width: \"300px\",\n    height: \"150px\",\n    maxWidth: \"100%\",\n  },\n};\n\nexport function registerIframe(\n  loader?: { registerComponent: typeof registerComponent },\n  customIframeMeta?: ComponentMeta<IframeProps>\n) {\n  if (loader) {\n    loader.registerComponent(Iframe, customIframeMeta ?? iframeMeta);\n  } else {\n    registerComponent(Iframe, customIframeMeta ?? iframeMeta);\n  }\n}\n","import { DataProvider, useDataEnv } from \"@plasmicapp/host\";\nimport registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport * as plasmicQuery from \"@plasmicapp/query\";\nimport React, { Suspense, useState } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"./common\";\n\ninterface LoadingBoundaryProps {\n  loadingState?: React.ReactNode;\n  children?: React.ReactNode;\n  forceLoading?: boolean;\n}\n\nconst reactMajorVersion = +React.version.split(\".\")[0];\n\nif (reactMajorVersion < 18) {\n  console.warn(\"The LoadingBoundary component only works with React 18+\");\n}\n\nconst enableLoadingBoundaryKey = \"plasmicInternalEnableLoadingBoundary\";\nconst hasLoadingBoundaryKey = \"plasmicInternalHasLoadingBoundary\";\n\nfunction useIsClient() {\n  const [loaded, setLoaded] = useState(false);\n  useIsomorphicLayoutEffect(() => {\n    setLoaded(true);\n  }, []);\n  return loaded;\n}\n\nlet hasWarnedDisabledLoadingBoundary = false;\n\nfunction warnDisabledLoadingBoundary() {\n  if (!hasWarnedDisabledLoadingBoundary) {\n    hasWarnedDisabledLoadingBoundary = true;\n    console.warn(\n      `LoadingBoundary feature is not enabled. To use the LoadingBoundary component make sure to upgrade your @plasmicapp/* dependencies to the latest version and to wrap you App inside <PlasmicRootProvider />`\n    );\n  }\n}\n\nexport function LoadingBoundary({\n  children,\n  forceLoading,\n  loadingState,\n}: LoadingBoundaryProps) {\n  const isClient = useIsClient();\n  const enableLoadingBoundary = !!useDataEnv()?.[enableLoadingBoundaryKey];\n\n  if ((!isClient && !plasmicQuery.isPlasmicPrepass?.()) || forceLoading) {\n    return <>{loadingState ?? null}</>;\n  }\n\n  if (reactMajorVersion < 18) {\n    return <>{children ?? null}</>;\n  }\n\n  if (!enableLoadingBoundary) {\n    warnDisabledLoadingBoundary();\n    return <>{children ?? null}</>;\n  }\n\n  return (\n    <Suspense fallback={<>{loadingState ?? null}</>}>\n      <DataProvider hidden name={hasLoadingBoundaryKey} data={true}>\n        {children ?? null}\n      </DataProvider>\n    </Suspense>\n  );\n}\n\nexport const loadingBoundaryMeta: ComponentMeta<LoadingBoundaryProps> = {\n  name: \"hostless-loading-boundary\",\n  displayName: \"Loading Boundary\",\n  importName: \"LoadingBoundary\",\n  importPath: \"@plasmicpkgs/plasmic-basic-components\",\n  props: {\n    children: \"slot\",\n    loadingState: {\n      type: \"slot\",\n      displayName: \"Loading state\",\n      defaultValue: {\n        type: \"text\",\n        value: \"Loading...\",\n      },\n    },\n    forceLoading: {\n      type: \"boolean\",\n      editOnly: true,\n      displayName: \"Preview loading\",\n      description:\n        \"Force preview the 'Loading' state - impacts only editor, and not published page behavior\",\n    },\n  },\n  providesData: true,\n  styleSections: false,\n  description: \"Handle the loading state of queries and integrations\",\n};\n\nexport function registerLoadingBoundary(\n  loader?: { registerComponent: typeof registerComponent },\n  customLoadingBoundaryMeta?: ComponentMeta<LoadingBoundaryProps>\n) {\n  if (loader) {\n    loader.registerComponent(\n      LoadingBoundary,\n      customLoadingBoundaryMeta ?? loadingBoundaryMeta\n    );\n  } else {\n    registerComponent(\n      LoadingBoundary,\n      customLoadingBoundaryMeta ?? loadingBoundaryMeta\n    );\n  }\n}\n","import {\n  ComponentMeta,\n  DataProvider,\n  registerComponent,\n  repeatedElement,\n} from \"@plasmicapp/host\";\nimport React from \"react\";\n\nconst thisModule = \"@plasmicpkgs/plasmic-basic-components\";\n\nconst defaultItemName = \"currentItem\";\nconst defaultIndexName = \"currentIndex\";\n\ninterface RepeaterProps<T> {\n  children: React.ReactNode;\n  items: T[];\n  itemName?: string;\n  indexName?: string;\n}\n\nexport function Repeater<T>(props: RepeaterProps<T>) {\n  const { children, items, itemName, indexName } = props;\n\n  if (!Array.isArray(items)) {\n    throw new Error(\"Repeater received an invalid collection: not an array.\");\n  }\n\n  return (\n    <>\n      {items.map((item, index) => (\n        <DataProvider\n          key={index.toString()}\n          name={itemName || defaultItemName}\n          data={item}\n        >\n          <DataProvider name={indexName || defaultIndexName} data={index}>\n            {repeatedElement(index, children)}\n          </DataProvider>\n        </DataProvider>\n      ))}\n    </>\n  );\n}\n\nexport const repeaterMeta: ComponentMeta<RepeaterProps<any>> = {\n  name: `plasmic-repeater`,\n  displayName: \"Repeater\",\n  importName: \"Repeater\",\n  importPath: thisModule,\n  providesData: true,\n  props: {\n    children: {\n      type: \"slot\",\n      isRepeated: true,\n    },\n    items: {\n      type: \"array\",\n      defaultValue: [1, 2, 3],\n      displayName: \"Collection\",\n      description: \"Items array (JavaScript expression).\",\n    },\n    itemName: {\n      type: \"string\",\n      defaultValue: defaultItemName,\n      defaultValueHint: defaultItemName,\n      displayName: \"Item\",\n      description: \"Data context key for the current item.\",\n    },\n    indexName: {\n      type: \"string\",\n      defaultValue: defaultIndexName,\n      defaultValueHint: defaultIndexName,\n      displayName: \"Index\",\n      description: \"Data context key for the index of the current item.\",\n    },\n  },\n};\n\nexport function registerRepeater(\n  loader?: { registerComponent: typeof registerComponent },\n  customRepeaterMeta?: ComponentMeta<RepeaterProps<any>>\n) {\n  if (loader) {\n    loader.registerComponent(Repeater, customRepeaterMeta ?? repeaterMeta);\n  } else {\n    registerComponent(Repeater, customRepeaterMeta ?? repeaterMeta);\n  }\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React, {\n  ReactNode,\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nexport function useDirectionalIntersection({\n  ref,\n  scrollDownThreshold = 0.5,\n  scrollUpThreshold = 0,\n}: {\n  ref: RefObject<HTMLElement>;\n  scrollDownThreshold?: number;\n  scrollUpThreshold?: number;\n}) {\n  const [revealed, setRevealed] = useState(false);\n  useEffect(() => {\n    if (ref.current && typeof IntersectionObserver === \"function\") {\n      const handler = (entries: IntersectionObserverEntry[]) => {\n        if (entries[0].intersectionRatio >= scrollDownThreshold) {\n          setRevealed(true);\n        } else if (entries[0].intersectionRatio <= scrollUpThreshold) {\n          setRevealed(false);\n        }\n      };\n\n      const observer = new IntersectionObserver(handler, {\n        root: null,\n        rootMargin: \"0%\",\n        threshold: [scrollUpThreshold, scrollDownThreshold],\n      });\n      observer.observe(ref.current);\n\n      return () => {\n        setRevealed(false);\n        observer.disconnect();\n      };\n    }\n    return () => {};\n  }, [ref.current, scrollDownThreshold, scrollUpThreshold]);\n  return revealed;\n}\n\nexport interface ScrollRevealerProps {\n  children?: ReactNode;\n  className?: string;\n  scrollUpThreshold?: number;\n  scrollDownThreshold?: number;\n}\n\n/**\n * Unlike react-awesome-reveal, ScrollRevealer:\n *\n * - has configurable thresholds\n * - triggers arbitrary render/unrender animations\n *\n * TODO: Merge this inta a general Reveal component, perhaps forking react-awesome-reveal, so that we don't have two different reveal components for users.\n */\nexport function ScrollRevealer({\n  children,\n  className,\n  scrollDownThreshold = 0.5,\n  scrollUpThreshold = 0,\n}: ScrollRevealerProps) {\n  const intersectionRef = useRef<HTMLDivElement>(null);\n  const revealed = useDirectionalIntersection({\n    ref: intersectionRef,\n    scrollUpThreshold,\n    scrollDownThreshold,\n  });\n  return (\n    <div className={className} ref={intersectionRef}>\n      {revealed ? children : null}\n    </div>\n  );\n}\n\nexport const scrollRevealerMeta: ComponentMeta<ScrollRevealerProps> = {\n  name: \"hostless-scroll-revealer\",\n  importName: \"ScrollRevealer\",\n  displayName: \"Scroll Revealer\",\n  importPath: \"@plasmicpkgs/plasmic-basic-components\",\n  props: {\n    children: \"slot\",\n    scrollDownThreshold: {\n      type: \"number\",\n      displayName: \"Scroll down threshold\",\n      defaultValueHint: 0.5,\n      description:\n        \"How much of the element (as a fraction) must you scroll into view for it to appear (defaults to 0.5)\",\n    },\n    scrollUpThreshold: {\n      type: \"number\",\n      displayName: \"Scroll up threshold\",\n      defaultValueHint: 0,\n      description:\n        \"While scrolling up, how much of the element (as a fraction) can still be scrolled in view before it disappears (defaults to 0, meaning you must scroll up until it's completely out of view)\",\n    },\n  },\n  defaultStyles: {\n    width: \"stretch\",\n    maxWidth: \"100%\",\n  },\n};\n\nexport function registerScrollRevealer(\n  loader?: { registerComponent: typeof registerComponent },\n  customScrollRevealerMeta?: ComponentMeta<ScrollRevealerProps>\n) {\n  if (loader) {\n    loader.registerComponent(\n      ScrollRevealer,\n      customScrollRevealerMeta ?? scrollRevealerMeta\n    );\n  } else {\n    registerComponent(\n      ScrollRevealer,\n      customScrollRevealerMeta ?? scrollRevealerMeta\n    );\n  }\n}\n","import registerComponent, {\n  CodeComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\n\nexport interface SideEffectProps {\n  onMount?: () => Promise<void>;\n  onUnmount?: () => Promise<void>;\n  deps?: unknown[];\n}\n\nexport function SideEffect({ deps, onMount, onUnmount }: SideEffectProps) {\n  React.useEffect(() => {\n    onMount?.();\n    return () => {\n      onUnmount?.();\n    };\n  }, deps ?? []);\n  return null;\n}\n\nexport const sideEffectMeta: CodeComponentMeta<SideEffectProps> = {\n  name: \"hostless-side-effect\",\n  displayName: \"Side Effect\",\n  description: \"Run actions on load, unload, and when data changes.\",\n  importName: \"SideEffect\",\n  importPath: \"@plasmicpkgs/plasmic-basic-components\",\n  props: {\n    onMount: {\n      type: \"eventHandler\",\n      displayName: \"On load\",\n      description: \"Actions to run when this Side Effect component is mounted.\",\n      argTypes: [],\n    },\n    onUnmount: {\n      type: \"eventHandler\",\n      displayName: \"On unload\",\n      description:\n        \"Actions to run when this Side Effect component is unmounted.\",\n      argTypes: [],\n    },\n    deps: {\n      type: \"array\",\n      displayName: \"When data changes\",\n      description:\n        \"List of values which should trigger a re-run of the actions if changed.\",\n    },\n  },\n};\n\nexport function registerSideEffect(\n  loader?: { registerComponent: typeof registerComponent },\n  customMeta?: CodeComponentMeta<SideEffectProps>\n) {\n  if (loader) {\n    loader.registerComponent(SideEffect, customMeta ?? sideEffectMeta);\n  } else {\n    registerComponent(SideEffect, customMeta ?? sideEffectMeta);\n  }\n}\n","import registerComponent, {\n  CodeComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"./common\";\n\nexport interface TimerProps {\n  onTick: () => void;\n  isRunning?: boolean;\n  intervalSeconds?: number;\n  runWhileEditing: boolean;\n  \"data-plasmic-canvas-envs\"?: number;\n}\n\nexport function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback);\n\n  // Remember the latest callback if it changes.\n  useIsomorphicLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    // Note: 0 is a valid value for delay.\n    if (!delay && delay !== 0) {\n      return;\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay);\n\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport function Timer({\n  intervalSeconds = 1,\n  isRunning = false,\n  onTick = () => {},\n  runWhileEditing,\n  \"data-plasmic-canvas-envs\": canvasId,\n}: TimerProps) {\n  const isEditMode = useMemo(() => canvasId !== undefined, [canvasId]);\n  useInterval(\n    onTick,\n    // Delay in milliseconds or null to stop it\n    isRunning && (isEditMode ? runWhileEditing : true)\n      ? intervalSeconds * 1000\n      : null\n  );\n  return null;\n}\n\nexport const timerMeta: CodeComponentMeta<TimerProps> = {\n  name: \"hostless-timer\",\n  displayName: \"Timer\",\n  description: \"Run something periodically\",\n  importName: \"Timer\",\n  importPath: \"@plasmicpkgs/plasmic-basic-components\",\n  props: {\n    onTick: {\n      type: \"eventHandler\",\n      displayName: \"Run this every interval\",\n      description: \"Actions to run periodically\",\n      argTypes: [],\n    },\n    isRunning: {\n      type: \"boolean\",\n      displayName: \"Is Running?\",\n      defaultValue: true,\n    },\n    runWhileEditing: {\n      type: \"boolean\",\n      displayName: \"Run while editing\",\n      description:\n        \"Normally this only runs in the live site or in preview mode, but you can force it to run even while you are editing in the canvas (Please enable interactive mode to observe state changes)\",\n      defaultValue: false,\n    },\n    intervalSeconds: {\n      type: \"number\",\n      displayName: \"Interval (seconds)\",\n      description: \"Interval in seconds\",\n    },\n  },\n};\n\nexport function registerTimer(\n  loader?: { registerComponent: typeof registerComponent },\n  customMeta?: CodeComponentMeta<TimerProps>\n) {\n  if (loader) {\n    loader.registerComponent(Timer, customMeta ?? timerMeta);\n  } else {\n    registerComponent(Timer, customMeta ?? timerMeta);\n  }\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport React from \"react\";\n\nexport type VideoProps = Pick<\n  React.ComponentProps<\"video\">,\n  | \"autoPlay\"\n  | \"controls\"\n  | \"loop\"\n  | \"muted\"\n  | \"playsInline\"\n  | \"poster\"\n  | \"preload\"\n  | \"src\"\n>;\n\nexport const Video = React.forwardRef<HTMLVideoElement, VideoProps>(\n  (props: VideoProps, ref) => {\n    return <video ref={ref} {...props} />;\n  }\n);\n\nexport const videoMeta: ComponentMeta<VideoProps> = {\n  name: \"hostless-html-video\",\n  importName: \"Video\",\n  displayName: \"HTML Video\",\n  importPath: \"@plasmicpkgs/plasmic-basic-components\",\n  props: {\n    src: {\n      type: \"string\",\n      defaultValue:\n        \"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm\",\n      displayName: \"Source URL\",\n      description: \"URL to a video file.\",\n    },\n    autoPlay: {\n      type: \"boolean\",\n      displayName: \"Auto Play\",\n      description:\n        \"Whether the video show automatically start playing when the player loads. Chrome and other browsers require 'muted' to also be set for 'autoplay' to work.\",\n      helpText: \"Requires 'Muted' to also be set for 'Auto Play' to work.\",\n    },\n    controls: {\n      type: \"boolean\",\n      displayName: \"Show Controls\",\n      description: \"Whether the video player controls should be displayed\",\n      defaultValue: true,\n    },\n    playsInline: {\n      type: \"boolean\",\n      displayName: \"Plays inline\",\n      description:\n        \"Usually on mobile, when tilted landscape, videos can play fullscreen. Turn this on to prevent that.\",\n    },\n    loop: {\n      type: \"boolean\",\n      displayName: \"Loop\",\n      description: \"Whether the video should be played again after it finishes\",\n    },\n    muted: {\n      type: \"boolean\",\n      displayName: \"Muted\",\n      description: \"Whether audio should be muted\",\n    },\n    poster: {\n      type: \"imageUrl\",\n      displayName: \"Poster (placeholder) image\",\n      description: \"Image to show while video is downloading\",\n    },\n    preload: {\n      type: \"choice\",\n      options: [\"none\", \"metadata\", \"auto\"],\n      displayName: \"Preload\",\n      description:\n        \"Whether to preload nothing, metadata only, or the full video\",\n    },\n  },\n  defaultStyles: {\n    height: \"hug\",\n    width: \"640px\",\n    maxWidth: \"100%\",\n  },\n};\n\nexport function registerVideo(\n  loader?: { registerComponent: typeof registerComponent },\n  customVideoMeta?: ComponentMeta<VideoProps>\n) {\n  if (loader) {\n    loader.registerComponent(Video, customVideoMeta ?? videoMeta);\n  } else {\n    registerComponent(Video, customVideoMeta ?? videoMeta);\n  }\n}\n"],"names":["ConditionGuardOnNotSatisfied","_ref","onNotSatisfied","ref","React","useRef","useEffect","current","ConditionGuard","_ref3","skipPaths","pathname","currentPath","plasmicPathname","children","condition","window","location","origin","globalThis","_globalThis$__PLASMIC","call","some","_ref2","path","conditionGuardMeta","name","displayName","description","importName","importPath","props","type","helpText","defaultValue","argTypes","itemType","fields","nameFunc","item","thisModule","DynamicElement","tag","_ref$tag","className","propSelectors","_objectWithoutPropertiesLoose","_excluded","computed","_useSelectors","createElement","_extends","DynamicText","selector","_excluded2","DynamicImage","_excluded3","loading","style","objectFit","src","DynamicRepeater","_ref4","loopItemName","keySelector","data","finalData","_ref5","_useSelector","map","index","_applySelector2","_DataProvider","key","_applySelector","repeatedElement","dynamicRepeaterProps","isRepeated","dynamicRepeaterMeta","dataProviderMeta","providesData","birthYear","profilePicture","dynamicPropsWithoutTag","defaultValueHint","dynamicProps","dynamicElementMeta","dynamicTextMeta","dynamicImageMeta","ensure","x","Error","useIsomorphicLayoutEffect","useLayoutEffect","useId","Embed","code","_ref$hideInEditor","hideInEditor","rootElt","inEditor","usePlasmicCanvasContext","htmlId","firstRender","useFirstRender","makePlasmicVarName","cleanup","_regeneratorRuntime","mark","_callee","_loop","_ret","_i","_Array$from","wrap","_context2","prev","next","oldScript","newScript","_context","document","async","Array","from","attributes","forEach","attr","setAttribute","value","appendChild","createTextNode","innerHTML","parentNode","replaceChild","Promise","resolve","addEventListener","abrupt","v","stop","querySelectorAll","length","delegateYield","t0","effectiveCode","id","addIdentifierScript","dangerouslySetInnerHTML","__html","whiteSpace","replace","embedMeta","lang","editOnly","defaultStyles","maxWidth","Iframe","preview","srcDoc","useHtml","onLoad","useContext","PlasmicCanvasContext","position","top","left","right","bottom","background","color","fontSize","fontFamily","fontWeight","display","alignItems","justifyContent","overflow","iframeMeta","advanced","hidden","width","height","reactMajorVersion","version","split","console","warn","hasWarnedDisabledLoadingBoundary","LoadingBoundary","_useState","loaded","setLoaded","forceLoading","loadingState","isClient","useState","enableLoadingBoundary","_useDataEnv","useDataEnv","plasmicQuery","Suspense","fallback","DataProvider","loadingBoundaryMeta","styleSections","Repeater","items","itemName","indexName","isArray","toString","repeaterMeta","useDirectionalIntersection","_ref$scrollDownThresh","scrollDownThreshold","_ref$scrollUpThreshol","scrollUpThreshold","revealed","setRevealed","IntersectionObserver","observer","entries","intersectionRatio","root","rootMargin","threshold","observe","disconnect","ScrollRevealer","_ref2$scrollDownThres","_ref2$scrollUpThresho","intersectionRef","scrollRevealerMeta","SideEffect","deps","onMount","onUnmount","sideEffectMeta","useInterval","callback","delay","savedCallback","setInterval","clearInterval","Timer","intervalSeconds","_ref$intervalSeconds","_ref$isRunning","isRunning","_ref$onTick","onTick","runWhileEditing","canvasId","isEditMode","useMemo","undefined","timerMeta","Video","forwardRef","videoMeta","autoPlay","controls","playsInline","loop","muted","poster","preload","options","apply","arguments","loader","customConditionGuardMeta","registerComponent","customDataProviderMeta","customDynamicElementMeta","customDynamicImageMeta","customDynamicRepeaterMeta","customDynamicTextMeta","customEmbedMeta","customIframeMeta","customLoadingBoundaryMeta","customRepeaterMeta","customScrollRevealerMeta","customMeta","customVideoMeta"],"mappings":"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"}