import { Calendar } from "antd";
import React from "react";
import { BaseColumnConfig, FieldfulProps, RowFunc } from "../field-mappings";
type RichCalendarPropsBase = Omit<React.ComponentProps<typeof Calendar>, "value" | "defaultValue" | "validRange">;
export interface RichCalendarProps extends FieldfulProps<EventsConfig>, RichCalendarPropsBase {
    color: EventsConfig[];
    date: EventsConfig[];
    title: EventsConfig[];
    value: string;
    defaultValue: string;
    validRange: [string | undefined, string | undefined] | undefined;
}
export declare function RichCalendar(props: RichCalendarProps): React.JSX.Element;
interface StyleConfig {
    styles: Record<string, any>;
    align: "left" | "center" | "right";
    freeze: "off" | "left" | "right";
}
declare const roles: readonly ["date", "title", "color", "unset"];
export type Role = (typeof roles)[number];
export type EventsConfig = BaseColumnConfig & {
    isEditableExpr: RowFunc<boolean>;
    disableSorting: boolean;
    sortByExpr?: RowFunc<any>;
    formatting: StyleConfig;
    /**
     * The default inferred role, not the actual user-set role.
     */
    role: undefined | Role | "unset";
};
export {};
