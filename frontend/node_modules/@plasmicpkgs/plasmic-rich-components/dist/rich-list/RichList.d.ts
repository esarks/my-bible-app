import type { GetRowKey } from "antd/es/table/interface";
import React, { ReactNode } from "react";
import { BaseColumnConfig, FieldfulProps, RowFunc } from "../field-mappings";
export interface Action {
    type: "edit" | "view" | "delete" | "custom";
    label?: string;
    moreMenu?: boolean;
}
interface RowActionItem {
    type: "item";
    label: string;
    onClick: (rowKey: string, row: any) => void;
}
interface RowActionMenu {
    type: "menu";
    label: string;
    children?: RowActionItem[];
}
type RowAction = RowActionItem | RowActionMenu;
export interface RichListProps extends FieldfulProps<ListColumnConfig> {
    size?: "default" | "large" | "small";
    header?: ReactNode;
    footer?: ReactNode;
    bordered?: boolean;
    pagination?: boolean;
    rowKey?: string | GetRowKey<any>;
    rowActions?: RowAction[];
    onRowClick?: (rowKey: string, row: any, event: React.MouseEvent) => void;
    pageSize?: number;
    hideSearch?: boolean;
    /** ListColumnConfig is obsolete for linkTo */
    linkTo?: ListColumnConfig | ((row: any) => string);
    image?: ListColumnConfig;
    title?: ListColumnConfig[];
    subtitle?: ListColumnConfig[];
    beforeTitle?: ListColumnConfig[];
    afterTitle?: ListColumnConfig[];
    content?: ListColumnConfig[];
    type?: "grid" | "list";
}
export declare function RichList(props: RichListProps): React.JSX.Element;
interface StyleConfig {
    styles: Record<string, any>;
    align: "left" | "center" | "right";
    freeze: "off" | "left" | "right";
}
declare const roles: readonly ["content", "title", "subtitle", "beforeTitle", "afterTitle", "image", "unset"];
export type Role = (typeof roles)[number];
export type ListColumnConfig = BaseColumnConfig & {
    isEditableExpr: RowFunc<boolean>;
    disableSorting: boolean;
    sortByExpr?: RowFunc<any>;
    formatting: StyleConfig;
    /**
     * The default inferred role, not the actual user-set role.
     */
    role: undefined | Role | "unset";
};
export {};
