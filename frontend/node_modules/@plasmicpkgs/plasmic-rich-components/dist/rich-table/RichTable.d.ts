import type { SizeType } from "antd/es/config-provider/SizeContext";
import type { GetRowKey } from "antd/es/table/interface";
import React, { ReactNode } from "react";
import { BaseColumnConfig, FieldfulProps, RowFunc } from "../field-mappings";
import { RowAction } from "../field-react-utils";
export interface Action {
    type: "edit" | "view" | "delete" | "custom";
    label?: string;
    moreMenu?: boolean;
}
export interface RichTableProps extends FieldfulProps<TableColumnConfig> {
    defaultSize?: SizeType;
    pagination?: boolean;
    canSelectRows?: "none" | "click" | "single" | "multiple";
    selectedRowKey?: string;
    selectedRowKeys?: string[];
    onRowSelectionChanged?: (rowKeys: string[], rows: any[]) => void;
    onRowClick?: (rowKey: string, row: any, event: React.MouseEvent) => void;
    rowKey?: string | GetRowKey<any>;
    rowActions?: RowAction[];
    title?: ReactNode;
    addHref?: string;
    actions?: Action[];
    customActionChildren?: ReactNode;
    pageSize?: number;
    hideSearch?: boolean;
    hideDensity?: boolean;
    hideColumnPicker?: boolean;
    hideExports?: boolean;
    hideSelectionBar?: boolean;
    scopeClassName?: string;
    themeResetClassName?: string;
}
export declare function RichTable(props: RichTableProps): React.JSX.Element | null;
interface StyleConfig {
    styles: Record<string, any>;
    align: "left" | "center" | "right";
    freeze: "off" | "left" | "right";
}
export type TableColumnConfig = BaseColumnConfig & {
    isEditableExpr: RowFunc<boolean>;
    disableSorting: boolean;
    sortByExpr?: RowFunc<any>;
    formatting: StyleConfig;
};
export {};
