{"version":3,"file":"utils-c32bd7ed.esm.js","sources":["../src/utils.tsx"],"sourcesContent":["import {\n  ComponentMeta,\n  default as registerComponent,\n} from \"@plasmicapp/host/registerComponent\";\nimport {\n  default as registerGlobalContext,\n  GlobalContextMeta,\n} from \"@plasmicapp/host/registerGlobalContext\";\nimport { default as registerToken } from \"@plasmicapp/host/registerToken\";\nimport { parseDate } from \"@plasmicpkgs/luxon-parser\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport React from \"react\";\n\nexport type Registerable = {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n  registerToken: typeof registerToken;\n};\n\nexport function makeRegisterComponent<T extends React.ComponentType<any>>(\n  component: T,\n  meta: ComponentMeta<React.ComponentProps<T>>\n) {\n  return function (loader?: Registerable) {\n    registerComponentHelper(loader, component, meta);\n  };\n}\n\nexport function makeRegisterGlobalContext<T extends React.ComponentType<any>>(\n  component: T,\n  meta: GlobalContextMeta<React.ComponentProps<T>>\n) {\n  return function (loader?: Registerable) {\n    if (loader) {\n      loader.registerGlobalContext(component, meta);\n    } else {\n      registerGlobalContext(component, meta);\n    }\n  };\n}\n\nexport function registerComponentHelper<T extends React.ComponentType<any>>(\n  loader: Registerable | undefined,\n  component: T,\n  meta: ComponentMeta<React.ComponentProps<T>>\n) {\n  if (loader) {\n    loader.registerComponent(component, meta);\n  } else {\n    registerComponent(component, meta);\n  }\n}\n\ntype ReactElt = {\n  children: ReactElt | ReactElt[];\n  props: {\n    children: ReactElt | ReactElt[];\n    [prop: string]: any;\n  } | null;\n  type: React.ComponentType<any> | null;\n  key: string | null;\n} | null;\n\nexport function traverseReactEltTree(\n  children: React.ReactNode,\n  callback: (elt: ReactElt) => void\n) {\n  const rec = (elts: ReactElt | ReactElt[] | null) => {\n    (Array.isArray(elts) ? elts : [elts]).forEach((elt) => {\n      if (elt) {\n        callback(elt);\n        if (elt.children) {\n          rec(elt.children);\n        }\n        if (elt.props?.children && elt.props.children !== elt.children) {\n          rec(elt.props.children);\n        }\n      }\n    });\n  };\n  rec(children as any);\n}\n\nexport function asArray<T>(x: T[] | T | undefined | null) {\n  if (Array.isArray(x)) {\n    return x;\n  } else if (x == null) {\n    return [];\n  } else {\n    return [x];\n  }\n}\n\nexport function ensureNumber(x: number | string): number {\n  return x as number;\n}\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    throw new Error(\"Expected non-null or non-undefined value\");\n  }\n  return x;\n}\n\nexport function isOneOf<T, U extends T>(elem: T, arr: readonly U[]): elem is U {\n  return arr.includes(elem as any);\n}\n\nexport function maybe<T, U>(\n  x: T | undefined | null,\n  f: (y: T) => U\n): U | undefined {\n  if (x === undefined || x === null) return undefined;\n  return f(x);\n}\n\n/**\n *\n * @param str iso string\n * @param extendedOnly boolean for extended mode (i.e. time)\n * @returns Returns true for strings in ISO 8601 format\n */\nexport function isValidIsoDate(str: string | undefined, extendedOnly = false) {\n  if (!str) return false;\n  if (typeof str !== \"string\") return false;\n  if (str.includes(\" \")) return false; // spaces not supported\n  if (str.length === 10) {\n    if (extendedOnly) return false;\n    dayjs.extend(customParseFormat);\n    return dayjs(str, \"YYYY-MM-DD\", true).isValid();\n  }\n  if (!dayjs(str).isValid()) return false; // should be a valid dayjs date\n  if (isNaN(new Date(str).getTime())) return false; // should be a valid js date\n  return true;\n}\n\nexport function isLikeDate(value: unknown) {\n  const parsed = parseDate(value);\n  return parsed ? true : false;\n}\n\nexport function isLikeImage(value: unknown) {\n  return typeof value === \"string\"\n    ? value.match(/\\.(png|jpg|jpeg|gif|svg|webp|avif|ico|bmp|tiff)$/i)\n    : false;\n}\n\nexport function isLikeColor(value: unknown) {\n  if (typeof value !== \"string\") return false;\n\n  const hex =\n    /^#?([0-9a-fA-F]{3}([0-9a-fA-F]{3})?|[0-9a-fA-F]{4}([0-9a-fA-F]{4})?)$/;\n  const rgba =\n    /^rgba?\\((\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*(,\\s*(1|0?(\\.\\d+)?))?\\s*)\\)$/;\n  const cssNamed =\n    /^(aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen)$/;\n  const hsla =\n    /^hsla?\\((\\s*\\d+(\\.\\d+)?\\s*,\\s*\\d+(\\.\\d+)?%\\s*,\\s*\\d+(\\.\\d+)?%\\s*(,\\s*(1|0?\\.\\d+))?\\s*)\\)$/;\n  const cmyk =\n    /^cmyka?\\((\\s*\\d+(\\.\\d+)?%\\s*,\\s*\\d+(\\.\\d+)?%\\s*,\\s*\\d+(\\.\\d+)?%\\s*,\\s*\\d+(\\.\\d+)?%\\s*(,\\s*(1|0?\\.\\d+))?\\s*)\\)$/;\n  const hsv =\n    /^hsva?\\((\\s*\\d+(\\.\\d+)?\\s*,\\s*\\d+(\\.\\d+)?%\\s*,\\s*\\d+(\\.\\d+)?%\\s*(,\\s*(1|0?\\.\\d+))?\\s*)\\)$/;\n\n  if (\n    value.match(hex) ||\n    value.match(rgba) ||\n    value.match(cssNamed) ||\n    value.match(hsla) ||\n    value.match(cmyk) ||\n    value.match(hsv)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\n// Some heuristics to avoid selecting a row when\n// the object clicked is interactable -- like button, anchor,\n// input, etc.  This won't be bulletproof, so just some\n// heuristics!\nexport function isInteractable(target: HTMLElement) {\n  if ([\"A\", \"BUTTON\", \"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(target.tagName)) {\n    return true;\n  }\n  if (target.contentEditable === \"true\") {\n    return true;\n  }\n\n  return false;\n}\n\nexport function ensureArray<T>(xs: T | T[]): T[] {\n  return Array.isArray(xs) ? xs : [xs];\n}\n\nexport const tuple = <T extends any[]>(...args: T): T => args;\n\nexport interface HasId {\n  id: string;\n}\n\nexport function mkIdMap<T extends HasId>(xs: ReadonlyArray<T>): Map<string, T> {\n  return new Map(xs.map((x) => tuple(x.id, x) as [string, T]));\n}\n\nexport const mkShortId = () => `${Math.random()}`;\n\nexport function withoutNils<T>(xs: Array<T | undefined | null>): T[] {\n  return xs.filter((x): x is T => x != null);\n}\n\nexport type Falsey = null | undefined | false | \"\" | 0 | 0n;\nexport type Truthy<T> = T extends Falsey ? never : T;\n\nexport function withoutFalsey<T>(xs: Array<T | Falsey>): T[] {\n  return xs.filter((x): x is T => !!x);\n}\n\n/**\n *\n * Forked from: https://github.com/ant-design/pro-components/blob/master/packages/utils/src/components/ErrorBoundary/index.tsx\n *\n */\nimport { Result } from \"antd\";\nimport type { ErrorInfo } from \"react\";\n\ninterface ErrorBoundaryProps {\n  children?: React.ReactNode;\n  canvasEnvId?: number;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  errorInfo: string;\n}\nexport class ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  state = { hasError: false, errorInfo: \"\" };\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, errorInfo: error.message };\n  }\n\n  componentDidCatch(error: any, errorInfo: ErrorInfo) {\n    // You can also log the error to an error reporting service\n    // eslint-disable-next-line no-console\n    console.log(error, errorInfo);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<ErrorBoundaryProps>,\n    prevState: Readonly<ErrorBoundaryState>\n  ) {\n    if (\n      prevProps.canvasEnvId !== this.props.canvasEnvId &&\n      prevState.hasError\n    ) {\n      this.setState({ hasError: false });\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <Result\n          status=\"error\"\n          title=\"Something went wrong.\"\n          extra={this.state.errorInfo}\n        />\n      );\n    }\n    return this.props.children;\n  }\n}\n"],"names":[],"mappings":"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"}