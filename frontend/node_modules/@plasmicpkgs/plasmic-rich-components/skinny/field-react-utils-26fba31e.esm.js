import { Dropdown } from 'antd';
import fastStringify from 'fast-stringify';
import React, { useState } from 'react';
import { e as ensure } from './utils-c32bd7ed.esm.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
function useSortedFilteredData(data, columns) {
  const [search, setSearch] = useState("");
  const [sortState, setSortState] = useState(void 0);
  const finalData = React.useMemo(() => {
    var _a;
    const filtered = (_a = data == null ? void 0 : data.data) == null ? void 0 : _a.filter(
      (row) => fastStringify(Object.values(row)).toLowerCase().includes(search.toLowerCase())
    );
    const sorted = (sortState == null ? void 0 : sortState.sorter.column) ? (
      // We use .sort() rather than sortBy to use localeCompare
      (() => {
        var _a2;
        const cconfig = columns.find(
          (cc) => {
            var _a3;
            return cc.key === ((_a3 = sortState == null ? void 0 : sortState.sorter.column) == null ? void 0 : _a3.key);
          }
        );
        const expr = (_a2 = cconfig.expr) != null ? _a2 : (x) => x;
        return (filtered != null ? filtered : []).sort((aa, bb) => {
          var _a3, _b;
          const a = (_a3 = expr(aa, cconfig.fieldId ? aa == null ? void 0 : aa[cconfig.fieldId] : null)) != null ? _a3 : null, b = (_b = expr(bb, cconfig.fieldId ? bb == null ? void 0 : bb[cconfig.fieldId] : null)) != null ? _b : null;
          return typeof a === "string" ? a.localeCompare(b != null ? b : "") : typeof b === "string" ? -b.localeCompare(a != null ? a : "") : a - b;
        });
      })()
    ) : filtered;
    const reversed = (sortState == null ? void 0 : sortState.sorter.order) === "descend" ? sorted == null ? void 0 : sorted.reverse() : sorted;
    return reversed;
  }, [data, columns, sortState, search]);
  return {
    finalData,
    search,
    setSearch,
    setSortState
  };
}
function tagDataArray(xs) {
  return xs.map((x, i) => __spreadProps(__spreadValues({}, x), { __tag: i + 1 }));
}
function getTag(x) {
  return x.__tag;
}
function deriveRowKey(_data, rowKey) {
  if (rowKey) {
    return rowKey;
  }
  return (x) => {
    return ensure(getTag(x));
  };
}
function deriveKeyOfRow(row, rowKey) {
  if (typeof rowKey === "function") {
    return rowKey(row);
  } else if (typeof rowKey === "string") {
    return row[rowKey];
  } else {
    return void 0;
  }
}
function renderActions(rowActions, row, data, rowKey) {
  return rowActions.map((_action) => {
    var _a;
    if (_action.type === "item") {
      return /* @__PURE__ */ React.createElement(
        "a",
        {
          key: _action.label,
          style: {
            whiteSpace: "nowrap"
          },
          onClick: () => {
            var _a2;
            return (_a2 = _action.onClick) == null ? void 0 : _a2.call(
              _action,
              deriveKeyOfRow(row, deriveRowKey(data, rowKey)),
              row
            );
          }
        },
        _action.label
      );
    } else {
      return /* @__PURE__ */ React.createElement(
        Dropdown,
        {
          key: _action.label,
          menu: {
            items: ((_a = _action.children) != null ? _a : []).map((child) => ({
              key: child.label,
              label: child.label,
              onClick: () => {
                var _a2;
                return (_a2 = child.onClick) == null ? void 0 : _a2.call(
                  child,
                  deriveKeyOfRow(row, deriveRowKey(data, rowKey)),
                  row
                );
              }
            }))
          }
        },
        /* @__PURE__ */ React.createElement(
          "a",
          {
            href: "javascript: void 0",
            style: {
              whiteSpace: "nowrap"
            }
          },
          _action.label
        )
      );
    }
  });
}

export { deriveRowKey as a, deriveKeyOfRow as d, renderActions as r, tagDataArray as t, useSortedFilteredData as u };
//# sourceMappingURL=field-react-utils-26fba31e.esm.js.map
