{"version":3,"file":"index.esm.js","sources":["../../src/widgets.tsx","../../src/rich-layout/RichLayout.tsx","../../src/rich-layout/index.tsx"],"sourcesContent":["import React from \"react\";\nexport const AnchorLink = React.forwardRef(function AnchorLink(\n  props: React.ComponentProps<\"a\">,\n  ref: React.Ref<HTMLAnchorElement>\n) {\n  return <a {...props} ref={ref} />;\n});\n","import { LogoutOutlined } from \"@ant-design/icons\";\nimport type { MenuDataItem, ProLayoutProps } from \"@ant-design/pro-components\";\nimport { ProConfigProvider, ProLayout } from \"@ant-design/pro-components\";\nimport { useDataEnv, usePlasmicLink } from \"@plasmicapp/host\";\nimport { ConfigProvider, Dropdown, theme } from \"antd\";\nimport React, { ReactNode, useEffect, useRef, useState } from \"react\";\nimport { isLight, useIsClient } from \"../common\";\nimport { AnchorLink } from \"../widgets\";\n\nfunction omitUndefined(x: object) {\n  return Object.fromEntries(\n    Object.entries(x).filter(([k, v]) => v !== undefined)\n  );\n}\n\ninterface NavMenuItem extends Omit<MenuDataItem, \"routes\"> {\n  routes?: NavMenuItem[];\n}\n\nexport interface SimpleNavTheme {\n  scheme?: \"default\" | \"light\" | \"dark\" | \"custom\" | \"primary\";\n  customBgColor?: string;\n}\n\n/**\n * Filter items by condition, and add missing paths so that any added items are visible.\n */\nfunction processNavItems(navMenuItems: NavMenuItem[]): NavMenuItem[] {\n  return navMenuItems\n    .filter((item) => item.condition === undefined || item.condition)\n    .map((item) => ({\n      ...item,\n      // We fill a default path because otherwise the item doesn't appear at all.\n      path: item.path || \"/\",\n      routes: item.routes ? processNavItems(item.routes) : undefined,\n    }));\n}\n\nexport interface RichLayoutProps extends ProLayoutProps {\n  navMenuItems?: NavMenuItem[];\n  rootUrl?: string;\n  actionsChildren?: ReactNode;\n  footerChildren?: ReactNode;\n  avatarLabel?: string;\n  avatarImage?: string;\n  showAvatarMenu?: boolean;\n  simpleNavTheme?: SimpleNavTheme;\n  logoElement?: ReactNode;\n}\n\n// width: 100% needed because parent is display: flex, which is needed for the min-height behavior.\nconst baseStyles = `\n.ant-pro-layout-bg-list {\n  display: none;\n}\n.ant-pro-layout {\n  display: flex;\n  width: 100%;\n}\n.ant-pro-layout .ant-pro-layout-content {\n  padding: 0;\n}\n`;\n\nexport function RichLayout({\n  children,\n  navMenuItems,\n  rootUrl = \"/\",\n  actionsChildren,\n  footerChildren,\n  avatarLabel,\n  avatarImage,\n  showAvatarMenu,\n  className,\n  simpleNavTheme,\n  logo,\n  logoElement,\n  ...layoutProps\n}: RichLayoutProps) {\n  const $ctx = useDataEnv();\n  const ref = useRef<HTMLDivElement>(null);\n  const isClient = useIsClient();\n  const [pathname, setPathname] = useState<string | undefined>(undefined);\n  const [openKeys, setOpenKeys] = useState<string[]>([]);\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setReady(true);\n    }, 500);\n\n    if (typeof location !== \"undefined\") {\n      setPathname(location.pathname);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!ready) return;\n    if (!ref.current) return;\n    // open selected submenu (only opens the last one in the list!)\n    const selectedSubmenus: string[] =\n      (Array.from(\n        ref.current.querySelectorAll(\n          \"ul > li.ant-menu-submenu.ant-menu-submenu-selected > div\"\n        )\n      )\n        .map((el) => el.getAttribute(\"data-menu-id\")?.split(\"/\").pop())\n        .filter((i) => i)\n        .map((i) => `/${i}`) as string[]) || [];\n    setOpenKeys(selectedSubmenus);\n  }, [ready]);\n\n  // The usePlasmicLink function may be undefined, if host is not up to date\n  const PlasmicLink = usePlasmicLink?.() ?? AnchorLink;\n  const { token } = theme.useToken();\n  const origTextColor = token.colorTextBase;\n  function getNavBgColor(): string {\n    const scheme = simpleNavTheme?.scheme ?? \"default\";\n    switch (scheme) {\n      case \"primary\":\n        return token.colorPrimary;\n      case \"dark\":\n        // Ant default dark blue Menu color.\n        return \"#011528\";\n      case \"custom\":\n        return simpleNavTheme?.customBgColor ?? token.colorBgBase;\n      case \"light\":\n        // Just use this sorta ugly gray if using 'light' scheme in 'dark' mode.\n        // Otherwise using light scheme in light mode.\n        return \"#fff\";\n      case \"default\":\n        return token.colorBgBase || \"#fff\";\n    }\n  }\n  const navBgColor = getNavBgColor();\n  // Dynamically determine whether we need to change the text to black/white or not, based on background color.\n  // We don't want light-on-light or dark-on-dark, so if both isNavBgLight and isOrigTextLight are the same, then need to change.\n  // If no need to change, we leave text color as is.\n  const isNavBgLight = isLight(navBgColor);\n  const isOrigTextLight = isLight(origTextColor);\n  // Ant will interpret \"\" as defaulting to \"#fff\" for dark mode and \"#000\" in light mode.\n  const navTextColor = isNavBgLight !== isOrigTextLight ? undefined : \"\";\n  if (!isClient) {\n    return null;\n  }\n\n  const layoutColorOverrides = isNavBgLight\n    ? undefined\n    : {\n        colorBgCollapsedButton: navBgColor,\n        colorTextCollapsedButtonHover: \"rgba(255,255,255,0.85)\",\n        colorTextCollapsedButton: \"rgba(255,255,255,0.65)\",\n        colorMenuBackground: navBgColor,\n        colorBgMenuItemCollapsedHover: \"rgba(0,0,0,0.06)\",\n        colorBgMenuItemCollapsedSelected: \"rgba(0,0,0,0.15)\",\n        colorBgMenuItemCollapsedElevated: \"rgba(0,0,0,0.85)\",\n        colorMenuItemDivider: \"rgba(255,255,255,0.15)\",\n        colorBgMenuItemHover: \"rgba(0,0,0,0.06)\",\n        colorBgMenuItemSelected: \"rgba(0,0,0,0.15)\",\n        colorTextMenuSelected: \"#fff\",\n        colorTextMenuItemHover: \"rgba(255,255,255,0.75)\",\n        colorTextMenu: \"rgba(255,255,255,0.75)\",\n        colorTextMenuSecondary: \"rgba(255,255,255,0.65)\",\n        colorTextMenuTitle: \"rgba(255,255,255,0.95)\",\n        colorTextMenuActive: \"rgba(255,255,255,0.95)\",\n        colorTextSubMenuSelected: \"#fff\",\n      };\n  return (\n    <div ref={ref} className={className} style={{ display: \"flex\" }}>\n      {/* Remove the always-on fixed gradient background layer. */}\n      <style>{baseStyles}</style>\n      <ProLayout\n        {...layoutProps}\n        // This prevents setting a document title. Normally tries to set to either app title or page title (from routes meta).\n        pageTitleRender={() => \"\"}\n        logo={logo ?? logoElement}\n        // Theme just the header. If you simply pass in navTheme=realDark, it affects all main content as well.\n        //\n        // What we're doing is telling Ant to use the dark mode algorithm. However, dark mode algorithm doesn't change\n        // the seed tokens for colorTextBase and colorBgBase - it only fills in #fff and #000 for these if they are\n        // unset (\"\"). So that's why further up we may be setting the text color to \"\".\n        //\n        // I think it doesn't matter too much what is the colorBgBase, since we are setting (Pro-specific) `tokens`\n        // further down for actually setting the fill of the nav sections. What matters is the text color - if we're\n        // showing a dark background, then we want the text to be white.\n        //\n        // We could specify darkAlgorithm to ConfigProvider, but IIRC Pro might be setting some of its own tokens\n        // based on whether dark is being specified to the ProConfigProvider. So that's why we need that.\n        //\n        // ProConfigProvider does first read/inherit the theme/tokens from the surrounding ConfigProvider.\n        headerRender={(_props, defaultDom) => (\n          <ConfigProvider\n            theme={{ token: omitUndefined({ colorTextBase: navTextColor }) }}\n          >\n            <ProConfigProvider dark={!isNavBgLight}>\n              {defaultDom}\n            </ProConfigProvider>\n          </ConfigProvider>\n        )}\n        token={{\n          header: omitUndefined({\n            colorBgHeader: navBgColor,\n            ...layoutColorOverrides,\n          }),\n          // Ideally, we'd do something similar to headerRender above, and just specify general dark mode to specify\n          // whether all components/text should be light.\n          // But for some reason it doesn't work, causing the bg color to be ignored (just the default dark Menu color),\n          // *and* the text is just dark as well.\n          // Haven't yet been able to unravel the pro components code to figure out the proper way to do this, so just\n          // bluntly specifying tokens here, as recommended in some GitHub issue.\n          sider: omitUndefined({\n            colorMenuBackground: navBgColor,\n            ...layoutColorOverrides,\n          }),\n        }}\n        // Tweak defaults. ProLayout is janky and has terrible docs!\n        layout={layoutProps.layout ?? \"top\"}\n        fixedHeader={layoutProps.fixedHeader ?? false}\n        fixSiderbar={\n          // Doesn't stretch full height if you set this to false and you're in mix mode.\n          layoutProps.layout === \"mix\"\n            ? undefined\n            : layoutProps.fixSiderbar ?? false\n        }\n        // This is always needed if you want layout mix to have effect and look any different from layout side - not clear why this should ever be false.\n        splitMenus={layoutProps.layout === \"mix\"}\n        route={{\n          path: rootUrl,\n          routes: navMenuItems ? processNavItems(navMenuItems) : undefined,\n        }}\n        location={{\n          pathname,\n        }}\n        menu={{\n          // collapsedShowGroupTitle: true,\n          defaultOpenAll: false,\n          // hideMenuWhenCollapsed: true,\n        }}\n        avatarProps={\n          showAvatarMenu\n            ? {\n                src: avatarImage,\n                size: \"small\",\n                title: avatarLabel,\n                render: (_props, dom) => {\n                  return (\n                    <Dropdown\n                      menu={{\n                        items: [\n                          {\n                            key: \"logout\",\n                            icon: <LogoutOutlined />,\n                            label: \"Sign out\",\n                          },\n                        ],\n                      }}\n                    >\n                      {dom}\n                    </Dropdown>\n                  );\n                },\n              }\n            : undefined\n        }\n        actionsRender={(_props) => {\n          return [actionsChildren];\n        }}\n        menuFooterRender={(props) => {\n          if (props?.collapsed) return undefined;\n          return footerChildren;\n        }}\n        onMenuHeaderClick={(e) => console.log(e)}\n        openKeys={openKeys}\n        onOpenChange={(keys) =>\n          keys === false || !ready ? [] : setOpenKeys(keys)\n        }\n        selectedKeys={[$ctx?.pagePath]}\n        menuItemRender={(item, dom) => (\n          <PlasmicLink href={item.path}>{dom}</PlasmicLink>\n        )}\n        headerTitleRender={(logoEl, title, _) => {\n          return (\n            <PlasmicLink href={rootUrl}>\n              {logoEl}\n              {title}\n            </PlasmicLink>\n          );\n        }}\n      >\n        {children}\n      </ProLayout>\n    </div>\n  );\n}\n","import {\n  ComponentMeta,\n  JSONLikeType,\n} from \"@plasmicapp/host/registerComponent\";\nimport { capitalize } from \"../common\";\nimport { Registerable, registerComponentHelper } from \"../utils\";\nimport { RichLayout, RichLayoutProps } from \"./RichLayout\";\n\nexport * from \"./RichLayout\";\nexport default RichLayout;\n\nfunction generateNavMenuType(\n  isNested: boolean,\n  remainingDepth: number,\n  displayName?: string,\n  defaultValue?: any[]\n): object & JSONLikeType<any> {\n  return {\n    displayName: displayName ? displayName : \"Nested items\",\n    type: \"array\",\n    defaultValue,\n    advanced: isNested,\n    itemType: {\n      type: \"object\",\n      nameFunc: (item: any) =>\n        item.name || (!displayName ? \"Unnamed nested item\" : \"Unnamed item\"),\n      fields: {\n        path: \"href\",\n        name: \"string\",\n        condition: {\n          advanced: true,\n          displayName: \"Show only if\",\n          type: \"exprEditor\" as any,\n        },\n        ...(remainingDepth === 0\n          ? {}\n          : {\n              routes: generateNavMenuType(true, remainingDepth - 1),\n            }),\n      },\n    },\n  } as const;\n}\n\nconst richLayoutMeta: ComponentMeta<RichLayoutProps> = {\n  name: \"hostless-rich-layout\",\n  displayName: \"Rich App Layout\",\n  props: {\n    children: {\n      type: \"slot\",\n      unstable__isMainContentSlot: true,\n    },\n    actionsChildren: {\n      type: \"slot\",\n      hidePlaceholder: true,\n    },\n    title: {\n      displayName: \"Title\",\n      type: \"string\",\n      defaultValue: \"App title\",\n    },\n    logo: {\n      displayName: \"Logo\",\n      type: \"imageUrl\",\n      hidden: (ps) => !ps.logo,\n    },\n    logoElement: {\n      type: \"slot\",\n      displayName: \"Logo\",\n      defaultValue: {\n        type: \"img\",\n        src: \"https://static1.plasmic.app/fake-logo.svg\",\n      },\n      hidden: (ps) => !!ps.logo,\n    },\n    navMenuItems: generateNavMenuType(false, 2, \"Nav menu items\", [\n      {\n        path: \"/\",\n        name: \"Home\",\n      },\n    ]),\n\n    layout: {\n      displayName: \"Layout\",\n      type: \"choice\",\n      options: [\"side\", \"top\", \"mix\"].map((value) => ({\n        value,\n        label: capitalize(value),\n      })),\n      defaultValueHint: \"top\",\n    },\n\n    simpleNavTheme: {\n      displayName: \"Theme\",\n      type: \"object\",\n      fields: {\n        scheme: {\n          type: \"choice\",\n          options: [\"default\", \"primary\", \"light\", \"dark\", \"custom\"].map(\n            (v) => ({\n              label: capitalize(v),\n              value: v,\n            })\n          ),\n          defaultValueHint: \"default\",\n        },\n        customBgColor: {\n          type: \"color\",\n          displayName: \"Custom color\",\n          hidden: (props) => !(props.simpleNavTheme?.scheme === \"custom\"),\n          defaultValue: \"#D73B58\",\n        },\n      },\n    },\n\n    // Advanced, show later\n    /*\n    siderMenuType: {\n      displayName: \"Sidebar mode\",\n      type: \"choice\",\n      options: [\"sub\", \"group\"].map((value) => ({\n        value,\n        label: capitalize(value),\n      })),\n      defaultValue: \"sub\",\n    },\n    contentWidth: {\n      displayName: \"Content width\",\n      type: \"choice\",\n      options: [\"Fluid\", \"Fixed\"],\n      defaultValueHint: \"Fluid\",\n    },\n    */\n    fixedHeader: {\n      displayName: \"Sticky header\",\n      type: \"boolean\",\n      hidden: (ps) => (ps.layout ?? \"top\") !== \"top\",\n      defaultValueHint: false,\n    },\n    fixSiderbar: {\n      displayName: \"Sticky sidebar\",\n      type: \"boolean\",\n      hidden: (ps) => (ps.layout ?? \"top\") !== \"side\",\n      defaultValueHint: false,\n    },\n    /*\n    showAvatarMenu: {\n      displayName: \"Show avatar\",\n      type: \"boolean\",\n      defaultValue: true,\n    },\n    avatarLabel: {\n      displayName: \"Avatar label\",\n      type: \"string\",\n      defaultValue: \"User Name\",\n    },\n    avatarImage: {\n      displayName: \"Avatar image\",\n      type: \"imageUrl\",\n      defaultValue:\n        \"https://gw.alipayobjects.com/zos/antfincdn/efFD%24IOql2/weixintupian_20170331104822.jpg\",\n    },\n     */\n    menu: {\n      displayName: \"Menu\",\n      type: \"object\",\n      fields: {\n        defaultOpenAll: {\n          displayName: \"Default open all\",\n          type: \"boolean\",\n        },\n        hideMenuWhenCollapsed: {\n          // displayName: \"\",\n          type: \"boolean\",\n        },\n      },\n    },\n  },\n\n  defaultStyles: {\n    width: \"full-bleed\",\n    height: \"stretch\",\n    minHeight: \"100vh\",\n  },\n\n  importName: \"RichLayout\",\n  importPath: \"@plasmicpkgs/plasmic-rich-components/skinny/rich-layout\",\n};\n\nexport function registerRichLayout(loader?: Registerable) {\n  registerComponentHelper(loader, RichLayout, richLayoutMeta);\n}\n"],"names":["AnchorLink","__spreadProps","__spreadValues","_a","_b"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACO,MAAM,aAAa,KAAM,CAAA,UAAA,CAAW,SAASA,WAAAA,CAClD,OACA,GACA,EAAA;AACA,EAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,GAAA,EAAAC,eAAA,CAAAC,gBAAA,CAAA,EAAA,EAAM,KAAN,CAAA,EAAA,EAAa,GAAU,EAAA,CAAA,CAAA,CAAA;AACjC,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGD,SAAS,cAAc,CAAW,EAAA;AAChC,EAAA,OAAO,MAAO,CAAA,WAAA;AAAA,IACZ,MAAA,CAAO,OAAQ,CAAA,CAAC,CAAE,CAAA,MAAA,CAAO,CAAC,CAAC,CAAG,EAAA,CAAC,CAAM,KAAA,CAAA,KAAM,KAAS,CAAA,CAAA;AAAA,GACtD,CAAA;AACF,CAAA;AAcA,SAAS,gBAAgB,YAA4C,EAAA;AACnE,EAAA,OAAO,YACJ,CAAA,MAAA,CAAO,CAAC,IAAA,KAAS,KAAK,SAAc,KAAA,KAAA,CAAA,IAAa,IAAK,CAAA,SAAS,CAC/D,CAAA,GAAA,CAAI,CAAC,IAAA,KAAU,mCACX,IADW,CAAA,EAAA;AAAA;AAAA,IAGd,IAAA,EAAM,KAAK,IAAQ,IAAA,GAAA;AAAA,IACnB,QAAQ,IAAK,CAAA,MAAA,GAAS,eAAgB,CAAA,IAAA,CAAK,MAAM,CAAI,GAAA,KAAA,CAAA;AAAA,GACrD,CAAA,CAAA,CAAA;AACN,CAAA;AAeA,MAAM,UAAa,GAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAA,CAAA;AAaZ,SAAS,WAAW,EAcP,EAAA;AAdO,EACzB,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA,QAAA;AAAA,IACA,YAAA;AAAA,IACA,OAAU,GAAA,GAAA;AAAA,IACV,eAAA;AAAA,IACA,cAAA;AAAA,IACA,WAAA;AAAA,IACA,WAAA;AAAA,IACA,cAAA;AAAA,IACA,SAAA;AAAA,IACA,cAAA;AAAA,IACA,IAAA;AAAA,IACA,WAAA;AAAA,GA5EF,GAgE2B,EAatB,EAAA,WAAA,GAAA,SAAA,CAbsB,EAatB,EAAA;AAAA,IAZH,UAAA;AAAA,IACA,cAAA;AAAA,IACA,SAAA;AAAA,IACA,iBAAA;AAAA,IACA,gBAAA;AAAA,IACA,aAAA;AAAA,IACA,aAAA;AAAA,IACA,gBAAA;AAAA,IACA,WAAA;AAAA,IACA,gBAAA;AAAA,IACA,MAAA;AAAA,IACA,aAAA;AAAA,GAAA,CAAA,CAAA;AA5EF,EAAA,IAAAC,KAAAC,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AA+EE,EAAA,MAAM,OAAO,UAAW,EAAA,CAAA;AACxB,EAAM,MAAA,GAAA,GAAM,OAAuB,IAAI,CAAA,CAAA;AACvC,EAAA,MAAM,WAAW,WAAY,EAAA,CAAA;AAC7B,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAI,SAA6B,KAAS,CAAA,CAAA,CAAA;AACtE,EAAA,MAAM,CAAC,QAAU,EAAA,WAAW,CAAI,GAAA,QAAA,CAAmB,EAAE,CAAA,CAAA;AACrD,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAI,SAAS,KAAK,CAAA,CAAA;AACxC,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,UAAA,CAAW,MAAM;AACf,MAAA,QAAA,CAAS,IAAI,CAAA,CAAA;AAAA,OACZ,GAAG,CAAA,CAAA;AAEN,IAAI,IAAA,OAAO,aAAa,WAAa,EAAA;AACnC,MAAA,WAAA,CAAY,SAAS,QAAQ,CAAA,CAAA;AAAA,KAC/B;AAAA,GACF,EAAG,EAAE,CAAA,CAAA;AAEL,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,KAAA;AAAO,MAAA,OAAA;AACZ,IAAA,IAAI,CAAC,GAAI,CAAA,OAAA;AAAS,MAAA,OAAA;AAElB,IAAA,MAAM,mBACH,KAAM,CAAA,IAAA;AAAA,MACL,IAAI,OAAQ,CAAA,gBAAA;AAAA,QACV,0DAAA;AAAA,OACF;AAAA,KACF,CACG,GAAI,CAAA,CAAC,EAAI,KAAA;AAzGlB,MAAAD,IAAAA,GAAAA,CAAAA;AAyGqB,MAAAA,OAAAA,CAAAA,GAAAA,GAAA,GAAG,YAAa,CAAA,cAAc,MAA9B,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,GAAAA,CAAiC,MAAM,GAAK,CAAA,CAAA,GAAA,EAAA,CAAA;AAAA,KAAK,CAC7D,CAAA,MAAA,CAAO,CAAC,CAAA,KAAM,CAAC,CAAA,CACf,GAAI,CAAA,CAAC,CAAM,KAAA,CAAA,CAAA,EAAI,CAAG,CAAA,CAAA,CAAA,IAAkB,EAAC,CAAA;AAC1C,IAAA,WAAA,CAAY,gBAAgB,CAAA,CAAA;AAAA,GAC9B,EAAG,CAAC,KAAK,CAAC,CAAA,CAAA;AAGV,EAAA,MAAM,eAAcC,GAAAD,GAAAA,CAAAA,GAAAA,GAAA,cAAAA,KAAAA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,GAAAA,EAAAA,KAAA,OAAAC,GAAsB,GAAA,UAAA,CAAA;AAC1C,EAAA,MAAM,EAAE,KAAA,EAAU,GAAA,KAAA,CAAM,QAAS,EAAA,CAAA;AACjC,EAAA,MAAM,gBAAgB,KAAM,CAAA,aAAA,CAAA;AAC5B,EAAA,SAAS,aAAwB,GAAA;AAnHnC,IAAA,IAAAD,GAAAC,EAAAA,GAAAA,CAAAA;AAoHI,IAAA,MAAM,MAASD,GAAAA,CAAAA,GAAAA,GAAA,cAAgB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,cAAA,CAAA,MAAA,KAAhB,OAAAA,GAA0B,GAAA,SAAA,CAAA;AACzC,IAAA,QAAQ,MAAQ;AAAA,MACd,KAAK,SAAA;AACH,QAAA,OAAO,KAAM,CAAA,YAAA,CAAA;AAAA,MACf,KAAK,MAAA;AAEH,QAAO,OAAA,SAAA,CAAA;AAAA,MACT,KAAK,QAAA;AACH,QAAA,OAAA,CAAOC,GAAA,GAAA,cAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,cAAA,CAAgB,aAAhB,KAAA,IAAA,GAAAA,MAAiC,KAAM,CAAA,WAAA,CAAA;AAAA,MAChD,KAAK,OAAA;AAGH,QAAO,OAAA,MAAA,CAAA;AAAA,MACT,KAAK,SAAA;AACH,QAAA,OAAO,MAAM,WAAe,IAAA,MAAA,CAAA;AAAA,KAChC;AAAA,GACF;AACA,EAAA,MAAM,aAAa,aAAc,EAAA,CAAA;AAIjC,EAAM,MAAA,YAAA,GAAe,QAAQ,UAAU,CAAA,CAAA;AACvC,EAAM,MAAA,eAAA,GAAkB,QAAQ,aAAa,CAAA,CAAA;AAE7C,EAAM,MAAA,YAAA,GAAe,YAAiB,KAAA,eAAA,GAAkB,KAAY,CAAA,GAAA,EAAA,CAAA;AACpE,EAAA,IAAI,CAAC,QAAU,EAAA;AACb,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAM,MAAA,oBAAA,GAAuB,eACzB,KACA,CAAA,GAAA;AAAA,IACE,sBAAwB,EAAA,UAAA;AAAA,IACxB,6BAA+B,EAAA,wBAAA;AAAA,IAC/B,wBAA0B,EAAA,wBAAA;AAAA,IAC1B,mBAAqB,EAAA,UAAA;AAAA,IACrB,6BAA+B,EAAA,kBAAA;AAAA,IAC/B,gCAAkC,EAAA,kBAAA;AAAA,IAClC,gCAAkC,EAAA,kBAAA;AAAA,IAClC,oBAAsB,EAAA,wBAAA;AAAA,IACtB,oBAAsB,EAAA,kBAAA;AAAA,IACtB,uBAAyB,EAAA,kBAAA;AAAA,IACzB,qBAAuB,EAAA,MAAA;AAAA,IACvB,sBAAwB,EAAA,wBAAA;AAAA,IACxB,aAAe,EAAA,wBAAA;AAAA,IACf,sBAAwB,EAAA,wBAAA;AAAA,IACxB,kBAAoB,EAAA,wBAAA;AAAA,IACpB,mBAAqB,EAAA,wBAAA;AAAA,IACrB,wBAA0B,EAAA,MAAA;AAAA,GAC5B,CAAA;AACJ,EAAA,uBACG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAI,GAAU,EAAA,SAAA,EAAsB,KAAO,EAAA,EAAE,OAAS,EAAA,MAAA,EAErD,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,OAAO,EAAA,IAAA,EAAA,UAAW,CACnB,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,SAAA;AAAA,IAAA,aAAA,CAAAF,gBAAA,CAAA,EAAA,EACK,WADL,CAAA,EAAA;AAAA,MAGC,iBAAiB,MAAM,EAAA;AAAA,MACvB,MAAM,IAAQ,IAAA,IAAA,GAAA,IAAA,GAAA,WAAA;AAAA,MAed,YAAA,EAAc,CAAC,MAAA,EAAQ,UACrB,qBAAA,KAAA,CAAA,aAAA;AAAA,QAAC,cAAA;AAAA,QAAA;AAAA,UACC,KAAA,EAAO,EAAE,KAAO,EAAA,aAAA,CAAc,EAAE,aAAe,EAAA,YAAA,EAAc,CAAE,EAAA;AAAA,SAAA;AAAA,wBAE9D,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,EAAkB,IAAM,EAAA,CAAC,gBACvB,UACH,CAAA;AAAA,OACF;AAAA,MAEF,KAAO,EAAA;AAAA,QACL,QAAQ,aAAc,CAAAA,gBAAA,CAAA;AAAA,UACpB,aAAe,EAAA,UAAA;AAAA,SAAA,EACZ,oBACJ,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOD,OAAO,aAAc,CAAAA,gBAAA,CAAA;AAAA,UACnB,mBAAqB,EAAA,UAAA;AAAA,SAAA,EAClB,oBACJ,CAAA,CAAA;AAAA,OACH;AAAA,MAEA,MAAA,EAAA,CAAQ,EAAY,GAAA,WAAA,CAAA,MAAA,KAAZ,IAAsB,GAAA,EAAA,GAAA,KAAA;AAAA,MAC9B,WAAA,EAAA,CAAa,EAAY,GAAA,WAAA,CAAA,WAAA,KAAZ,IAA2B,GAAA,EAAA,GAAA,KAAA;AAAA,MACxC,WAAA;AAAA;AAAA,QAEE,YAAY,MAAW,KAAA,KAAA,GACnB,KACA,CAAA,GAAA,CAAA,EAAA,GAAA,WAAA,CAAY,gBAAZ,IAA2B,GAAA,EAAA,GAAA,KAAA;AAAA,OAAA;AAAA,MAGjC,UAAA,EAAY,YAAY,MAAW,KAAA,KAAA;AAAA,MACnC,KAAO,EAAA;AAAA,QACL,IAAM,EAAA,OAAA;AAAA,QACN,MAAQ,EAAA,YAAA,GAAe,eAAgB,CAAA,YAAY,CAAI,GAAA,KAAA,CAAA;AAAA,OACzD;AAAA,MACA,QAAU,EAAA;AAAA,QACR,QAAA;AAAA,OACF;AAAA,MACA,IAAM,EAAA;AAAA;AAAA,QAEJ,cAAgB,EAAA,KAAA;AAAA;AAAA,OAElB;AAAA,MACA,aACE,cACI,GAAA;AAAA,QACE,GAAK,EAAA,WAAA;AAAA,QACL,IAAM,EAAA,OAAA;AAAA,QACN,KAAO,EAAA,WAAA;AAAA,QACP,MAAA,EAAQ,CAAC,MAAA,EAAQ,GAAQ,KAAA;AACvB,UACE,uBAAA,KAAA,CAAA,aAAA;AAAA,YAAC,QAAA;AAAA,YAAA;AAAA,cACC,IAAM,EAAA;AAAA,gBACJ,KAAO,EAAA;AAAA,kBACL;AAAA,oBACE,GAAK,EAAA,QAAA;AAAA,oBACL,IAAA,sCAAO,cAAe,EAAA,IAAA,CAAA;AAAA,oBACtB,KAAO,EAAA,UAAA;AAAA,mBACT;AAAA,iBACF;AAAA,eACF;AAAA,aAAA;AAAA,YAEC,GAAA;AAAA,WACH,CAAA;AAAA,SAEJ;AAAA,OAEF,GAAA,KAAA,CAAA;AAAA,MAEN,aAAA,EAAe,CAAC,MAAW,KAAA;AACzB,QAAA,OAAO,CAAC,eAAe,CAAA,CAAA;AAAA,OACzB;AAAA,MACA,gBAAA,EAAkB,CAAC,KAAU,KAAA;AAC3B,QAAA,IAAI,KAAO,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,SAAA;AAAW,UAAO,OAAA,KAAA,CAAA,CAAA;AAC7B,QAAO,OAAA,cAAA,CAAA;AAAA,OACT;AAAA,MACA,iBAAmB,EAAA,CAAC,CAAM,KAAA,OAAA,CAAQ,IAAI,CAAC,CAAA;AAAA,MACvC,QAAA;AAAA,MACA,YAAA,EAAc,CAAC,IAAA,KACb,IAAS,KAAA,KAAA,IAAS,CAAC,KAAQ,GAAA,EAAK,GAAA,WAAA,CAAY,IAAI,CAAA;AAAA,MAElD,YAAA,EAAc,CAAC,IAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAM,QAAQ,CAAA;AAAA,MAC7B,cAAA,EAAgB,CAAC,IAAM,EAAA,GAAA,yCACpB,WAAY,EAAA,EAAA,IAAA,EAAM,IAAK,CAAA,IAAA,EAAA,EAAO,GAAI,CAAA;AAAA,MAErC,iBAAmB,EAAA,CAAC,MAAQ,EAAA,KAAA,EAAO,CAAM,KAAA;AACvC,QAAA,uBACG,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,EAAY,IAAM,EAAA,OAAA,EAAA,EAChB,QACA,KACH,CAAA,CAAA;AAAA,OAEJ;AAAA,KAAA,CAAA;AAAA,IAEC,QAAA;AAAA,GAEL,CAAA,CAAA;AAEJ;;;;;;;;;;;;;;;;;;ACzRA,SAAS,mBACP,CAAA,QAAA,EACA,cACA,EAAA,WAAA,EACA,YAC4B,EAAA;AAC5B,EAAO,OAAA;AAAA,IACL,WAAA,EAAa,cAAc,WAAc,GAAA,cAAA;AAAA,IACzC,IAAM,EAAA,OAAA;AAAA,IACN,YAAA;AAAA,IACA,QAAU,EAAA,QAAA;AAAA,IACV,QAAU,EAAA;AAAA,MACR,IAAM,EAAA,QAAA;AAAA,MACN,UAAU,CAAC,IAAA,KACT,KAAK,IAAS,KAAA,CAAC,cAAc,qBAAwB,GAAA,cAAA,CAAA;AAAA,MACvD,MAAQ,EAAA,cAAA,CAAA;AAAA,QACN,IAAM,EAAA,MAAA;AAAA,QACN,IAAM,EAAA,QAAA;AAAA,QACN,SAAW,EAAA;AAAA,UACT,QAAU,EAAA,IAAA;AAAA,UACV,WAAa,EAAA,cAAA;AAAA,UACb,IAAM,EAAA,YAAA;AAAA,SACR;AAAA,OACI,EAAA,cAAA,KAAmB,CACnB,GAAA,EACA,GAAA;AAAA,QACE,MAAQ,EAAA,mBAAA,CAAoB,IAAM,EAAA,cAAA,GAAiB,CAAC,CAAA;AAAA,OACtD,CAAA;AAAA,KAER;AAAA,GACF,CAAA;AACF,CAAA;AAEA,MAAM,cAAiD,GAAA;AAAA,EACrD,IAAM,EAAA,sBAAA;AAAA,EACN,WAAa,EAAA,iBAAA;AAAA,EACb,KAAO,EAAA;AAAA,IACL,QAAU,EAAA;AAAA,MACR,IAAM,EAAA,MAAA;AAAA,MACN,2BAA6B,EAAA,IAAA;AAAA,KAC/B;AAAA,IACA,eAAiB,EAAA;AAAA,MACf,IAAM,EAAA,MAAA;AAAA,MACN,eAAiB,EAAA,IAAA;AAAA,KACnB;AAAA,IACA,KAAO,EAAA;AAAA,MACL,WAAa,EAAA,OAAA;AAAA,MACb,IAAM,EAAA,QAAA;AAAA,MACN,YAAc,EAAA,WAAA;AAAA,KAChB;AAAA,IACA,IAAM,EAAA;AAAA,MACJ,WAAa,EAAA,MAAA;AAAA,MACb,IAAM,EAAA,UAAA;AAAA,MACN,MAAQ,EAAA,CAAC,EAAO,KAAA,CAAC,EAAG,CAAA,IAAA;AAAA,KACtB;AAAA,IACA,WAAa,EAAA;AAAA,MACX,IAAM,EAAA,MAAA;AAAA,MACN,WAAa,EAAA,MAAA;AAAA,MACb,YAAc,EAAA;AAAA,QACZ,IAAM,EAAA,KAAA;AAAA,QACN,GAAK,EAAA,2CAAA;AAAA,OACP;AAAA,MACA,MAAQ,EAAA,CAAC,EAAO,KAAA,CAAC,CAAC,EAAG,CAAA,IAAA;AAAA,KACvB;AAAA,IACA,YAAc,EAAA,mBAAA,CAAoB,KAAO,EAAA,CAAA,EAAG,gBAAkB,EAAA;AAAA,MAC5D;AAAA,QACE,IAAM,EAAA,GAAA;AAAA,QACN,IAAM,EAAA,MAAA;AAAA,OACR;AAAA,KACD,CAAA;AAAA,IAED,MAAQ,EAAA;AAAA,MACN,WAAa,EAAA,QAAA;AAAA,MACb,IAAM,EAAA,QAAA;AAAA,MACN,OAAA,EAAS,CAAC,MAAQ,EAAA,KAAA,EAAO,KAAK,CAAE,CAAA,GAAA,CAAI,CAAC,KAAW,MAAA;AAAA,QAC9C,KAAA;AAAA,QACA,KAAA,EAAO,WAAW,KAAK,CAAA;AAAA,OACvB,CAAA,CAAA;AAAA,MACF,gBAAkB,EAAA,KAAA;AAAA,KACpB;AAAA,IAEA,cAAgB,EAAA;AAAA,MACd,WAAa,EAAA,OAAA;AAAA,MACb,IAAM,EAAA,QAAA;AAAA,MACN,MAAQ,EAAA;AAAA,QACN,MAAQ,EAAA;AAAA,UACN,IAAM,EAAA,QAAA;AAAA,UACN,SAAS,CAAC,SAAA,EAAW,WAAW,OAAS,EAAA,MAAA,EAAQ,QAAQ,CAAE,CAAA,GAAA;AAAA,YACzD,CAAC,CAAO,MAAA;AAAA,cACN,KAAA,EAAO,WAAW,CAAC,CAAA;AAAA,cACnB,KAAO,EAAA,CAAA;AAAA,aACT,CAAA;AAAA,WACF;AAAA,UACA,gBAAkB,EAAA,SAAA;AAAA,SACpB;AAAA,QACA,aAAe,EAAA;AAAA,UACb,IAAM,EAAA,OAAA;AAAA,UACN,WAAa,EAAA,cAAA;AAAA,UACb,MAAA,EAAQ,CAAC,KAAO,KAAA;AA7G1B,YAAA,IAAA,EAAA,CAAA;AA6G6B,YAAE,OAAA,EAAA,CAAA,CAAA,EAAA,GAAA,KAAA,CAAM,cAAN,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAsB,MAAW,MAAA,QAAA,CAAA,CAAA;AAAA,WAAA;AAAA,UACtD,YAAc,EAAA,SAAA;AAAA,SAChB;AAAA,OACF;AAAA,KACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAoBA,WAAa,EAAA;AAAA,MACX,WAAa,EAAA,eAAA;AAAA,MACb,IAAM,EAAA,SAAA;AAAA,MACN,MAAA,EAAQ,CAAC,EAAI,KAAA;AAxInB,QAAA,IAAA,EAAA,CAAA;AAwIuB,QAAG,OAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,MAAA,KAAH,YAAa,KAAW,MAAA,KAAA,CAAA;AAAA,OAAA;AAAA,MACzC,gBAAkB,EAAA,KAAA;AAAA,KACpB;AAAA,IACA,WAAa,EAAA;AAAA,MACX,WAAa,EAAA,gBAAA;AAAA,MACb,IAAM,EAAA,SAAA;AAAA,MACN,MAAA,EAAQ,CAAC,EAAI,KAAA;AA9InB,QAAA,IAAA,EAAA,CAAA;AA8IuB,QAAG,OAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,MAAA,KAAH,YAAa,KAAW,MAAA,MAAA,CAAA;AAAA,OAAA;AAAA,MACzC,gBAAkB,EAAA,KAAA;AAAA,KACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAmBA,IAAM,EAAA;AAAA,MACJ,WAAa,EAAA,MAAA;AAAA,MACb,IAAM,EAAA,QAAA;AAAA,MACN,MAAQ,EAAA;AAAA,QACN,cAAgB,EAAA;AAAA,UACd,WAAa,EAAA,kBAAA;AAAA,UACb,IAAM,EAAA,SAAA;AAAA,SACR;AAAA,QACA,qBAAuB,EAAA;AAAA;AAAA,UAErB,IAAM,EAAA,SAAA;AAAA,SACR;AAAA,OACF;AAAA,KACF;AAAA,GACF;AAAA,EAEA,aAAe,EAAA;AAAA,IACb,KAAO,EAAA,YAAA;AAAA,IACP,MAAQ,EAAA,SAAA;AAAA,IACR,SAAW,EAAA,OAAA;AAAA,GACb;AAAA,EAEA,UAAY,EAAA,YAAA;AAAA,EACZ,UAAY,EAAA,yDAAA;AACd,CAAA,CAAA;AAEO,SAAS,mBAAmB,MAAuB,EAAA;AACxD,EAAwB,uBAAA,CAAA,MAAA,EAAQ,YAAY,cAAc,CAAA,CAAA;AAC5D;;;;"}