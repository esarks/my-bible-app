{"version":3,"file":"field-react-utils-26fba31e.esm.js","sources":["../src/field-react-utils.tsx"],"sourcesContent":["import { NormalizedData, QueryResult } from \"@plasmicapp/data-sources\";\nimport { Dropdown } from \"antd\";\nimport type { GetRowKey, SorterResult } from \"antd/es/table/interface\";\nimport fastStringify from \"fast-stringify\";\nimport React, { Key, useState } from \"react\";\nimport { BaseColumnConfig } from \"./field-mappings\";\nimport { ensure } from \"./utils\";\n\nexport function useSortedFilteredData(\n  data: NormalizedData | undefined,\n  columns: BaseColumnConfig[]\n) {\n  const [search, setSearch] = useState(\"\");\n  const [sortState, setSortState] = useState<\n    undefined | { sorter: SorterResult<Record<string, any>> }\n  >(undefined);\n  const finalData = React.useMemo(() => {\n    const filtered = data?.data?.filter((row) =>\n      fastStringify(Object.values(row))\n        .toLowerCase()\n        .includes(search.toLowerCase())\n    );\n    const sorted = sortState?.sorter.column\n      ? // We use .sort() rather than sortBy to use localeCompare\n        (() => {\n          const cconfig = columns.find(\n            (cc) => cc.key === sortState?.sorter.column?.key\n          )!;\n          const expr = cconfig.expr ?? ((x) => x);\n          return (filtered ?? []).sort((aa, bb) => {\n            const a =\n                expr(aa, cconfig.fieldId ? aa?.[cconfig.fieldId] : null) ??\n                null,\n              b =\n                expr(bb, cconfig.fieldId ? bb?.[cconfig.fieldId] : null) ??\n                null;\n            // Default nil to '' here because A < null < z which is weird.\n            return typeof a === \"string\"\n              ? a.localeCompare(b ?? \"\")\n              : typeof b === \"string\"\n              ? -b.localeCompare(a ?? \"\")\n              : a - b;\n          });\n        })()\n      : filtered;\n    const reversed =\n      sortState?.sorter.order === \"descend\" ? sorted?.reverse() : sorted;\n    return reversed;\n  }, [data, columns, sortState, search]);\n\n  return {\n    finalData,\n    search,\n    setSearch,\n    setSortState,\n  };\n}\n\ninterface RowActionItem {\n  type: \"item\";\n  label: string;\n  onClick: (rowKey: string, row: any) => void;\n}\n\ninterface RowActionMenu {\n  type: \"menu\";\n  label: string;\n  children?: RowActionItem[];\n}\n\nexport type RowAction = RowActionItem | RowActionMenu;\n\nexport function tagDataArray(xs: object[]) {\n  return xs.map((x: object, i) => ({ ...x, __tag: i + 1 }));\n}\n\nexport function getTag(x: unknown) {\n  return (x as any).__tag;\n}\n\n/**\n * Don't want to simply return undefined, we prefer always having *some* row key so that users can always (say) click on things without needing to explicitly set a row key.\n */\nexport function deriveRowKey(\n  _data: QueryResult | undefined,\n  rowKey: string | GetRowKey<Record<any, any>> | undefined\n) {\n  if (rowKey) {\n    return rowKey;\n  }\n  // Use the index by default.\n  return (x: unknown) => {\n    return ensure(getTag(x));\n  };\n}\n\nexport function deriveKeyOfRow(\n  row: any,\n  rowKey: string | GetRowKey<any> | undefined\n) {\n  if (typeof rowKey === \"function\") {\n    return rowKey(row);\n  } else if (typeof rowKey === \"string\") {\n    return row[rowKey];\n  } else {\n    return undefined;\n  }\n}\n\nexport function renderActions(\n  rowActions: RowAction[],\n  row: any,\n  data: NormalizedData | undefined,\n  rowKey: string | ((record: any, index?: number) => Key) | undefined\n) {\n  return rowActions.map((_action) => {\n    if (_action.type === \"item\") {\n      return (\n        <a\n          key={_action.label}\n          style={{\n            whiteSpace: \"nowrap\",\n          }}\n          onClick={() =>\n            _action.onClick?.(\n              deriveKeyOfRow(row, deriveRowKey(data, rowKey)),\n              row\n            )\n          }\n        >\n          {_action.label}\n        </a>\n      );\n    } else {\n      return (\n        <Dropdown\n          key={_action.label}\n          menu={{\n            items: (_action.children ?? []).map((child) => ({\n              key: child.label,\n              label: child.label,\n              onClick: () =>\n                child.onClick?.(\n                  deriveKeyOfRow(row, deriveRowKey(data, rowKey)),\n                  row\n                ),\n            })),\n          }}\n        >\n          <a\n            href={\"javascript: void 0\"}\n            style={{\n              whiteSpace: \"nowrap\",\n            }}\n          >\n            {_action.label}\n          </a>\n        </Dropdown>\n      );\n    }\n  });\n}\n"],"names":["_a"],"mappings":"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"}