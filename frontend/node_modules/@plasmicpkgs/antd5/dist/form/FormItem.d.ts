import { CanvasComponentProps } from "@plasmicapp/host/registerComponent";
import { Form } from "antd";
import type { FormItemProps } from "antd/es/form/FormItem";
import React from "react";
import { CommonFormControlContextData } from "./contexts";
export interface FormItemControlContextData extends CommonFormControlContextData {
    parentFormItemPath: (string | number)[];
    status?: ReturnType<typeof Form.Item.useStatus>;
}
interface CuratedFieldData {
    status: string | undefined;
}
export interface InternalFormItemProps extends Omit<FormItemProps, "rules" | "name">, CanvasComponentProps<FormItemControlContextData> {
    rules?: PlasmicRule[];
    description?: React.ReactNode;
    noLabel?: boolean;
    hideValidationMessage?: boolean;
    customizeProps?: (fieldData: CuratedFieldData, props: InternalFormItemProps) => FormItemProps;
    alignLabellessWithControls?: boolean;
    name?: string;
}
interface PlasmicRule {
    ruleType: "enum" | "len" | "max" | "min" | "regex" | "required" | "whitespace" | "advanced";
    length?: number;
    pattern?: string;
    custom?: (...args: any[]) => any;
    options?: {
        value: any;
    }[];
    message?: string;
}
export declare function FormItemWrapper(props: InternalFormItemProps): React.JSX.Element;
export {};
