'use strict';

var antd = require('antd');
var React = require('react');
var utils = require('./utils-7711f93b.cjs.js');
require('@plasmicapp/host/registerComponent');
require('@plasmicapp/host/registerGlobalContext');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefault(React);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function AntdBreadcrumbItem(props) {
  return props.children;
}
function AntdBreadcrumb(props) {
  const _a = props, { itemsRaw } = _a, rest = __objRest(_a, ["itemsRaw"]);
  const items = React__default.default.useMemo(() => {
    if (!React__default.default.isValidElement(itemsRaw) && !Array.isArray(itemsRaw))
      return [];
    return (Array.isArray(itemsRaw) ? itemsRaw : Array.isArray(itemsRaw.props.children) ? itemsRaw.props.children : [itemsRaw.props.children]).map((currentItem) => {
      return __spreadProps(__spreadValues({}, currentItem.props), {
        title: React__default.default.cloneElement(/* @__PURE__ */ React__default.default.createElement(React__default.default.Fragment, null, currentItem))
      });
    }).filter((i) => i != null);
  }, [itemsRaw]);
  return /* @__PURE__ */ React__default.default.createElement(antd.Breadcrumb, __spreadProps(__spreadValues({}, rest), { items }));
}
const breadcrumbItemComponentName = "plasmic-antd5-breadcrumb-item";
const breadcrumbComponentName = "plasmic-antd5-breadcrumb";
function registerBreadcrumb(loader) {
  utils.registerComponentHelper(loader, AntdBreadcrumb, {
    name: breadcrumbComponentName,
    displayName: "Breadcrumb",
    props: {
      itemsRaw: {
        type: "slot",
        displayName: "items",
        defaultValue: [
          {
            type: "component",
            name: breadcrumbItemComponentName,
            props: {
              children: {
                type: "text",
                value: "First"
              }
            }
          },
          {
            type: "component",
            name: breadcrumbItemComponentName,
            props: {
              children: {
                type: "text",
                value: "Second"
              }
            }
          },
          {
            type: "component",
            name: breadcrumbItemComponentName,
            props: {
              children: {
                type: "text",
                value: "Third"
              }
            }
          }
        ],
        allowedComponents: [breadcrumbItemComponentName]
      },
      separator: {
        type: "slot",
        defaultValue: {
          type: "text",
          value: "/"
        }
      }
    },
    importPath: "@plasmicpkgs/antd5/skinny/registerBreadcrumb",
    importName: "AntdBreadcrumb"
  });
}
function registerBreadcrumbItem(loader) {
  utils.registerComponentHelper(loader, AntdBreadcrumbItem, {
    name: breadcrumbItemComponentName,
    displayName: "Breadcrumb Item",
    props: {
      children: {
        type: "slot",
        defaultValue: {
          type: "text",
          value: "Breadcrumb Item"
        }
      },
      onClick: {
        type: "eventHandler",
        argTypes: [{ type: "object", name: "event" }]
      }
    },
    importPath: "@plasmicpkgs/antd5/skinny/registerBreadcrumb",
    importName: "AntdBreadcrumbItem"
  });
}

exports.AntdBreadcrumb = AntdBreadcrumb;
exports.AntdBreadcrumbItem = AntdBreadcrumbItem;
exports.registerBreadcrumb = registerBreadcrumb;
exports.registerBreadcrumbItem = registerBreadcrumbItem;
//# sourceMappingURL=registerBreadcrumb.cjs.js.map
