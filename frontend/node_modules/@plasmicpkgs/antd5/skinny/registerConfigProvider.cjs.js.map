{"version":3,"file":"registerConfigProvider.cjs.js","sources":["../src/registerConfigProvider.tsx"],"sourcesContent":["import { GlobalActionsProvider, useSelector } from \"@plasmicapp/host\";\nimport {\n  default as registerToken,\n  TokenRegistration,\n} from \"@plasmicapp/host/registerToken\";\nimport { addLoadingStateListener } from \"@plasmicapp/query\";\nimport { ConfigProvider, message, notification, theme } from \"antd\";\nimport type { ConfigProviderProps } from \"antd/es/config-provider\";\nimport type { MessageInstance } from \"antd/es/message/interface\";\nimport type {\n  NotificationInstance,\n  NotificationPlacement,\n} from \"antd/es/notification/interface\";\nimport type { Locale } from \"antd/lib/locale\";\nimport enUS from \"antd/lib/locale/en_US.js\";\nimport React from \"react\";\nimport { useIsMounted } from \"./react-utils\";\nimport { makeRegisterGlobalContext, Registerable } from \"./utils\";\n\n// enUS is a CJS file, and it doesn't always import correctly in\n// esm mode (nextjs does it right, but create-react-app does it wrong).\n// We normalize it ourselves here ðŸ˜¬ðŸ˜¬ðŸ˜¬\nlet defaultLocale = enUS;\nif (\"default\" in enUS) {\n  defaultLocale = (enUS as any).default as typeof enUS;\n}\n\nexport interface ThemeOpts {\n  fontFamily?: string;\n  fontSize?: number;\n  lineHeight?: number;\n  colorTextBase?: string;\n\n  colorPrimary?: string;\n  colorSuccess?: string;\n  colorWarning?: string;\n  colorError?: string;\n  colorInfo?: string;\n  colorBgBase?: string;\n  lineWidth?: number;\n  borderRadius?: number;\n  controlHeight?: number;\n  sizeUnit?: number;\n  sizeStep?: number;\n  wireframe?: boolean;\n\n  defaultDark?: boolean;\n\n  /**\n   * `locale` is a prop that can be set by code, but is not registered,\n   * i.e. exposed to Plasmic studio.\n   */\n  locale?: Locale;\n}\n\nexport function themeToAntdConfig(opts: ThemeOpts): ConfigProviderProps {\n  const {\n    colorTextBase,\n    colorPrimary,\n    colorSuccess,\n    colorWarning,\n    colorError,\n    colorInfo,\n    colorBgBase,\n    fontFamily,\n    fontSize,\n    lineWidth,\n    borderRadius,\n    controlHeight,\n    sizeUnit,\n    sizeStep,\n    wireframe,\n    defaultDark = false,\n  } = opts;\n  return {\n    theme: {\n      algorithm: defaultDark ? theme.darkAlgorithm : undefined,\n      token: Object.fromEntries(\n        Object.entries({\n          colorTextBase,\n          colorPrimary,\n          colorSuccess,\n          colorWarning,\n          colorError,\n          colorInfo,\n          colorBgBase,\n          fontFamily,\n          fontSize,\n          lineWidth,\n          borderRadius,\n          controlHeight,\n          sizeUnit,\n          sizeStep,\n          wireframe,\n        }).filter(([_key, val]) => !!val)\n      ),\n    },\n  };\n}\n\nexport function AntdConfigProvider(\n  props: Omit<ThemeOpts, \"fontFamily\" | \"fontSize\" | \"lineWidth\"> & {\n    children?: React.ReactNode;\n    themeStyles: Record<string, string>;\n    loadingText?: string;\n    removeLoading?: boolean;\n  }\n) {\n  const { children, locale, themeStyles, loadingText, removeLoading, ...rest } =\n    props;\n  return (\n    <ConfigProvider\n      locale={locale ?? defaultLocale}\n      {...themeToAntdConfig({\n        ...rest,\n        fontFamily: themeStyles.fontFamily,\n        fontSize: themeStyles.fontSize\n          ? parseInt(themeStyles.fontSize)\n          : undefined,\n        lineHeight: themeStyles.lineHeight\n          ? parseInt(themeStyles.lineHeight)\n          : undefined,\n        colorTextBase: themeStyles.color,\n      })}\n    >\n      <ForkedApp>\n        <InnerConfigProvider\n          loadingText={loadingText}\n          removeLoading={removeLoading}\n        >\n          {children}\n        </InnerConfigProvider>\n      </ForkedApp>\n    </ConfigProvider>\n  );\n}\n\nfunction normTokenValue(val: any) {\n  if (typeof val === \"string\") {\n    return val.trim();\n  } else if (typeof val === \"number\") {\n    return `${val}px`;\n  } else {\n    return val;\n  }\n}\n\nfunction InnerConfigProvider(props: {\n  children?: React.ReactNode;\n  loadingText?: string;\n  removeLoading?: boolean;\n}) {\n  const { children, loadingText, removeLoading } = props;\n  const { token } = theme.useToken();\n  const makeVarName = (name: string) => `--antd-${name}`;\n  const cssStyles = React.useMemo(\n    () => `\n:root {\n  ${Object.entries(token)\n    .map(([key, val]) => `${makeVarName(key)}:${normTokenValue(val)};`)\n    .join(\"\\n\")}\n}\n  `,\n    [token]\n  );\n  const app = useAppContext();\n  const actions = React.useMemo(\n    () => ({\n      showNotification: (\n        type: \"success\" | \"error\" | \"info\" | \"warning\",\n        message: React.ReactNode,\n        description?: React.ReactNode,\n        duration?: number,\n        placement?: NotificationPlacement\n      ) => {\n        app.notification[type ?? \"info\"]({\n          message: message?.toString(),\n          description: description?.toString(),\n          duration,\n          placement,\n        });\n      },\n      hideNotifications: () => {\n        app.notification.destroy();\n      },\n    }),\n    [app]\n  );\n  const enableLoadingBoundary = !!useSelector(\n    \"plasmicInternalEnableLoadingBoundary\"\n  );\n\n  if (!GlobalActionsProvider) {\n    warnOutdatedDeps();\n  }\n\n  let content = GlobalActionsProvider ? (\n    <GlobalActionsProvider\n      contextName=\"plasmic-antd5-config-provider\"\n      actions={actions}\n    >\n      {children}\n    </GlobalActionsProvider>\n  ) : (\n    children\n  );\n  if (!removeLoading && enableLoadingBoundary) {\n    // If we're using the GlobalLoadingIndicator, and loading boundary is\n    // enabled, then we wrap the content in Suspense so that we don't propagate\n    // loading promises beyond this ConfigProvider, and instead will keep\n    // this ConfigProvider mounted, so it can render the loading indicator\n    content = <React.Suspense>{content}</React.Suspense>;\n  }\n  return (\n    <>\n      <style dangerouslySetInnerHTML={{ __html: cssStyles }} />\n      {content}\n      {!removeLoading && <GlobalLoadingIndicator loadingText={loadingText} />}\n    </>\n  );\n}\n\nlet warned = false;\nfunction warnOutdatedDeps() {\n  if (!warned) {\n    console.log(\n      `You are using a version of @plasmicapp/* that is too old. Please upgrade to the latest version.`\n    );\n    warned = true;\n  }\n}\n\nfunction GlobalLoadingIndicator(props: { loadingText?: string }) {\n  const { loadingText } = props;\n  const app = useAppContext();\n\n  const isLoadingRef = React.useRef(false);\n  const isMounted = useIsMounted();\n  const showLoading = React.useCallback(() => {\n    if (isMounted() && isLoadingRef.current) {\n      app.message.open({\n        content: loadingText ?? \"Loading...\",\n        duration: 0,\n        key: `plasmic-antd5-global-loading-indicator`,\n      });\n    }\n  }, [app, loadingText, isMounted, isLoadingRef]);\n\n  const hideLoading = React.useCallback(() => {\n    // Delay hiding loading message, to avoid quick churns of loading / not loading\n    setTimeout(() => {\n      if (isMounted() && !isLoadingRef.current) {\n        app.message.destroy(`plasmic-antd5-global-loading-indicator`);\n      }\n    }, 500);\n  }, [app, isMounted, isLoadingRef]);\n\n  React.useEffect(() => {\n    if (addLoadingStateListener) {\n      // Upon mount, we show any loading message that has been queued up before\n      // we were mounted\n      if (isLoadingRef.current) {\n        showLoading();\n      } else {\n        hideLoading();\n      }\n      return addLoadingStateListener(\n        (isLoading) => {\n          isLoadingRef.current = isLoading;\n          if (isMounted()) {\n            if (isLoading) {\n              showLoading();\n            } else {\n              hideLoading();\n            }\n          }\n        },\n        // Disabled immediat because it's creating an infinite rendering\n        // https://app.shortcut.com/plasmic/story/36991\n        { immediate: false }\n      );\n    } else {\n      warnOutdatedDeps();\n      return () => {\n        // noop\n      };\n    }\n  }, [app, isMounted, isLoadingRef, showLoading, hideLoading]);\n  return null;\n}\n\nconst ForkedAppContext = React.createContext<\n  | {\n      message: MessageInstance;\n      notification: NotificationInstance;\n    }\n  | undefined\n>(undefined);\n\nfunction useAppContext() {\n  const context = React.useContext(ForkedAppContext);\n  if (!context) {\n    throw new Error(\"Must call useAppContext from under ForkedApp\");\n  }\n  return context;\n}\n\n/**\n * Forking antd's App, to avoid rendering an extra <div/>\n */\nfunction ForkedApp(props: { children?: React.ReactNode }) {\n  const [messageApi, messageContextHolder] = message.useMessage();\n  const [notificationApi, notificationContextHolder] =\n    notification.useNotification();\n\n  const appContext = React.useMemo(\n    () => ({\n      message: messageApi,\n      notification: notificationApi,\n    }),\n    [messageApi, notificationApi]\n  );\n\n  return (\n    <ForkedAppContext.Provider value={appContext}>\n      {messageContextHolder}\n      {notificationContextHolder}\n      {props.children}\n    </ForkedAppContext.Provider>\n  );\n}\n\nexport function registerTokens(loader?: Registerable) {\n  const regs: TokenRegistration[] = [];\n\n  const withoutPrefix = (name: string, prefix?: string) => {\n    if (!prefix) {\n      return name;\n    }\n    const index = name.indexOf(prefix);\n    return index === 0 ? name.substring(prefix.length) : name;\n  };\n\n  function makeNiceName(name: string) {\n    name = name[0].toUpperCase() + name.substring(1);\n    return name.replace(/([a-z])([A-Z])/g, \"$1 $2\");\n  }\n\n  const makeGenericToken = (\n    name: string | [string, string],\n    type: TokenRegistration[\"type\"],\n    removePrefix?: string\n  ) => {\n    const tokenName = Array.isArray(name) ? name[0] : name;\n    const displayName = Array.isArray(name)\n      ? name[1]\n      : makeNiceName(withoutPrefix(name, removePrefix));\n    return {\n      name: tokenName,\n      displayName: `System: ${displayName}`,\n      value: `var(--antd-${tokenName})`,\n      type,\n    } as TokenRegistration;\n  };\n\n  // TODO: Commenting out a lot of tokens for now until we decide to make them\n  // available\n\n  const colorTokens: (string | [string, string])[] = [\n    // Seed tokens\n    \"colorPrimary\",\n    \"colorSuccess\",\n    \"colorWarning\",\n    \"colorError\",\n    \"colorInfo\",\n\n    // Map tokens\n    //   - neutral\n    \"colorText\",\n    \"colorTextSecondary\",\n    \"colorTextTertiary\",\n    \"colorTextQuaternary\",\n    \"colorBorder\",\n    \"colorBorderSecondary\",\n    \"colorFill\",\n    \"colorFillSecondary\",\n    \"colorFillTertiary\",\n    \"colorFillQuaternary\",\n    \"colorBgLayout\",\n    \"colorBgContainer\",\n    \"colorBgElevated\",\n    \"colorBgSpotlight\",\n    //    - primary\n    \"colorPrimaryBg\",\n    \"colorPrimaryBgHover\",\n    \"colorPrimaryBorder\",\n    \"colorPrimaryBorderHover\",\n    \"colorPrimaryHover\",\n    \"colorPrimaryActive\",\n    \"colorPrimaryTextHover\",\n    \"colorPrimaryText\",\n    \"colorPrimaryTextActive\",\n    //    - success\n    \"colorSuccessBg\",\n    \"colorSuccessBgHover\",\n    \"colorSuccessBorder\",\n    \"colorSuccessBorderHover\",\n    \"colorSuccessHover\",\n    \"colorSuccessActive\",\n    \"colorSuccessTextHover\",\n    \"colorSuccessText\",\n    \"colorSuccessTextActive\",\n    //    - warning\n    \"colorWarningBg\",\n    \"colorWarningBgHover\",\n    \"colorWarningBorder\",\n    \"colorWarningBorderHover\",\n    \"colorWarningHover\",\n    \"colorWarningActive\",\n    \"colorWarningTextHover\",\n    \"colorWarningText\",\n    \"colorWarningTextActive\",\n    //    - info\n    \"colorInfoBg\",\n    \"colorInfoBgHover\",\n    \"colorInfoBorder\",\n    \"colorInfoBorderHover\",\n    \"colorInfoHover\",\n    \"colorInfoActive\",\n    \"colorInfoTextHover\",\n    \"colorInfoText\",\n    \"colorInfoTextActive\",\n    //    - error\n    \"colorErrorBg\",\n    \"colorErrorBgHover\",\n    \"colorErrorBorder\",\n    \"colorErrorBorderHover\",\n    \"colorErrorHover\",\n    \"colorErrorActive\",\n    \"colorErrorTextHover\",\n    \"colorErrorText\",\n    \"colorErrorTextActive\",\n    //    - other\n    \"colorWhite\",\n    \"colorBgMask\",\n\n    // Alias tokens\n    // \"colorFillContentHover\",\n    // \"colorFillAlter\",\n    // \"colorFillContent\",\n    // \"colorBgContainerDisabled\",\n    // \"colorBgTextHover\",\n    // \"colorBgTextActive\",\n    // \"colorBorderBg\",\n    // \"colorSplit\",\n    // \"colorTextPlaceholder\",\n    // \"colorTextDisabled\",\n    // \"colorTextHeading\",\n    // \"colorTextLabel\",\n    // \"colorTextDescription\",\n    // \"colorTextLightSolid\",\n    \"colorIcon\",\n    \"colorIconHover\",\n    \"colorLink\",\n    \"colorLinkHover\",\n    // \"colorLinkActive\",\n    // \"colorLinkHighlight\",\n    // \"controlOutline\",\n    // \"controlWarningOutline\",\n    // \"controlErrorOutline\",\n    // \"controlItemBgHover\",\n    // \"controlItemBgActive\",\n    // \"controlItemBgActiveHover\",\n    // \"controlItemBgActiveDisabled\",\n  ];\n  colorTokens.forEach((name) =>\n    regs.push(makeGenericToken(name, \"color\", \"color\"))\n  );\n\n  const spacingTokens: (string | [string, string])[] = [\n    // Seed\n    // \"lineWidth\",\n    // \"borderRadius\",\n    // \"controlHeight\",\n    // Map tokens\n    // \"sizeXXL\",\n    // \"sizeXL\",\n    // \"sizeLG\",\n    // \"sizeMD\",\n    // \"sizeMS\",\n    // \"size\",\n    // \"sizeSM\",\n    // \"sizeXS\",\n    // \"sizeXXS\",\n    // \"controlHeightXS\",\n    // \"controlHeightSM\",\n    // \"controlHeightLG\",\n    // \"lineWidthBold\",\n    // \"borderRadiusXS\",\n    // \"borderRadiusSM\",\n    // \"borderRadiusLG\",\n    // \"borderRadiusOuter\",\n\n    // Alias tokens\n    // \"controlOutlineWidth\",\n    // \"controlInteractiveSize\",\n    \"paddingXXS\",\n    \"paddingXS\",\n    \"paddingSM\",\n    [\"padding\", \"Padding M\"],\n    \"paddingMD\",\n    \"paddingLG\",\n    \"paddingXL\",\n    // \"paddingContentHorizontalLG\",\n    // \"paddingContentHorizontal\",\n    // \"paddingContentHorizontalSM\",\n    // \"paddingContentVerticalLG\",\n    // \"paddingContentVertical\",\n    // \"paddingContentVerticalSM\",\n    \"marginXXS\",\n    \"marginXS\",\n    \"marginSM\",\n    [\"margin\", \"Margin M\"],\n    \"marginMD\",\n    \"marginLG\",\n    \"marginXL\",\n    \"marginXXL\",\n    // \"controlPaddingHorizontal\",\n    // \"controlPaddingHorizontalSM\",\n  ];\n  spacingTokens.forEach((token) =>\n    regs.push(makeGenericToken(token, \"spacing\"))\n  );\n\n  const fontSizeTokens: (string | [string, string])[] = [\n    // Seed token\n    [\"fontSize\", \"M\"],\n    // Map tokens\n    \"fontSizeSM\",\n    \"fontSizeLG\",\n    \"fontSizeXL\",\n    \"fontSizeHeading1\",\n    \"fontSizeHeading2\",\n    \"fontSizeHeading3\",\n    \"fontSizeHeading4\",\n    \"fontSizeHeading5\",\n  ];\n  fontSizeTokens.forEach((token) =>\n    regs.push(makeGenericToken(token, \"font-size\", \"fontSize\"))\n  );\n\n  const lineHeightTokens: (string | [string, string])[] = [\n    // Map tokens\n    [\"lineHeight\", \"M\"],\n    \"lineHeightLG\",\n    \"lineHeightSM\",\n    \"lineHeightHeading1\",\n    \"lineHeightHeading2\",\n    \"lineHeightHeading3\",\n    \"lineHeightHeading4\",\n    \"lineHeightHeading5\",\n  ];\n  lineHeightTokens.forEach((token) =>\n    regs.push(makeGenericToken(token, \"line-height\", \"lineHeight\"))\n  );\n\n  if (loader) {\n    regs.forEach((t) => loader.registerToken(t));\n  } else {\n    regs.forEach((t) => registerToken(t));\n  }\n}\n\nexport const registerConfigProvider = makeRegisterGlobalContext(\n  AntdConfigProvider,\n  {\n    name: \"plasmic-antd5-config-provider\",\n    displayName: \"Ant Design System Settings\",\n    props: {\n      colorPrimary: {\n        type: \"color\",\n        defaultValue: \"#1677ff\",\n        disableTokens: true,\n      },\n      colorSuccess: {\n        type: \"color\",\n        defaultValue: \"#52c41a\",\n        disableTokens: true,\n      },\n      colorWarning: {\n        type: \"color\",\n        defaultValue: \"#faad14\",\n        disableTokens: true,\n      },\n      colorError: {\n        type: \"color\",\n        defaultValue: \"#ff4d4f\",\n        disableTokens: true,\n      },\n      colorInfo: {\n        type: \"color\",\n        defaultValue: \"#1677ff\",\n        disableTokens: true,\n      },\n      colorBgBase: {\n        type: \"color\",\n        defaultValue: \"#ffffff\",\n        disableTokens: true,\n      },\n      lineWidth: {\n        type: \"number\",\n        defaultValue: 1,\n      },\n      borderRadius: {\n        type: \"number\",\n        defaultValue: 6,\n      },\n      controlHeight: {\n        type: \"number\",\n        defaultValue: 32,\n      },\n      sizeUnit: {\n        type: \"number\",\n        defaultValue: 4,\n      },\n      sizeStep: {\n        type: \"number\",\n        defaultValue: 4,\n      },\n      loadingText: {\n        type: \"string\",\n        defaultValueHint: \"Loading...\",\n      },\n      removeLoading: {\n        type: \"boolean\",\n        defaultValueHint: false,\n      },\n      wireframe: {\n        type: \"boolean\",\n        defaultValue: false,\n      },\n      defaultDark: {\n        type: \"boolean\",\n        defaultValue: false,\n      },\n      themeStyles: {\n        type: \"themeStyles\",\n      } as any,\n    },\n    ...{\n      globalActions: {\n        showNotification: {\n          displayName: \"Show notification\",\n          parameters: [\n            {\n              name: \"type\",\n              type: {\n                type: \"choice\",\n                options: [\"success\", \"error\", \"info\", \"warning\"],\n                defaultValue: \"info\",\n              },\n            },\n            {\n              name: \"message\",\n              type: {\n                type: \"string\",\n                defaultValue: \"A message for you!\",\n              },\n            },\n            {\n              name: \"description\",\n              type: {\n                type: \"string\",\n                defaultValue: \"Would you like to learn more?\",\n              },\n            },\n            {\n              name: \"duration\",\n              type: {\n                type: \"number\",\n                defaultValueHint: 5,\n              },\n            },\n            {\n              name: \"placement\",\n              type: {\n                type: \"choice\",\n                options: [\n                  \"top\",\n                  \"topLeft\",\n                  \"topRight\",\n                  \"bottom\",\n                  \"bottomLeft\",\n                  \"bottomRight\",\n                ],\n                defaultValueHint: \"topRight\",\n              },\n            },\n          ],\n        },\n        hideNotifications: {\n          displayName: \"Hide notifications\",\n          parameters: [],\n        },\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerConfigProvider\",\n    importName: \"AntdConfigProvider\",\n  }\n);\n"],"names":["enUS","theme","React","ConfigProvider","message","useSelector","GlobalActionsProvider","useIsMounted","addLoadingStateListener","notification","registerToken","makeRegisterGlobalContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAI,aAAgB,GAAAA,qBAAA,CAAA;AACpB,IAAI,aAAaA,qBAAM,EAAA;AACrB,EAAA,aAAA,GAAiBA,qBAAa,CAAA,OAAA,CAAA;AAChC,CAAA;AA8BO,SAAS,kBAAkB,IAAsC,EAAA;AACtE,EAAM,MAAA;AAAA,IACJ,aAAA;AAAA,IACA,YAAA;AAAA,IACA,YAAA;AAAA,IACA,YAAA;AAAA,IACA,UAAA;AAAA,IACA,SAAA;AAAA,IACA,WAAA;AAAA,IACA,UAAA;AAAA,IACA,QAAA;AAAA,IACA,SAAA;AAAA,IACA,YAAA;AAAA,IACA,aAAA;AAAA,IACA,QAAA;AAAA,IACA,QAAA;AAAA,IACA,SAAA;AAAA,IACA,WAAc,GAAA,KAAA;AAAA,GACZ,GAAA,IAAA,CAAA;AACJ,EAAO,OAAA;AAAA,IACL,KAAO,EAAA;AAAA,MACL,SAAA,EAAW,WAAc,GAAAC,UAAA,CAAM,aAAgB,GAAA,KAAA,CAAA;AAAA,MAC/C,OAAO,MAAO,CAAA,WAAA;AAAA,QACZ,OAAO,OAAQ,CAAA;AAAA,UACb,aAAA;AAAA,UACA,YAAA;AAAA,UACA,YAAA;AAAA,UACA,YAAA;AAAA,UACA,UAAA;AAAA,UACA,SAAA;AAAA,UACA,WAAA;AAAA,UACA,UAAA;AAAA,UACA,QAAA;AAAA,UACA,SAAA;AAAA,UACA,YAAA;AAAA,UACA,aAAA;AAAA,UACA,QAAA;AAAA,UACA,QAAA;AAAA,UACA,SAAA;AAAA,SACD,CAAE,CAAA,MAAA,CAAO,CAAC,CAAC,MAAM,GAAG,CAAA,KAAM,CAAC,CAAC,GAAG,CAAA;AAAA,OAClC;AAAA,KACF;AAAA,GACF,CAAA;AACF,CAAA;AAEO,SAAS,mBACd,KAMA,EAAA;AACA,EAAA,MACE,EADM,GAAA,KAAA,EAAA,EAAA,QAAA,EAAU,MAAQ,EAAA,WAAA,EAAa,aAAa,aA5GtD,EAAA,GA6GI,EADoE,EAAA,IAAA,GAAA,SAAA,CACpE,EADoE,EAAA,CAA9D,UAAU,EAAA,QAAA,EAAQ,eAAa,aAAa,EAAA,eAAA,CAAA,CAAA,CAAA;AAEpD,EACE,uBAAAC,sBAAA,CAAA,aAAA;AAAA,IAACC,mBAAA;AAAA,IAAA,cAAA,CAAA;AAAA,MACC,QAAQ,MAAU,IAAA,IAAA,GAAA,MAAA,GAAA,aAAA;AAAA,KACd,EAAA,iBAAA,CAAkB,iCACjB,IADiB,CAAA,EAAA;AAAA,MAEpB,YAAY,WAAY,CAAA,UAAA;AAAA,MACxB,UAAU,WAAY,CAAA,QAAA,GAClB,QAAS,CAAA,WAAA,CAAY,QAAQ,CAC7B,GAAA,KAAA,CAAA;AAAA,MACJ,YAAY,WAAY,CAAA,UAAA,GACpB,QAAS,CAAA,WAAA,CAAY,UAAU,CAC/B,GAAA,KAAA,CAAA;AAAA,MACJ,eAAe,WAAY,CAAA,KAAA;AAAA,KAC5B,CAAA,CAAA,CAAA;AAAA,yDAEA,SACC,EAAA,IAAA,kBAAAD,sBAAA,CAAA,aAAA;AAAA,MAAC,mBAAA;AAAA,MAAA;AAAA,QACC,WAAA;AAAA,QACA,aAAA;AAAA,OAAA;AAAA,MAEC,QAAA;AAAA,KAEL,CAAA;AAAA,GACF,CAAA;AAEJ,CAAA;AAEA,SAAS,eAAe,GAAU,EAAA;AAChC,EAAI,IAAA,OAAO,QAAQ,QAAU,EAAA;AAC3B,IAAA,OAAO,IAAI,IAAK,EAAA,CAAA;AAAA,GAClB,MAAA,IAAW,OAAO,GAAA,KAAQ,QAAU,EAAA;AAClC,IAAA,OAAO,CAAG,EAAA,GAAA,CAAA,EAAA,CAAA,CAAA;AAAA,GACL,MAAA;AACL,IAAO,OAAA,GAAA,CAAA;AAAA,GACT;AACF,CAAA;AAEA,SAAS,oBAAoB,KAI1B,EAAA;AACD,EAAA,MAAM,EAAE,QAAA,EAAU,WAAa,EAAA,aAAA,EAAkB,GAAA,KAAA,CAAA;AACjD,EAAA,MAAM,EAAE,KAAA,EAAU,GAAAD,UAAA,CAAM,QAAS,EAAA,CAAA;AACjC,EAAM,MAAA,WAAA,GAAc,CAAC,IAAA,KAAiB,CAAU,OAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AAChD,EAAA,MAAM,YAAYC,sBAAM,CAAA,OAAA;AAAA,IACtB,MAAM,CAAA;AAAA;AAAA,EAAA,EAEN,OAAO,OAAQ,CAAA,KAAK,EACnB,GAAI,CAAA,CAAC,CAAC,GAAK,EAAA,GAAG,MAAM,CAAG,EAAA,WAAA,CAAY,GAAG,CAAK,CAAA,CAAA,EAAA,cAAA,CAAe,GAAG,CAAI,CAAA,CAAA,CAAA,CAAA,CACjE,KAAK,IAAI,CAAA,CAAA;AAAA;AAAA,EAAA,CAAA;AAAA,IAGV,CAAC,KAAK,CAAA;AAAA,GACR,CAAA;AACA,EAAA,MAAM,MAAM,aAAc,EAAA,CAAA;AAC1B,EAAA,MAAM,UAAUA,sBAAM,CAAA,OAAA;AAAA,IACpB,OAAO;AAAA,MACL,kBAAkB,CAChB,IAAA,EACAE,QACA,EAAA,WAAA,EACA,UACA,SACG,KAAA;AACH,QAAI,GAAA,CAAA,YAAA,CAAa,IAAQ,IAAA,IAAA,GAAA,IAAA,GAAA,MAAM,CAAE,CAAA;AAAA,UAC/B,OAAA,EAASA,QAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,QAAS,CAAA,QAAA,EAAA;AAAA,UAClB,aAAa,WAAa,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,WAAA,CAAA,QAAA,EAAA;AAAA,UAC1B,QAAA;AAAA,UACA,SAAA;AAAA,SACD,CAAA,CAAA;AAAA,OACH;AAAA,MACA,mBAAmB,MAAM;AACvB,QAAA,GAAA,CAAI,aAAa,OAAQ,EAAA,CAAA;AAAA,OAC3B;AAAA,KACF,CAAA;AAAA,IACA,CAAC,GAAG,CAAA;AAAA,GACN,CAAA;AACA,EAAM,MAAA,qBAAA,GAAwB,CAAC,CAACC,gBAAA;AAAA,IAC9B,sCAAA;AAAA,GACF,CAAA;AAEA,EAAA,IAAI,CAACC,0BAAuB,EAAA;AAC1B,IAAiB,gBAAA,EAAA,CAAA;AAAA,GACnB;AAEA,EAAA,IAAI,UAAUA,0BACZ,mBAAAJ,sBAAA,CAAA,aAAA;AAAA,IAACI,0BAAA;AAAA,IAAA;AAAA,MACC,WAAY,EAAA,+BAAA;AAAA,MACZ,OAAA;AAAA,KAAA;AAAA,IAEC,QAAA;AAAA,GAGH,GAAA,QAAA,CAAA;AAEF,EAAI,IAAA,CAAC,iBAAiB,qBAAuB,EAAA;AAK3C,IAAA,OAAA,mBAAWJ,sBAAA,CAAA,aAAA,CAAAA,sBAAA,CAAM,QAAN,EAAA,IAAA,EAAgB,OAAQ,CAAA,CAAA;AAAA,GACrC;AACA,EAAA,uBAEIA,sBAAA,CAAA,aAAA,CAAAA,sBAAA,CAAA,QAAA,EAAA,IAAA,kBAAAA,sBAAA,CAAA,aAAA,CAAC,OAAM,EAAA,EAAA,uBAAA,EAAyB,EAAE,MAAQ,EAAA,SAAA,EAAa,EAAA,CAAA,EACtD,SACA,CAAC,aAAA,oBAAkBA,sBAAA,CAAA,aAAA,CAAA,sBAAA,EAAA,EAAuB,aAA0B,CACvE,CAAA,CAAA;AAEJ,CAAA;AAEA,IAAI,MAAS,GAAA,KAAA,CAAA;AACb,SAAS,gBAAmB,GAAA;AAC1B,EAAA,IAAI,CAAC,MAAQ,EAAA;AACX,IAAQ,OAAA,CAAA,GAAA;AAAA,MACN,CAAA,+FAAA,CAAA;AAAA,KACF,CAAA;AACA,IAAS,MAAA,GAAA,IAAA,CAAA;AAAA,GACX;AACF,CAAA;AAEA,SAAS,uBAAuB,KAAiC,EAAA;AAC/D,EAAM,MAAA,EAAE,aAAgB,GAAA,KAAA,CAAA;AACxB,EAAA,MAAM,MAAM,aAAc,EAAA,CAAA;AAE1B,EAAM,MAAA,YAAA,GAAeA,sBAAM,CAAA,MAAA,CAAO,KAAK,CAAA,CAAA;AACvC,EAAA,MAAM,YAAYK,uBAAa,EAAA,CAAA;AAC/B,EAAM,MAAA,WAAA,GAAcL,sBAAM,CAAA,WAAA,CAAY,MAAM;AAC1C,IAAI,IAAA,SAAA,EAAe,IAAA,YAAA,CAAa,OAAS,EAAA;AACvC,MAAA,GAAA,CAAI,QAAQ,IAAK,CAAA;AAAA,QACf,SAAS,WAAe,IAAA,IAAA,GAAA,WAAA,GAAA,YAAA;AAAA,QACxB,QAAU,EAAA,CAAA;AAAA,QACV,GAAK,EAAA,CAAA,sCAAA,CAAA;AAAA,OACN,CAAA,CAAA;AAAA,KACH;AAAA,KACC,CAAC,GAAA,EAAK,WAAa,EAAA,SAAA,EAAW,YAAY,CAAC,CAAA,CAAA;AAE9C,EAAM,MAAA,WAAA,GAAcA,sBAAM,CAAA,WAAA,CAAY,MAAM;AAE1C,IAAA,UAAA,CAAW,MAAM;AACf,MAAA,IAAI,SAAU,EAAA,IAAK,CAAC,YAAA,CAAa,OAAS,EAAA;AACxC,QAAI,GAAA,CAAA,OAAA,CAAQ,QAAQ,CAAwC,sCAAA,CAAA,CAAA,CAAA;AAAA,OAC9D;AAAA,OACC,GAAG,CAAA,CAAA;AAAA,GACL,EAAA,CAAC,GAAK,EAAA,SAAA,EAAW,YAAY,CAAC,CAAA,CAAA;AAEjC,EAAAA,sBAAA,CAAM,UAAU,MAAM;AACpB,IAAA,IAAIM,6BAAyB,EAAA;AAG3B,MAAA,IAAI,aAAa,OAAS,EAAA;AACxB,QAAY,WAAA,EAAA,CAAA;AAAA,OACP,MAAA;AACL,QAAY,WAAA,EAAA,CAAA;AAAA,OACd;AACA,MAAO,OAAAA,6BAAA;AAAA,QACL,CAAC,SAAc,KAAA;AACb,UAAA,YAAA,CAAa,OAAU,GAAA,SAAA,CAAA;AACvB,UAAA,IAAI,WAAa,EAAA;AACf,YAAA,IAAI,SAAW,EAAA;AACb,cAAY,WAAA,EAAA,CAAA;AAAA,aACP,MAAA;AACL,cAAY,WAAA,EAAA,CAAA;AAAA,aACd;AAAA,WACF;AAAA,SACF;AAAA;AAAA;AAAA,QAGA,EAAE,WAAW,KAAM,EAAA;AAAA,OACrB,CAAA;AAAA,KACK,MAAA;AACL,MAAiB,gBAAA,EAAA,CAAA;AACjB,MAAA,OAAO,MAAM;AAAA,OAEb,CAAA;AAAA,KACF;AAAA,KACC,CAAC,GAAA,EAAK,WAAW,YAAc,EAAA,WAAA,EAAa,WAAW,CAAC,CAAA,CAAA;AAC3D,EAAO,OAAA,IAAA,CAAA;AACT,CAAA;AAEA,MAAM,gBAAA,GAAmBN,sBAAM,CAAA,aAAA,CAM7B,KAAS,CAAA,CAAA,CAAA;AAEX,SAAS,aAAgB,GAAA;AACvB,EAAM,MAAA,OAAA,GAAUA,sBAAM,CAAA,UAAA,CAAW,gBAAgB,CAAA,CAAA;AACjD,EAAA,IAAI,CAAC,OAAS,EAAA;AACZ,IAAM,MAAA,IAAI,MAAM,8CAA8C,CAAA,CAAA;AAAA,GAChE;AACA,EAAO,OAAA,OAAA,CAAA;AACT,CAAA;AAKA,SAAS,UAAU,KAAuC,EAAA;AACxD,EAAA,MAAM,CAAC,UAAA,EAAY,oBAAoB,CAAA,GAAIE,aAAQ,UAAW,EAAA,CAAA;AAC9D,EAAA,MAAM,CAAC,eAAA,EAAiB,yBAAyB,CAAA,GAC/CK,kBAAa,eAAgB,EAAA,CAAA;AAE/B,EAAA,MAAM,aAAaP,sBAAM,CAAA,OAAA;AAAA,IACvB,OAAO;AAAA,MACL,OAAS,EAAA,UAAA;AAAA,MACT,YAAc,EAAA,eAAA;AAAA,KAChB,CAAA;AAAA,IACA,CAAC,YAAY,eAAe,CAAA;AAAA,GAC9B,CAAA;AAEA,EACE,uBAAAA,sBAAA,CAAA,aAAA,CAAC,iBAAiB,QAAjB,EAAA,EAA0B,OAAO,UAC/B,EAAA,EAAA,oBAAA,EACA,yBACA,EAAA,KAAA,CAAM,QACT,CAAA,CAAA;AAEJ,CAAA;AAEO,SAAS,eAAe,MAAuB,EAAA;AACpD,EAAA,MAAM,OAA4B,EAAC,CAAA;AAEnC,EAAM,MAAA,aAAA,GAAgB,CAAC,IAAA,EAAc,MAAoB,KAAA;AACvD,IAAA,IAAI,CAAC,MAAQ,EAAA;AACX,MAAO,OAAA,IAAA,CAAA;AAAA,KACT;AACA,IAAM,MAAA,KAAA,GAAQ,IAAK,CAAA,OAAA,CAAQ,MAAM,CAAA,CAAA;AACjC,IAAA,OAAO,UAAU,CAAI,GAAA,IAAA,CAAK,SAAU,CAAA,MAAA,CAAO,MAAM,CAAI,GAAA,IAAA,CAAA;AAAA,GACvD,CAAA;AAEA,EAAA,SAAS,aAAa,IAAc,EAAA;AAClC,IAAA,IAAA,GAAO,KAAK,CAAC,CAAA,CAAE,aAAgB,GAAA,IAAA,CAAK,UAAU,CAAC,CAAA,CAAA;AAC/C,IAAO,OAAA,IAAA,CAAK,OAAQ,CAAA,iBAAA,EAAmB,OAAO,CAAA,CAAA;AAAA,GAChD;AAEA,EAAA,MAAM,gBAAmB,GAAA,CACvB,IACA,EAAA,IAAA,EACA,YACG,KAAA;AACH,IAAA,MAAM,YAAY,KAAM,CAAA,OAAA,CAAQ,IAAI,CAAI,GAAA,IAAA,CAAK,CAAC,CAAI,GAAA,IAAA,CAAA;AAClD,IAAA,MAAM,WAAc,GAAA,KAAA,CAAM,OAAQ,CAAA,IAAI,CAClC,GAAA,IAAA,CAAK,CAAC,CAAA,GACN,YAAa,CAAA,aAAA,CAAc,IAAM,EAAA,YAAY,CAAC,CAAA,CAAA;AAClD,IAAO,OAAA;AAAA,MACL,IAAM,EAAA,SAAA;AAAA,MACN,aAAa,CAAW,QAAA,EAAA,WAAA,CAAA,CAAA;AAAA,MACxB,OAAO,CAAc,WAAA,EAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MACrB,IAAA;AAAA,KACF,CAAA;AAAA,GACF,CAAA;AAKA,EAAA,MAAM,WAA6C,GAAA;AAAA;AAAA,IAEjD,cAAA;AAAA,IACA,cAAA;AAAA,IACA,cAAA;AAAA,IACA,YAAA;AAAA,IACA,WAAA;AAAA;AAAA;AAAA,IAIA,WAAA;AAAA,IACA,oBAAA;AAAA,IACA,mBAAA;AAAA,IACA,qBAAA;AAAA,IACA,aAAA;AAAA,IACA,sBAAA;AAAA,IACA,WAAA;AAAA,IACA,oBAAA;AAAA,IACA,mBAAA;AAAA,IACA,qBAAA;AAAA,IACA,eAAA;AAAA,IACA,kBAAA;AAAA,IACA,iBAAA;AAAA,IACA,kBAAA;AAAA;AAAA,IAEA,gBAAA;AAAA,IACA,qBAAA;AAAA,IACA,oBAAA;AAAA,IACA,yBAAA;AAAA,IACA,mBAAA;AAAA,IACA,oBAAA;AAAA,IACA,uBAAA;AAAA,IACA,kBAAA;AAAA,IACA,wBAAA;AAAA;AAAA,IAEA,gBAAA;AAAA,IACA,qBAAA;AAAA,IACA,oBAAA;AAAA,IACA,yBAAA;AAAA,IACA,mBAAA;AAAA,IACA,oBAAA;AAAA,IACA,uBAAA;AAAA,IACA,kBAAA;AAAA,IACA,wBAAA;AAAA;AAAA,IAEA,gBAAA;AAAA,IACA,qBAAA;AAAA,IACA,oBAAA;AAAA,IACA,yBAAA;AAAA,IACA,mBAAA;AAAA,IACA,oBAAA;AAAA,IACA,uBAAA;AAAA,IACA,kBAAA;AAAA,IACA,wBAAA;AAAA;AAAA,IAEA,aAAA;AAAA,IACA,kBAAA;AAAA,IACA,iBAAA;AAAA,IACA,sBAAA;AAAA,IACA,gBAAA;AAAA,IACA,iBAAA;AAAA,IACA,oBAAA;AAAA,IACA,eAAA;AAAA,IACA,qBAAA;AAAA;AAAA,IAEA,cAAA;AAAA,IACA,mBAAA;AAAA,IACA,kBAAA;AAAA,IACA,uBAAA;AAAA,IACA,iBAAA;AAAA,IACA,kBAAA;AAAA,IACA,qBAAA;AAAA,IACA,gBAAA;AAAA,IACA,sBAAA;AAAA;AAAA,IAEA,YAAA;AAAA,IACA,aAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAiBA,WAAA;AAAA,IACA,gBAAA;AAAA,IACA,WAAA;AAAA,IACA,gBAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAUF,CAAA;AACA,EAAY,WAAA,CAAA,OAAA;AAAA,IAAQ,CAAC,SACnB,IAAK,CAAA,IAAA,CAAK,iBAAiB,IAAM,EAAA,OAAA,EAAS,OAAO,CAAC,CAAA;AAAA,GACpD,CAAA;AAEA,EAAA,MAAM,aAA+C,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA2BnD,YAAA;AAAA,IACA,WAAA;AAAA,IACA,WAAA;AAAA,IACA,CAAC,WAAW,WAAW,CAAA;AAAA,IACvB,WAAA;AAAA,IACA,WAAA;AAAA,IACA,WAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,WAAA;AAAA,IACA,UAAA;AAAA,IACA,UAAA;AAAA,IACA,CAAC,UAAU,UAAU,CAAA;AAAA,IACrB,UAAA;AAAA,IACA,UAAA;AAAA,IACA,UAAA;AAAA,IACA,WAAA;AAAA;AAAA;AAAA,GAGF,CAAA;AACA,EAAc,aAAA,CAAA,OAAA;AAAA,IAAQ,CAAC,KACrB,KAAA,IAAA,CAAK,KAAK,gBAAiB,CAAA,KAAA,EAAO,SAAS,CAAC,CAAA;AAAA,GAC9C,CAAA;AAEA,EAAA,MAAM,cAAgD,GAAA;AAAA;AAAA,IAEpD,CAAC,YAAY,GAAG,CAAA;AAAA;AAAA,IAEhB,YAAA;AAAA,IACA,YAAA;AAAA,IACA,YAAA;AAAA,IACA,kBAAA;AAAA,IACA,kBAAA;AAAA,IACA,kBAAA;AAAA,IACA,kBAAA;AAAA,IACA,kBAAA;AAAA,GACF,CAAA;AACA,EAAe,cAAA,CAAA,OAAA;AAAA,IAAQ,CAAC,UACtB,IAAK,CAAA,IAAA,CAAK,iBAAiB,KAAO,EAAA,WAAA,EAAa,UAAU,CAAC,CAAA;AAAA,GAC5D,CAAA;AAEA,EAAA,MAAM,gBAAkD,GAAA;AAAA;AAAA,IAEtD,CAAC,cAAc,GAAG,CAAA;AAAA,IAClB,cAAA;AAAA,IACA,cAAA;AAAA,IACA,oBAAA;AAAA,IACA,oBAAA;AAAA,IACA,oBAAA;AAAA,IACA,oBAAA;AAAA,IACA,oBAAA;AAAA,GACF,CAAA;AACA,EAAiB,gBAAA,CAAA,OAAA;AAAA,IAAQ,CAAC,UACxB,IAAK,CAAA,IAAA,CAAK,iBAAiB,KAAO,EAAA,aAAA,EAAe,YAAY,CAAC,CAAA;AAAA,GAChE,CAAA;AAEA,EAAA,IAAI,MAAQ,EAAA;AACV,IAAA,IAAA,CAAK,QAAQ,CAAC,CAAA,KAAM,MAAO,CAAA,aAAA,CAAc,CAAC,CAAC,CAAA,CAAA;AAAA,GACtC,MAAA;AACL,IAAA,IAAA,CAAK,OAAQ,CAAA,CAAC,CAAM,KAAAQ,8BAAA,CAAc,CAAC,CAAC,CAAA,CAAA;AAAA,GACtC;AACF,CAAA;AAEO,MAAM,sBAAyB,GAAAC,+BAAA;AAAA,EACpC,kBAAA;AAAA,EACA,aAAA,CAAA,cAAA,CAAA;AAAA,IACE,IAAM,EAAA,+BAAA;AAAA,IACN,WAAa,EAAA,4BAAA;AAAA,IACb,KAAO,EAAA;AAAA,MACL,YAAc,EAAA;AAAA,QACZ,IAAM,EAAA,OAAA;AAAA,QACN,YAAc,EAAA,SAAA;AAAA,QACd,aAAe,EAAA,IAAA;AAAA,OACjB;AAAA,MACA,YAAc,EAAA;AAAA,QACZ,IAAM,EAAA,OAAA;AAAA,QACN,YAAc,EAAA,SAAA;AAAA,QACd,aAAe,EAAA,IAAA;AAAA,OACjB;AAAA,MACA,YAAc,EAAA;AAAA,QACZ,IAAM,EAAA,OAAA;AAAA,QACN,YAAc,EAAA,SAAA;AAAA,QACd,aAAe,EAAA,IAAA;AAAA,OACjB;AAAA,MACA,UAAY,EAAA;AAAA,QACV,IAAM,EAAA,OAAA;AAAA,QACN,YAAc,EAAA,SAAA;AAAA,QACd,aAAe,EAAA,IAAA;AAAA,OACjB;AAAA,MACA,SAAW,EAAA;AAAA,QACT,IAAM,EAAA,OAAA;AAAA,QACN,YAAc,EAAA,SAAA;AAAA,QACd,aAAe,EAAA,IAAA;AAAA,OACjB;AAAA,MACA,WAAa,EAAA;AAAA,QACX,IAAM,EAAA,OAAA;AAAA,QACN,YAAc,EAAA,SAAA;AAAA,QACd,aAAe,EAAA,IAAA;AAAA,OACjB;AAAA,MACA,SAAW,EAAA;AAAA,QACT,IAAM,EAAA,QAAA;AAAA,QACN,YAAc,EAAA,CAAA;AAAA,OAChB;AAAA,MACA,YAAc,EAAA;AAAA,QACZ,IAAM,EAAA,QAAA;AAAA,QACN,YAAc,EAAA,CAAA;AAAA,OAChB;AAAA,MACA,aAAe,EAAA;AAAA,QACb,IAAM,EAAA,QAAA;AAAA,QACN,YAAc,EAAA,EAAA;AAAA,OAChB;AAAA,MACA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,QAAA;AAAA,QACN,YAAc,EAAA,CAAA;AAAA,OAChB;AAAA,MACA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,QAAA;AAAA,QACN,YAAc,EAAA,CAAA;AAAA,OAChB;AAAA,MACA,WAAa,EAAA;AAAA,QACX,IAAM,EAAA,QAAA;AAAA,QACN,gBAAkB,EAAA,YAAA;AAAA,OACpB;AAAA,MACA,aAAe,EAAA;AAAA,QACb,IAAM,EAAA,SAAA;AAAA,QACN,gBAAkB,EAAA,KAAA;AAAA,OACpB;AAAA,MACA,SAAW,EAAA;AAAA,QACT,IAAM,EAAA,SAAA;AAAA,QACN,YAAc,EAAA,KAAA;AAAA,OAChB;AAAA,MACA,WAAa,EAAA;AAAA,QACX,IAAM,EAAA,SAAA;AAAA,QACN,YAAc,EAAA,KAAA;AAAA,OAChB;AAAA,MACA,WAAa,EAAA;AAAA,QACX,IAAM,EAAA,aAAA;AAAA,OACR;AAAA,KACF;AAAA,GACG,EAAA;AAAA,IACD,aAAe,EAAA;AAAA,MACb,gBAAkB,EAAA;AAAA,QAChB,WAAa,EAAA,mBAAA;AAAA,QACb,UAAY,EAAA;AAAA,UACV;AAAA,YACE,IAAM,EAAA,MAAA;AAAA,YACN,IAAM,EAAA;AAAA,cACJ,IAAM,EAAA,QAAA;AAAA,cACN,OAAS,EAAA,CAAC,SAAW,EAAA,OAAA,EAAS,QAAQ,SAAS,CAAA;AAAA,cAC/C,YAAc,EAAA,MAAA;AAAA,aAChB;AAAA,WACF;AAAA,UACA;AAAA,YACE,IAAM,EAAA,SAAA;AAAA,YACN,IAAM,EAAA;AAAA,cACJ,IAAM,EAAA,QAAA;AAAA,cACN,YAAc,EAAA,oBAAA;AAAA,aAChB;AAAA,WACF;AAAA,UACA;AAAA,YACE,IAAM,EAAA,aAAA;AAAA,YACN,IAAM,EAAA;AAAA,cACJ,IAAM,EAAA,QAAA;AAAA,cACN,YAAc,EAAA,+BAAA;AAAA,aAChB;AAAA,WACF;AAAA,UACA;AAAA,YACE,IAAM,EAAA,UAAA;AAAA,YACN,IAAM,EAAA;AAAA,cACJ,IAAM,EAAA,QAAA;AAAA,cACN,gBAAkB,EAAA,CAAA;AAAA,aACpB;AAAA,WACF;AAAA,UACA;AAAA,YACE,IAAM,EAAA,WAAA;AAAA,YACN,IAAM,EAAA;AAAA,cACJ,IAAM,EAAA,QAAA;AAAA,cACN,OAAS,EAAA;AAAA,gBACP,KAAA;AAAA,gBACA,SAAA;AAAA,gBACA,UAAA;AAAA,gBACA,QAAA;AAAA,gBACA,YAAA;AAAA,gBACA,aAAA;AAAA,eACF;AAAA,cACA,gBAAkB,EAAA,UAAA;AAAA,aACpB;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,MACA,iBAAmB,EAAA;AAAA,QACjB,WAAa,EAAA,oBAAA;AAAA,QACb,YAAY,EAAC;AAAA,OACf;AAAA,KACF;AAAA,GAjIJ,CAAA,EAAA;AAAA,IAmIE,UAAY,EAAA,kDAAA;AAAA,IACZ,UAAY,EAAA,oBAAA;AAAA,GACd,CAAA;AACF;;;;;;;"}