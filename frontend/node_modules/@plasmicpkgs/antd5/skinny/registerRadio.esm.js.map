{"version":3,"file":"registerRadio.esm.js","sources":["../src/registerRadio.tsx"],"sourcesContent":["import { Radio } from \"antd\";\nimport type { RadioChangeEvent } from \"antd/es/radio\";\nimport React from \"react\";\nimport {\n  radioButtonComponentName,\n  radioComponentName,\n  radioGroupComponentName,\n} from \"./names\";\nimport {\n  Registerable,\n  registerComponentHelper,\n  traverseReactEltTree,\n} from \"./utils\";\nconst RadioGroup = Radio.Group;\n\nexport const AntdRadio = Radio;\nexport const AntdRadioButton = Radio.Button;\nexport function AntdRadioGroup(\n  props: Omit<React.ComponentProps<typeof RadioGroup>, \"onChange\"> & {\n    onChange?: (value?: string) => void;\n    useChildren?: boolean;\n  }\n) {\n  const { onChange, useChildren, ...rest } = props;\n  const wrappedOnChange = React.useMemo(() => {\n    if (onChange) {\n      return (event: RadioChangeEvent) => onChange(event.target.value);\n    } else {\n      return undefined;\n    }\n  }, [onChange]);\n  return (\n    <RadioGroup\n      {...rest}\n      onChange={wrappedOnChange}\n      options={useChildren ? undefined : rest.options}\n    />\n  );\n}\n\nexport function registerRadio(loader?: Registerable) {\n  registerComponentHelper(loader, AntdRadio, {\n    name: radioComponentName,\n    displayName: \"Radio\",\n    props: {\n      value: {\n        type: \"string\",\n        description: \"The radio option value\",\n      },\n      disabled: {\n        type: \"boolean\",\n        defaultValueHint: false,\n      },\n      autoFocus: {\n        type: \"boolean\",\n        description: \"If focused when first shown\",\n        defaultValueHint: false,\n        advanced: true,\n      },\n      children: {\n        type: \"slot\",\n        defaultValue: [\n          {\n            type: \"text\",\n            value: \"Radio\",\n          },\n        ],\n        ...({ mergeWithParent: true } as any),\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerRadio\",\n    importName: \"AntdRadio\",\n    parentComponentName: radioGroupComponentName,\n  });\n  registerComponentHelper(loader, AntdRadioButton, {\n    name: radioButtonComponentName,\n    displayName: \"Radio Button\",\n    props: {\n      value: {\n        type: \"string\",\n        description: \"The radio option value\",\n      },\n      disabled: {\n        type: \"boolean\",\n        defaultValueHint: false,\n      },\n      autoFocus: {\n        type: \"boolean\",\n        description: \"If focused when first shown\",\n        defaultValueHint: false,\n        advanced: true,\n      },\n      children: {\n        type: \"slot\",\n        defaultValue: [\n          {\n            type: \"text\",\n            value: \"Radio\",\n          },\n        ],\n        ...({ mergeWithParent: true } as any),\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerRadio\",\n    importName: \"AntdRadioButton\",\n    parentComponentName: radioGroupComponentName,\n  });\n\n  registerComponentHelper(loader, AntdRadioGroup, {\n    name: radioGroupComponentName,\n    displayName: \"Radio Group\",\n    props: {\n      options: {\n        type: \"array\",\n        hidden: (ps) => !!ps.useChildren,\n        itemType: {\n          type: \"object\",\n          nameFunc: (item: any) => item.label || item.value,\n          fields: {\n            value: \"string\",\n            label: \"string\",\n          },\n        },\n        defaultValue: [\n          {\n            value: \"option1\",\n            label: \"Option 1\",\n          },\n          {\n            value: \"option2\",\n            label: \"Option 2\",\n          },\n        ],\n      },\n      optionType: {\n        type: \"choice\",\n        options: [\n          { value: \"default\", label: \"Radio\" },\n          { value: \"button\", label: \"Button\" },\n        ],\n        hidden: (ps) => !!ps.useChildren,\n        defaultValueHint: \"default\",\n      },\n      value: {\n        type: \"choice\",\n        editOnly: true,\n        uncontrolledProp: \"defaultValue\",\n        description: \"Default selected value\",\n        options: (ps: any) => {\n          if (ps.useChildren) {\n            const options = new Set<string>();\n            traverseReactEltTree(ps.children, (elt) => {\n              if (typeof elt?.props?.value === \"string\") {\n                options.add(elt.props.value);\n              }\n            });\n            return Array.from(options.keys());\n          } else {\n            return ps.options ?? [];\n          }\n        },\n        hidden: (ps: any) => !!ps.__plasmicFormField,\n      },\n      disabled: {\n        type: \"boolean\",\n        description: \"Disables all radios\",\n        defaultValueHint: false,\n      },\n      useChildren: {\n        displayName: \"Use slot\",\n        type: \"boolean\",\n        defaultValueHint: false,\n        advanced: true,\n        description:\n          \"Instead of configuring a list of options, customize the contents of the RadioGroup by dragging and dropping Radio in the outline/canvas, inside the 'children' slot. Lets you use any content or formatting within the Radio and RadioButton.\",\n      },\n      children: {\n        type: \"slot\",\n        allowedComponents: [\n          \"plasmic-antd5-radio\",\n          \"plasmic-antd5-radio-button\",\n        ],\n        defaultValue: [\n          {\n            type: \"component\",\n            name: \"plasmic-antd5-radio\",\n            props: {\n              value: \"op1\",\n              children: {\n                type: \"text\",\n                value: \"Option 1\",\n              },\n            },\n          },\n          {\n            type: \"component\",\n            name: \"plasmic-antd5-radio\",\n            props: {\n              value: \"op2\",\n              children: {\n                type: \"text\",\n                value: \"Option 2\",\n              },\n            },\n          },\n        ],\n      },\n      onChange: {\n        type: \"eventHandler\",\n        argTypes: [{ name: \"value\", type: \"string\" }],\n      } as any,\n    },\n    states: {\n      value: {\n        type: \"writable\",\n        valueProp: \"value\",\n        onChangeProp: \"onChange\",\n        variableType: \"text\",\n        hidden: (ps: any) => !!ps.__plasmicFormField,\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerRadio\",\n    importName: \"AntdRadioGroup\",\n    defaultStyles: {\n      layout: \"hbox\",\n    },\n    ...({\n      trapsSelection: true,\n    } as any),\n  });\n}\n"],"names":["_a"],"mappings":"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"}