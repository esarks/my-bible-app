{"version":3,"file":"registerAvatar.esm.js","sources":["../src/registerAvatar.tsx"],"sourcesContent":["import React from \"react\";\nimport { Avatar } from \"antd\";\nimport { Registerable, registerComponentHelper } from \"./utils\";\nimport { usePlasmicLink } from \"@plasmicapp/host\";\n\nexport function AntdAvatar({\n  letters,\n  href,\n  target,\n  ...props\n}: React.ComponentProps<typeof Avatar> & {\n  letters?: string;\n  href?: string;\n  target?: boolean;\n}) {\n  const avatar = <Avatar {...props} children={props.children || letters} />;\n  const PlasmicLink = usePlasmicLink();\n  return href ? (\n    <PlasmicLink href={href} target={target ? \"_blank\" : undefined}>\n      {avatar}\n    </PlasmicLink>\n  ) : (\n    avatar\n  );\n}\n\nexport function AntdAvatarGroup(\n  props: React.ComponentProps<typeof Avatar.Group>\n) {\n  return <Avatar.Group {...props} />;\n}\n\nexport function registerAvatar(loader?: Registerable) {\n  registerComponentHelper(loader, AntdAvatar, {\n    name: \"plasmic-antd5-avatar\",\n    displayName: \"Avatar\",\n    props: {\n      href: {\n        type: \"href\",\n        displayName: \"Link to\",\n        description: \"Destination to link to\",\n      },\n      target: {\n        type: \"boolean\",\n        displayName: \"Open in new tab\",\n        hidden: (ps) => !ps.href,\n      },\n      letters: {\n        type: \"string\",\n        description: \"Letters to show\",\n        defaultValue: \"AB\",\n      },\n      src: {\n        type: \"imageUrl\",\n        description: \"Image to display\",\n      },\n      size: {\n        type: \"choice\",\n        options: [\"small\", \"default\", \"large\"],\n        description: \"Set the size of avatar\",\n        defaultValueHint: \"default\",\n      },\n      shape: {\n        type: \"choice\",\n        options: [\"circle\", \"round\"],\n        description: \"Set the avatar shape\",\n        defaultValueHint: \"circle\",\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerAvatar\",\n    importName: \"AntdAvatar\",\n  });\n}\n\nexport function registerAvatarGroup(loader?: Registerable) {\n  registerComponentHelper(loader, AntdAvatarGroup, {\n    name: \"plasmic-antd5-avatar-group\",\n    displayName: \"AvatarGroup\",\n    props: {\n      children: {\n        type: \"slot\",\n        defaultValue: [1, 2, 3, 4].map((user) => ({\n          type: \"component\",\n          name: \"plasmic-antd5-tooltip\",\n          props: {\n            titleText: \"User \" + user,\n            children: {\n              type: \"component\",\n              name: \"plasmic-antd5-avatar\",\n              props: {\n                letters: `U${user}`,\n              },\n            },\n          },\n        })),\n      },\n      maxCount: {\n        type: \"number\",\n        description: \"Max avatars to show\",\n        defaultValue: 2,\n      },\n      size: {\n        type: \"choice\",\n        options: [\"small\", \"default\", \"large\"],\n        description: \"Default size of avatars\",\n        defaultValueHint: \"default\",\n      },\n      maxPopoverPlacement: {\n        type: \"choice\",\n        advanced: true,\n        options: [\"top\", \"bottom\"],\n        defaultValueHint: \"top\",\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerAvatar\",\n    importName: \"AntdAvatarGroup\",\n  });\n}\n"],"names":[],"mappings":"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"}