{"version":3,"file":"registerSteps.esm.js","sources":["../src/registerSteps.tsx"],"sourcesContent":["import React from \"react\";\nimport { Steps } from \"antd\";\nimport { Registerable, registerComponentHelper } from \"./utils\";\n\nexport function AntdSteps(props: React.ComponentProps<typeof Steps>) {\n  return <Steps {...props} />;\n}\n\nexport function registerSteps(loader?: Registerable) {\n  const statusOptions = [\"wait\", \"process\", \"finish\", \"error\"];\n  registerComponentHelper(loader, AntdSteps, {\n    name: \"plasmic-antd5-steps\",\n    displayName: \"Steps\",\n    props: {\n      items: {\n        type: \"array\",\n        itemType: {\n          type: \"object\",\n          nameFunc: (item) => item.title,\n          fields: {\n            title: \"string\",\n            description: \"string\",\n            subTitle: \"string\",\n            disabled: \"boolean\",\n            status: {\n              displayName: \"Status\",\n              type: \"choice\",\n              options: statusOptions,\n              defaultValueHint: \"wait\",\n            },\n            // TODO icon: 'slot',\n          },\n        },\n        defaultValue: [\n          {\n            title: \"Applied\",\n            description: \"Application has been submitted.\",\n          },\n          {\n            title: \"In Review\",\n            description: \"Application is being reviewed.\",\n          },\n          {\n            title: \"Closed\",\n            description: \"Final decision on the application.\",\n          },\n        ],\n      },\n      current: {\n        type: \"number\",\n        displayName: \"Current step\",\n        defaultValue: 1,\n      },\n      size: {\n        type: \"choice\",\n        options: [\"small\", \"default\"],\n        description: \"Set the size of steps\",\n        defaultValueHint: \"default\",\n      },\n      direction: {\n        type: \"choice\",\n        options: [\"horizontal\", \"vertical\"],\n        description: \"Direction of steps\",\n        defaultValueHint: \"horizontal\",\n      },\n      progressDot: {\n        type: \"boolean\",\n        displayName: \"Dot style\",\n      },\n      status: {\n        displayName: \"Status of current step\",\n        type: \"choice\",\n        options: statusOptions,\n        defaultValueHint: \"process\",\n      },\n      type: {\n        type: \"choice\",\n        options: [\"default\", \"navigation\", \"inline\"],\n        defaultValueHint: \"default\",\n      },\n      percent: {\n        advanced: true,\n        type: \"number\",\n        description: \"Number between 0 to 100\",\n      },\n      responsive: {\n        advanced: true,\n        type: \"boolean\",\n        description: \"Change to vertical when screen narrower than 532px\",\n      },\n      onChange: {\n        type: \"eventHandler\",\n        argTypes: [\n          {\n            name: \"step\",\n            type: \"number\",\n          },\n        ],\n      },\n    },\n    states: {\n      current: {\n        type: \"writable\",\n        valueProp: \"current\",\n        onChangeProp: \"onChange\",\n        variableType: \"number\",\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerSteps\",\n    importName: \"AntdSteps\",\n  });\n}\n"],"names":[],"mappings":"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"}