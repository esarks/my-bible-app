{"version":3,"file":"registerColorPicker.esm.js","sources":["../src/registerColorPicker.tsx"],"sourcesContent":["import { ColorPicker } from \"antd\";\nimport React from \"react\";\nimport { Registerable, registerComponentHelper } from \"./utils\";\n\nexport function AntdColorPicker({\n  showTextSwitch,\n  onChange,\n  ...props\n}: Omit<React.ComponentProps<typeof ColorPicker>, \"onChange\"> & {\n  showTextSwitch?: boolean;\n  onChange?: (color: string) => void;\n}) {\n  return (\n    <ColorPicker\n      {...props}\n      showText={props.showText || showTextSwitch}\n      onChangeComplete={(value: any) => {\n        onChange?.(typeof value === \"string\" ? value : value.toHexString());\n      }}\n    />\n  );\n}\n\nexport function registerColorPicker(loader?: Registerable) {\n  registerComponentHelper(loader, AntdColorPicker, {\n    name: \"plasmic-antd5-color-picker\",\n    displayName: \"Color Picker\",\n    props: {\n      children: {\n        type: \"slot\",\n        hidePlaceholder: true,\n        mergeWithParent: true,\n      } as any,\n      value: {\n        displayName: \"Color value\",\n        type: \"color\",\n        editOnly: true,\n        uncontrolledProp: \"defaultValue\",\n        hidden: (ps: any) => !!ps.__plasmicFormField,\n      },\n      showTextSwitch: {\n        type: \"boolean\",\n        displayName: \"Show text\",\n      },\n      showText: {\n        type: \"slot\",\n        hidePlaceholder: true,\n      },\n      allowClear: \"boolean\",\n      disabled: {\n        type: \"boolean\",\n        advanced: true,\n      },\n      trigger: {\n        advanced: true,\n        type: \"choice\",\n        options: [\"click\", \"hover\"],\n        defaultValueHint: \"click\",\n      },\n      format: {\n        advanced: true,\n        type: \"choice\",\n        options: [\"hex\", \"hsb\", \"rgb\"],\n        defaultValueHint: \"hex\",\n      },\n      onChange: {\n        type: \"eventHandler\",\n        argTypes: [\n          {\n            name: \"color\",\n            type: \"string\",\n          },\n        ],\n      },\n    },\n    states: {\n      value: {\n        type: \"writable\",\n        valueProp: \"value\",\n        onChangeProp: \"onChange\",\n        variableType: \"text\",\n        hidden: (ps: any) => !!ps.__plasmicFormField,\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerColorPicker\",\n    importName: \"AntdColorPicker\",\n  });\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,SAAS,gBAAgB,EAO7B,EAAA;AAP6B,EAC9B,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA,cAAA;AAAA,IACA,QAAA;AAAA,GANF,GAIgC,EAG3B,EAAA,KAAA,GAAA,SAAA,CAH2B,EAG3B,EAAA;AAAA,IAFH,gBAAA;AAAA,IACA,UAAA;AAAA,GAAA,CAAA,CAAA;AAMA,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EACK,KADL,CAAA,EAAA;AAAA,MAEC,QAAA,EAAU,MAAM,QAAY,IAAA,cAAA;AAAA,MAC5B,gBAAA,EAAkB,CAAC,KAAe,KAAA;AAChC,QAAA,QAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,QAAA,CAAW,OAAO,KAAA,KAAU,QAAW,GAAA,KAAA,GAAQ,MAAM,WAAY,EAAA,CAAA,CAAA;AAAA,OACnE;AAAA,KAAA,CAAA;AAAA,GACF,CAAA;AAEJ,CAAA;AAEO,SAAS,oBAAoB,MAAuB,EAAA;AACzD,EAAA,uBAAA,CAAwB,QAAQ,eAAiB,EAAA;AAAA,IAC/C,IAAM,EAAA,4BAAA;AAAA,IACN,WAAa,EAAA,cAAA;AAAA,IACb,KAAO,EAAA;AAAA,MACL,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,MAAA;AAAA,QACN,eAAiB,EAAA,IAAA;AAAA,QACjB,eAAiB,EAAA,IAAA;AAAA,OACnB;AAAA,MACA,KAAO,EAAA;AAAA,QACL,WAAa,EAAA,aAAA;AAAA,QACb,IAAM,EAAA,OAAA;AAAA,QACN,QAAU,EAAA,IAAA;AAAA,QACV,gBAAkB,EAAA,cAAA;AAAA,QAClB,MAAQ,EAAA,CAAC,EAAY,KAAA,CAAC,CAAC,EAAG,CAAA,kBAAA;AAAA,OAC5B;AAAA,MACA,cAAgB,EAAA;AAAA,QACd,IAAM,EAAA,SAAA;AAAA,QACN,WAAa,EAAA,WAAA;AAAA,OACf;AAAA,MACA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,MAAA;AAAA,QACN,eAAiB,EAAA,IAAA;AAAA,OACnB;AAAA,MACA,UAAY,EAAA,SAAA;AAAA,MACZ,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,SAAA;AAAA,QACN,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,OAAS,EAAA;AAAA,QACP,QAAU,EAAA,IAAA;AAAA,QACV,IAAM,EAAA,QAAA;AAAA,QACN,OAAA,EAAS,CAAC,OAAA,EAAS,OAAO,CAAA;AAAA,QAC1B,gBAAkB,EAAA,OAAA;AAAA,OACpB;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,QAAU,EAAA,IAAA;AAAA,QACV,IAAM,EAAA,QAAA;AAAA,QACN,OAAS,EAAA,CAAC,KAAO,EAAA,KAAA,EAAO,KAAK,CAAA;AAAA,QAC7B,gBAAkB,EAAA,KAAA;AAAA,OACpB;AAAA,MACA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,cAAA;AAAA,QACN,QAAU,EAAA;AAAA,UACR;AAAA,YACE,IAAM,EAAA,OAAA;AAAA,YACN,IAAM,EAAA,QAAA;AAAA,WACR;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,KAAO,EAAA;AAAA,QACL,IAAM,EAAA,UAAA;AAAA,QACN,SAAW,EAAA,OAAA;AAAA,QACX,YAAc,EAAA,UAAA;AAAA,QACd,YAAc,EAAA,MAAA;AAAA,QACd,MAAQ,EAAA,CAAC,EAAY,KAAA,CAAC,CAAC,EAAG,CAAA,kBAAA;AAAA,OAC5B;AAAA,KACF;AAAA,IACA,UAAY,EAAA,+CAAA;AAAA,IACZ,UAAY,EAAA,iBAAA;AAAA,GACb,CAAA,CAAA;AACH;;;;"}