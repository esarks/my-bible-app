{"version":3,"file":"registerPopover.esm.js","sources":["../src/registerPopover.tsx"],"sourcesContent":["import { Popover } from \"antd\";\nimport React from \"react\";\nimport { Registerable, registerComponentHelper } from \"./utils\";\n\nexport function AntdPopover(\n  props: React.ComponentProps<typeof Popover> & {\n    popoverScopeClassName?: string;\n    contentText?: string;\n    defaultStylesClassName?: string;\n  }\n) {\n  const {\n    overlayClassName,\n    popoverScopeClassName,\n    defaultStylesClassName,\n    contentText,\n    content,\n    ...rest\n  } = props;\n  return (\n    <Popover\n      content={content || contentText}\n      overlayClassName={`${overlayClassName} ${popoverScopeClassName} ${defaultStylesClassName}`}\n      {...rest}\n    />\n  );\n}\n\nexport function registerPopover(loader?: Registerable) {\n  registerComponentHelper(loader, AntdPopover, {\n    name: \"plasmic-antd5-popover\",\n    displayName: \"Popover\",\n    isAttachment: true,\n    props: {\n      open: {\n        type: \"boolean\",\n        editOnly: true,\n        uncontrolledProp: \"defaultOpen\",\n        description: \"Default open state of the popover\",\n      },\n      arrow: {\n        type: \"boolean\",\n        defaultValue: true,\n        advanced: true,\n      },\n      children: {\n        type: \"slot\",\n        defaultValue: \"This text element is wrapped in a Popover component\",\n        mergeWithParent: true,\n      } as any,\n      popoverScopeClassName: {\n        type: \"styleScopeClass\",\n        scopeName: \"popover\",\n      } as any,\n      popoverContentClassName: {\n        type: \"class\",\n        displayName: \"Popover content\",\n        selectors: [\n          {\n            selector: \":popover.ant-popover .ant-popover-inner\",\n            label: \"Base\",\n          },\n        ],\n      },\n      overlayClassName: {\n        type: \"class\",\n        displayName: \"Overlay\",\n      },\n      content: {\n        type: \"slot\",\n        displayName: \"Popover contents\",\n        defaultValue: \"Popover contents\",\n        hidePlaceholder: true,\n      },\n      /**\n       *  NOTE: contentText ensures that the popover shows as a custom behaviour without modifications\n       * (when a random element is given a custom behaviour of Popover, the props of type \"slot\" do not receive any default value.\n       * Therefore we use the contentText which has a string default value, so that the popover shows with at least something)\n       *  */\n      contentText: {\n        type: \"string\",\n        displayName: \"Popover contents\",\n        description: \"What gets shown inside the popover on hover\",\n        defaultValue: \"Popover contents\",\n        hidden: (ps) => !!ps.content,\n      },\n      title: {\n        type: \"slot\",\n        displayName: \"Popover title\",\n        hidePlaceholder: true,\n        defaultValue: \"Popover title\",\n      },\n      color: {\n        type: \"color\",\n        description: \"Popover fill color\",\n      },\n      trigger: {\n        type: \"choice\",\n        options: [\"hover\", \"focus\", \"click\"],\n        defaultValueHint: \"hover\",\n        advanced: true,\n      },\n      placement: {\n        type: \"choice\",\n        options: [\n          \"topLeft\",\n          \"top\",\n          \"topRight\",\n          \"leftTop\",\n          \"left\",\n          \"leftBottom\",\n          \"rightTop\",\n          \"right\",\n          \"rightBottom\",\n          \"bottomLeft\",\n          \"bottom\",\n          \"bottomRight\",\n        ],\n        description: \"Default placement of popover\",\n        defaultValueHint: \"top\",\n      },\n      mouseEnterDelay: {\n        type: \"number\",\n        description: \"Delay in seconds, before popover is shown on mouse enter\",\n        defaultValue: 0,\n        advanced: true,\n        hidden: (ps) => (ps.trigger ? ps.trigger !== \"hover\" : false),\n      },\n      mouseLeaveDelay: {\n        type: \"number\",\n        description:\n          \"Delay in seconds, before popover is hidden on mouse leave\",\n        defaultValue: 0,\n        advanced: true,\n        hidden: (ps) => (ps.trigger ? ps.trigger !== \"hover\" : false),\n      },\n      onOpenChange: {\n        type: \"eventHandler\",\n        argTypes: [{ name: \"open\", type: \"boolean\" }],\n        advanced: true,\n      },\n      defaultStylesClassName: {\n        type: \"themeResetClass\",\n      } as any,\n    },\n    states: {\n      open: {\n        type: \"writable\",\n        valueProp: \"open\",\n        onChangeProp: \"onOpenChange\",\n        variableType: \"boolean\",\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerPopover\",\n    importName: \"AntdPopover\",\n  });\n}\n"],"names":[],"mappings":"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"}