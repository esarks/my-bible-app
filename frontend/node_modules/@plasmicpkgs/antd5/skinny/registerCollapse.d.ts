import { Collapse } from "antd";
import React from "react";
import { Registerable } from "./utils";
export declare const singleCollapseComponentName = "plasmic-antd5-single-collapse";
export declare const accordionComponentName = "plasmic-antd5-collapse";
export declare const accordionItemComponentName = "plasmic-antd5-collapse-item";
type AccordionItemType = NonNullable<React.ComponentProps<typeof Collapse>["items"]>[number];
type SingleCollapseProps = Omit<React.ComponentProps<typeof Collapse>, "items" | "activeKey" | "defaultActiveKey" | "expandIcon" | "accordion"> & AccordionItemType & {
    open?: boolean;
    defaultOpen?: boolean;
    disabled?: boolean;
    expandIcon?: React.ReactElement;
    rotateCustomExpandIcon: boolean;
    children: React.ReactElement;
    label2: React.ReactElement;
};
export declare function AntdAccordionItem({ children }: AccordionItemType): React.JSX.Element;
export declare function AntdAccordion(props: Omit<React.ComponentProps<typeof Collapse>, "items" | "activeKey" | "defaultActiveKey" | "expandIcon" | "accordion"> & {
    items: {
        props: {
            children: React.ReactElement<AccordionItemType>[];
        };
    };
    defaultActiveKey?: string;
    activeKey?: string;
    disabled?: boolean;
    expandIcon?: React.ReactElement;
    rotateCustomExpandIcon: boolean;
}): React.JSX.Element;
export declare function AntdSingleCollapse(props: SingleCollapseProps): React.JSX.Element;
export declare const accordionHelpers: {
    states: {
        activePanelId: {
            onChangeArgsToValue: (activeKeys: string[]) => string;
        };
    };
};
export declare const singleCollapseHelpers: {
    states: {
        open: {
            onChangeArgsToValue: (activeKeys: string[]) => boolean;
        };
    };
};
export declare function registerCollapse(loader?: Registerable): void;
export {};
