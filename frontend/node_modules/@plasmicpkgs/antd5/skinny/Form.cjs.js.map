{"version":3,"file":"Form.cjs.js","sources":["../src/form/Form.tsx"],"sourcesContent":["import type { DataOp, TableSchema } from \"@plasmicapp/data-sources\";\nimport { CodeComponentMode, ComponentHelpers } from \"@plasmicapp/host\";\nimport { CanvasComponentProps } from \"@plasmicapp/host/registerComponent\";\nimport { Form } from \"antd\";\nimport type { FormInstance, FormProps } from \"antd/es/form\";\nimport type { ColProps } from \"antd/es/grid/col\";\nimport equal from \"fast-deep-equal\";\nimport React from \"react\";\nimport { pick, setFieldsToUndefined, usePrevious } from \"../utils\";\nimport {\n  CommonFormControlContextData,\n  FieldEntity,\n  FormLayoutContext,\n  FormLayoutContextValue,\n  InternalFieldCtx,\n  InternalFormInstanceContext,\n} from \"./contexts\";\nimport { InternalFormItemProps } from \"./FormItem\";\n\nexport enum InputType {\n  Text = \"Text\",\n  TextArea = \"Text Area\",\n  Password = \"Password\",\n  Number = \"Number\",\n  Select = \"Select\",\n  Option = \"Option\",\n  OptionGroup = \"Option Group\",\n  Radio = \"Radio\",\n  RadioGroup = \"Radio Group\",\n  Checkbox = \"Checkbox\",\n  DatePicker = \"DatePicker\",\n  Unknown = \"Unkown\",\n}\n\nexport const SchemaFormContext = React.createContext<\n  | {\n      schema?: TableSchema;\n      minimalFullLengthFields?: Partial<SimplifiedFormItemsProp>[];\n      mergedFields?: SimplifiedFormItemsProp[];\n    }\n  | undefined\n>(undefined);\n\nexport interface SimplifiedFormItemsProp extends InternalFormItemProps {\n  inputType: InputType;\n  options?: {\n    label: string;\n    value: string;\n  }[];\n  optionType?: \"default\" | \"button\";\n  showTime?: boolean;\n  key?: string;\n}\n\nexport interface FormWrapperControlContextData\n  extends CommonFormControlContextData {\n  formInstance?: FormInstance<any>;\n  schema?: TableSchema;\n  minimalFullLengthFields?: Partial<SimplifiedFormItemsProp>[];\n  mergedFields?: SimplifiedFormItemsProp[];\n}\n\nexport enum FormType {\n  NewEntry,\n  UpdateEntry,\n}\n\nexport interface FormWrapperProps\n  extends FormProps,\n    CanvasComponentProps<FormWrapperControlContextData> {\n  /**\n   * https://ant.design/components/form#setfieldsvalue-do-not-trigger-onfieldschange-or-onvalueschange\n   * Because setFieldsValue doesn't trigger onValuesChange, we need to create our own onChange function.\n   * This will allow us to trigger the onChange function and keep the value state updated in canvas.\n   * We also don't invoke onValuesChange to avoid changing the standard behavior, since users may have\n   * overridden this function in their codebase\n   **/\n  extendedOnValuesChange?: (\n    values: Parameters<NonNullable<FormProps[\"onValuesChange\"]>>[1]\n  ) => void;\n  formItems?: SimplifiedFormItemsProp[];\n  dataFormItems?: SimplifiedFormItemsProp[];\n  mode?: CodeComponentMode;\n  formType?: \"new-entry\" | \"update-entry\";\n  submitSlot?: React.ReactNode;\n  data?: DataOp;\n  autoDisableWhileSubmitting?: boolean;\n  onIsSubmittingChange?: (isSubmitting: boolean) => void;\n}\n\nconst Internal = React.forwardRef(\n  (\n    props: Omit<FormWrapperProps, \"onFinish\"> & {\n      forceRemount: () => void;\n      setInternalFieldCtx: React.Dispatch<\n        React.SetStateAction<InternalFieldCtx>\n      >;\n      internalFieldCtx: InternalFieldCtx;\n      labelCol?: ColProps & { horizontalOnly?: boolean };\n      wrapperCol?: ColProps & { horizontalOnly?: boolean };\n      formLayout: FormLayoutContextValue;\n      onFinish?:\n        | FormProps[\"onFinish\"]\n        | ((\n            ...args: Parameters<NonNullable<FormProps[\"onFinish\"]>>\n          ) => Promise<ReturnType<NonNullable<FormProps[\"onFinish\"]>>>);\n    },\n    ref: React.Ref<FormRefActions>\n  ) => {\n    const [isSubmitting, setIsSubmitting] = React.useState(false);\n    const [form] = Form.useForm();\n    const values = form.getFieldsValue(true);\n    const lastValue = React.useRef(values);\n    const {\n      extendedOnValuesChange,\n      forceRemount,\n      formLayout,\n      internalFieldCtx,\n      setInternalFieldCtx,\n      autoDisableWhileSubmitting = true,\n      ...rest\n    } = props;\n    // extracted from https://github.com/react-component/field-form/blob/master/src/Form.tsx#L120\n    const childrenNode =\n      typeof props.children === \"function\"\n        ? props.children(values, form)\n        : props.children;\n\n    const fireOnValuesChange = React.useCallback(() => {\n      const values = form.getFieldsValue(true);\n      if (!equal(values, lastValue.current)) {\n        extendedOnValuesChange?.(values);\n        lastValue.current = values;\n      }\n    }, [form, lastValue]);\n\n    React.useEffect(() => {\n      fireOnValuesChange();\n    }, []);\n    React.useImperativeHandle(ref, () => ({\n      formInstance: form,\n      setFieldsValue: (newValues: Record<string, any>) => {\n        form.setFieldsValue(newValues);\n        extendedOnValuesChange?.(form.getFieldsValue(true));\n      },\n      setFieldValue: (\n        namePath: string | number | (string | number)[],\n        value: any\n      ) => {\n        form.setFieldValue(namePath, value);\n        extendedOnValuesChange?.(form.getFieldsValue(true));\n      },\n      resetFields: () => {\n        form.resetFields();\n        extendedOnValuesChange?.(form.getFieldsValue(true));\n      },\n      validateFields: async (...args) => {\n        try {\n          return await form.validateFields(...(args as any));\n        } catch (err) {\n          return err as any;\n        }\n      },\n      clearFields: () => {\n        const values = form.getFieldsValue(true);\n        setFieldsToUndefined(values);\n        form.setFieldsValue(values);\n        extendedOnValuesChange?.(form.getFieldsValue(true));\n      },\n    }));\n    const registerField = React.useCallback(\n      (fieldEntity: FieldEntity) => {\n        setInternalFieldCtx((ctx) => ({\n          registeredFields: [...ctx.registeredFields, fieldEntity],\n          preservedRegisteredFields: [\n            ...ctx.preservedRegisteredFields,\n            fieldEntity,\n          ],\n        }));\n        return () => {\n          setInternalFieldCtx((ctx) => ({\n            registeredFields: ctx.registeredFields.filter(\n              (ent) => ent !== fieldEntity\n            ),\n            preservedRegisteredFields: ctx.preservedRegisteredFields.filter(\n              (ent) => ent !== fieldEntity || fieldEntity.preserve\n            ),\n          }));\n        };\n      },\n      [setInternalFieldCtx]\n    );\n    const schemaFormCtx = React.useContext(SchemaFormContext);\n    props.setControlContextData?.({\n      formInstance: form,\n      layout: formLayout,\n      internalFieldCtx,\n      ...(schemaFormCtx ? schemaFormCtx : {}),\n    });\n\n    const updateIsSubmitting = React.useCallback(\n      (newValue: boolean) => {\n        setIsSubmitting(newValue);\n        props.onIsSubmittingChange?.(newValue);\n      },\n      [props.onIsSubmittingChange, setIsSubmitting]\n    );\n\n    return (\n      <InternalFormInstanceContext.Provider\n        value={{\n          layout: formLayout,\n          fireOnValuesChange,\n          forceRemount,\n          registerField,\n          internalFieldCtx,\n          initialValues: props.initialValues ?? {},\n        }}\n      >\n        <FormLayoutContext.Provider value={formLayout}>\n          <Form\n            {...rest}\n            key={\n              props.initialValues\n                ? JSON.stringify(props.initialValues)\n                : undefined\n            }\n            onValuesChange={(...args) => {\n              props.onValuesChange?.(...args);\n              extendedOnValuesChange?.(form.getFieldsValue(true));\n            }}\n            onFinish={async () => {\n              if (isSubmitting && autoDisableWhileSubmitting) {\n                return;\n              }\n              updateIsSubmitting(true);\n              const submission = props.onFinish?.(\n                pick(\n                  form.getFieldsValue(true),\n                  ...internalFieldCtx.preservedRegisteredFields.map(\n                    (field) => field.fullPath\n                  )\n                )\n              );\n              if (\n                typeof submission === \"object\" &&\n                typeof submission.then === \"function\"\n              ) {\n                await submission;\n              }\n              updateIsSubmitting(false);\n            }}\n            form={form}\n            labelCol={\n              props.labelCol?.horizontalOnly && props.layout !== \"horizontal\"\n                ? undefined\n                : props.labelCol\n            }\n            wrapperCol={\n              props.wrapperCol?.horizontalOnly && props.layout !== \"horizontal\"\n                ? undefined\n                : props.wrapperCol\n            }\n            disabled={isSubmitting && autoDisableWhileSubmitting}\n          >\n            {/*Remove built-in spacing on form fields*/}\n            <style>{`\n          .ant-form-item-explain + div, .ant-form-item-margin-offset {\n            display: none;\n          }\n          `}</style>\n            {childrenNode}\n          </Form>\n        </FormLayoutContext.Provider>\n      </InternalFormInstanceContext.Provider>\n    );\n  }\n);\n\nexport interface FormRefActions\n  extends Pick<\n    FormInstance<any>,\n    \"setFieldsValue\" | \"resetFields\" | \"setFieldValue\" | \"validateFields\"\n  > {\n  clearFields: () => void;\n  formInstance: FormInstance<any>;\n}\n\nexport const FormWrapper = React.forwardRef(\n  (props: FormWrapperProps, ref: React.Ref<FormRefActions>) => {\n    const [remountKey, setRemountKey] = React.useState(0);\n    const forceRemount = React.useCallback(\n      () => setRemountKey((k) => k + 1),\n      [setRemountKey]\n    );\n    const previousInitialValues = usePrevious(props.initialValues);\n\n    const wrapperRef = React.useRef<FormRefActions>(null);\n    React.useEffect(() => {\n      if (\n        previousInitialValues !== props.initialValues &&\n        JSON.stringify(previousInitialValues) !==\n          JSON.stringify(props.initialValues)\n      ) {\n        forceRemount();\n      }\n    }, [previousInitialValues, props.initialValues]);\n    const [internalFieldCtx, setInternalFieldCtx] =\n      React.useState<InternalFieldCtx>({\n        registeredFields: [],\n        preservedRegisteredFields: [],\n      });\n\n    React.useImperativeHandle(ref, () =>\n      wrapperRef.current ? { ...wrapperRef.current } : ({} as FormRefActions)\n    );\n\n    const formLayout = React.useMemo(\n      () => ({\n        layout: props.layout,\n        labelSpan: props.labelCol?.span as number | undefined,\n      }),\n      [props.layout, props.labelCol?.span]\n    );\n\n    return (\n      <Internal\n        key={remountKey}\n        forceRemount={forceRemount}\n        formLayout={formLayout}\n        internalFieldCtx={internalFieldCtx}\n        setInternalFieldCtx={setInternalFieldCtx}\n        ref={wrapperRef}\n        {...props}\n      />\n    );\n  }\n);\n\nexport const formHelpers: ComponentHelpers<FormWrapperProps> = {\n  states: {\n    value: {\n      onMutate: (value, $ref) => {\n        $ref?.formInstance?.setFieldsValue(value);\n      },\n    },\n  },\n};\n\nexport const OPTIMIZED_FORM_IMPORT = {\n  name: \"FormWrapper\",\n  path: \"@plasmicpkgs/antd5/skinny/Form\",\n};\n"],"names":["InputType","React","FormType","Form","values","equal","setFieldsToUndefined","_a","InternalFormInstanceContext","FormLayoutContext","pick","usePrevious"],"mappings":"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"}