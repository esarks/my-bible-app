import type { ConfigProviderProps } from "antd/es/config-provider";
import type { Locale } from "antd/lib/locale";
import React from "react";
import { Registerable } from "./utils";
export interface ThemeOpts {
    fontFamily?: string;
    fontSize?: number;
    lineHeight?: number;
    colorTextBase?: string;
    colorPrimary?: string;
    colorSuccess?: string;
    colorWarning?: string;
    colorError?: string;
    colorInfo?: string;
    colorBgBase?: string;
    lineWidth?: number;
    borderRadius?: number;
    controlHeight?: number;
    sizeUnit?: number;
    sizeStep?: number;
    wireframe?: boolean;
    defaultDark?: boolean;
    /**
     * `locale` is a prop that can be set by code, but is not registered,
     * i.e. exposed to Plasmic studio.
     */
    locale?: Locale;
}
export declare function themeToAntdConfig(opts: ThemeOpts): ConfigProviderProps;
export declare function AntdConfigProvider(props: Omit<ThemeOpts, "fontFamily" | "fontSize" | "lineWidth"> & {
    children?: React.ReactNode;
    themeStyles: Record<string, string>;
    loadingText?: string;
    removeLoading?: boolean;
}): React.JSX.Element;
export declare function registerTokens(loader?: Registerable): void;
export declare const registerConfigProvider: (loader?: Registerable | undefined) => void;
