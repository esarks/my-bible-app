{"version":3,"file":"registerModal.cjs.js","sources":["../src/registerModal.tsx"],"sourcesContent":["import type { StyleSection } from \"@plasmicapp/host/registerComponent\";\nimport { Modal } from \"antd\";\nimport React, { ReactElement, useMemo } from \"react\";\nimport { Registerable, registerComponentHelper } from \"./utils\";\n\n// hide sizing section, as width can only be set via a width prop, and not css!\nconst styleSections: StyleSection[] = [\n  \"visibility\",\n  \"typography\",\n  \"spacing\",\n  \"background\",\n  \"transform\",\n  \"transitions\",\n  \"layout\",\n  \"overflow\",\n  \"border\",\n  \"shadows\",\n  \"effects\",\n];\n\nexport function AntdModal(\n  props: React.ComponentProps<typeof Modal> & {\n    onOpenChange?: (open: boolean) => void;\n    defaultStylesClassName?: string;\n    modalScopeClassName: string;\n    wrapClassName: string;\n    hideFooter?: boolean;\n    trigger?: ReactElement;\n  }\n) {\n  const {\n    onOpenChange,\n    onOk,\n    onCancel,\n    open,\n    width,\n    footer,\n    hideFooter,\n    modalScopeClassName,\n    wrapClassName,\n    trigger,\n    ...rest\n  } = props;\n\n  const memoOnOk = React.useMemo(() => {\n    if (onOpenChange || onOk) {\n      return (e: React.MouseEvent<HTMLButtonElement>) => {\n        onOpenChange?.(false);\n        onOk?.(e);\n      };\n    } else {\n      return undefined;\n    }\n  }, [onOpenChange, onOk]);\n  const memoOnCancel = React.useMemo(() => {\n    if (onOpenChange || onCancel) {\n      return (e: React.MouseEvent<HTMLButtonElement>) => {\n        onOpenChange?.(false);\n        onCancel?.(e);\n      };\n    } else {\n      return undefined;\n    }\n  }, [onOpenChange, onCancel]);\n\n  const widthProp = useMemo(() => {\n    if (!width) return undefined;\n    if (typeof width === \"number\") return width;\n    if (typeof width !== \"string\") return undefined;\n    if (/^\\d+$/.test(width)) {\n      return +width;\n    }\n    return width;\n  }, [width]);\n\n  return (\n    <>\n      <Modal\n        {...rest}\n        onOk={memoOnOk}\n        width={widthProp}\n        onCancel={memoOnCancel}\n        open={open}\n        footer={hideFooter ? null : footer ?? undefined}\n        wrapClassName={wrapClassName}\n        className={`${props.className} ${props.defaultStylesClassName} ${modalScopeClassName}`}\n      />\n      {trigger ? (\n        <div onClick={() => onOpenChange?.(true)}>{trigger}</div>\n      ) : null}\n    </>\n  );\n}\n\nexport function registerModal(loader?: Registerable) {\n  registerComponentHelper(loader, AntdModal, {\n    name: \"plasmic-antd5-modal\",\n    displayName: \"Modal\",\n    styleSections,\n    description:\n      \"[See tutorial video](https://www.youtube.com/watch?v=TkjxNJIFun8)\",\n    props: {\n      open: {\n        type: \"boolean\",\n      },\n      width: {\n        type: \"string\",\n        defaultValueHint: \"520px\",\n        description: \"Change the width of the modal\",\n        helpText:\n          \"Default unit is px. You can also use % or other units for width.\",\n      },\n      children: {\n        type: \"slot\",\n        defaultValue: {\n          type: \"vbox\",\n          children: [\"Modal content\"],\n        },\n      },\n      title: {\n        type: \"slot\",\n        defaultValue: \"Modal title\",\n      },\n      footer: {\n        type: \"slot\",\n        hidePlaceholder: true,\n        hidden: (ps) => ps.hideFooter ?? false,\n      },\n      trigger: {\n        type: \"slot\",\n        hidePlaceholder: true,\n        defaultValue: {\n          type: \"component\",\n          name: \"plasmic-antd5-button\",\n          props: {\n            children: {\n              type: \"text\",\n              value: \"Show modal\",\n            },\n          },\n        },\n        ...({\n          mergeWithParent: true,\n        } as any),\n      },\n      closeIcon: {\n        type: \"slot\",\n        hidePlaceholder: true,\n      },\n      onOk: {\n        type: \"eventHandler\",\n        argTypes: [],\n      } as any,\n      onCancel: {\n        type: \"eventHandler\",\n        argTypes: [],\n      } as any,\n      okText: {\n        type: \"string\",\n        hidden: (ps) => !!ps.footer,\n        advanced: true,\n      },\n      cancelText: {\n        type: \"string\",\n        hidden: (ps) => !!ps.footer,\n        advanced: true,\n      },\n      hideFooter: {\n        type: \"boolean\",\n        description: \"Hide the modal footer slot\",\n        advanced: true,\n      },\n      onOpenChange: {\n        type: \"eventHandler\",\n        argTypes: [{ name: \"open\", type: \"boolean\" }],\n      } as any,\n      maskClosable: {\n        type: \"boolean\",\n        displayName: \"Close modal on outside click?\",\n        description:\n          \"Whether to close the modal when user clicks outside the modal\",\n        defaultValueHint: true,\n      },\n      wrapClassName: {\n        type: \"class\",\n        displayName: \"Modal overlay\",\n        styleSections: [\"background\"],\n      },\n      modalScopeClassName: {\n        type: \"styleScopeClass\",\n        scopeName: \"modal\",\n      } as any,\n      modalContentClassName: {\n        type: \"class\",\n        displayName: \"Modal content\",\n        noSelf: true,\n        styleSections,\n        selectors: [\n          {\n            selector: \":modal .ant-modal-content\",\n            label: \"Base\",\n          },\n        ],\n      } as any,\n      closeButtonClassName: {\n        type: \"class\",\n        displayName: \"Close button\",\n        noSelf: true,\n        selectors: [\n          {\n            selector: \":modal .ant-modal-close\",\n            label: \"Base\",\n          },\n        ],\n        advanced: true,\n      } as any,\n      defaultStylesClassName: {\n        type: \"themeResetClass\",\n      } as any,\n    },\n    states: {\n      open: {\n        type: \"writable\",\n        valueProp: \"open\",\n        onChangeProp: \"onOpenChange\",\n        variableType: \"boolean\",\n      },\n    },\n    templates: {\n      \"Modal Form\": {\n        props: {\n          children: {\n            type: \"component\",\n            name: \"plasmic-antd5-form\",\n          },\n          hideFooter: true,\n        },\n      },\n      \"Generic Modal\": {},\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerModal\",\n    importName: \"AntdModal\",\n  });\n}\n"],"names":["React","useMemo","Modal","registerComponentHelper"],"mappings":"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"}