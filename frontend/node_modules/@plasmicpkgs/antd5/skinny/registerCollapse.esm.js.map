{"version":3,"file":"registerCollapse.esm.js","sources":["../src/registerCollapse.tsx"],"sourcesContent":["import type { PropType } from \"@plasmicapp/host\";\nimport { Collapse } from \"antd\";\nimport uniqueId from \"lodash/uniqueId\";\nimport React, { useMemo } from \"react\";\nimport { Registerable, registerComponentHelper } from \"./utils\";\n\nexport const singleCollapseComponentName = \"plasmic-antd5-single-collapse\";\nexport const accordionComponentName = \"plasmic-antd5-collapse\";\nexport const accordionItemComponentName = \"plasmic-antd5-collapse-item\";\n\ntype AccordionItemType = NonNullable<\n  React.ComponentProps<typeof Collapse>[\"items\"]\n>[number];\n\ntype SingleCollapseProps = Omit<\n  React.ComponentProps<typeof Collapse>,\n  \"items\" | \"activeKey\" | \"defaultActiveKey\" | \"expandIcon\" | \"accordion\"\n> &\n  AccordionItemType & {\n    open?: boolean;\n    defaultOpen?: boolean;\n    disabled?: boolean;\n    expandIcon?: React.ReactElement;\n    rotateCustomExpandIcon: boolean;\n    children: React.ReactElement;\n    label2: React.ReactElement; // For backwards compatibility\n  };\n\nexport function AntdAccordionItem({ children }: AccordionItemType) {\n  return <div>{children}</div>;\n}\n\nexport function AntdAccordion(\n  props: Omit<\n    React.ComponentProps<typeof Collapse>,\n    \"items\" | \"activeKey\" | \"defaultActiveKey\" | \"expandIcon\" | \"accordion\"\n  > & {\n    items: { props: { children: React.ReactElement<AccordionItemType>[] } };\n    defaultActiveKey?: string;\n    activeKey?: string;\n    disabled?: boolean;\n    expandIcon?: React.ReactElement;\n    rotateCustomExpandIcon: boolean;\n  }\n) {\n  const {\n    items: itemsRaw,\n    activeKey,\n    defaultActiveKey,\n    expandIcon,\n    collapsible,\n    disabled,\n    rotateCustomExpandIcon,\n    ...rest\n  } = props;\n\n  const items: AccordionItemType[] = useMemo(() => {\n    if (!React.isValidElement(itemsRaw) && !Array.isArray(itemsRaw)) return [];\n    return (\n      Array.isArray(itemsRaw)\n        ? itemsRaw\n        : Array.isArray(itemsRaw.props.children)\n        ? itemsRaw.props.children\n        : [itemsRaw.props.children]\n    )\n      .map((currentItem) => {\n        const props = {\n          ...currentItem.props,\n          id: currentItem.props.id,\n          key: currentItem.props.id,\n          children: React.cloneElement(<>{currentItem.props.children}</>),\n        };\n        if (currentItem.props.label) {\n          // The old `label` prop takes precedence, delete label2\n          delete (props as any).label2;\n        } else {\n          // Keep `label2` so the `hidden` function knows it's used\n          props.label = (props as any).label2;\n        }\n\n        return props;\n      })\n      .filter((i) => i != null) as AccordionItemType[];\n  }, [itemsRaw]);\n\n  return (\n    <Collapse\n      accordion\n      items={items}\n      defaultActiveKey={defaultActiveKey}\n      activeKey={activeKey}\n      collapsible={disabled ? \"disabled\" : collapsible}\n      expandIcon={\n        expandIcon\n          ? ({ isActive }) => (\n              <div\n                style={\n                  isActive && rotateCustomExpandIcon\n                    ? { transform: \"rotate(90deg)\" }\n                    : undefined\n                }\n              >\n                {expandIcon}\n              </div>\n            )\n          : undefined\n      }\n      {...rest}\n    />\n  );\n}\n\nexport function AntdSingleCollapse(props: SingleCollapseProps) {\n  const {\n    open,\n    defaultOpen,\n    expandIcon,\n    collapsible,\n    disabled,\n    rotateCustomExpandIcon,\n    label: oldLabelProp,\n    label2: newLabelProp,\n    showArrow,\n    extra,\n    forceRender,\n    children,\n    headerClass,\n    ...rest\n  } = props;\n\n  const label = oldLabelProp ?? newLabelProp;\n  const defaultItemKey = useMemo(() => uniqueId(), []);\n\n  const item = useMemo(\n    () => ({\n      key: defaultItemKey,\n      label,\n      showArrow,\n      extra: <>{extra}</>,\n      headerClass,\n      children,\n    }),\n    [label, showArrow, extra, children, defaultItemKey, headerClass]\n  );\n\n  return (\n    <Collapse\n      accordion={false}\n      items={[item]}\n      defaultActiveKey={defaultOpen ? item.key : undefined}\n      activeKey={open ? item.key : undefined}\n      collapsible={disabled ? \"disabled\" : collapsible}\n      expandIcon={\n        expandIcon\n          ? ({ isActive }) => (\n              <div\n                style={\n                  isActive && rotateCustomExpandIcon\n                    ? { transform: \"rotate(90deg)\" }\n                    : undefined\n                }\n              >\n                {expandIcon}\n              </div>\n            )\n          : undefined\n      }\n      {...rest}\n    />\n  );\n}\n\nexport const accordionHelpers = {\n  states: {\n    activePanelId: {\n      onChangeArgsToValue: (activeKeys: string[]) => activeKeys[0],\n    },\n  },\n};\n\nexport const singleCollapseHelpers = {\n  states: {\n    open: {\n      onChangeArgsToValue: (activeKeys: string[]) => activeKeys.length > 0,\n    },\n  },\n};\n\nconst commonAccordionProps: Record<string, PropType<any>> = {\n  bordered: {\n    type: \"boolean\",\n    defaultValue: true,\n    description: `Display border around accordion `,\n  },\n  disabled: {\n    type: \"boolean\",\n    description: \"Disable the toggle behaviour of panels\",\n  },\n  expandIcon: {\n    type: \"slot\",\n    hidePlaceholder: true,\n  },\n  rotateCustomExpandIcon: {\n    type: \"boolean\",\n    description: \"Enable rotation of custom expand icon when panel is expanded\",\n    advanced: true,\n    hidden: (ps) => !ps.expandIcon,\n  },\n  expandIconPosition: {\n    type: \"choice\",\n    defaultValueHint: \"start\",\n    description: `Set expand icon position`,\n    options: [\"start\", \"end\"],\n  },\n  ghost: {\n    type: \"boolean\",\n    description: `Make the accordion borderless and its background transparent`,\n  },\n  size: {\n    type: \"choice\",\n    defaultValueHint: \"middle\",\n    description: `Set the size of accordion`,\n    options: [\"large\", \"middle\", \"small\"],\n  },\n  onChange: {\n    type: \"eventHandler\",\n    argTypes: [{ name: \"activeIds\", type: \"object\" }],\n  },\n};\n\nconst commonAccordionItemProps: Record<string, PropType<any>> = {\n  label: {\n    type: \"string\",\n    displayName: \"Header Content\",\n    description: \"Text inside the header\",\n    hidden: (props) =>\n      props.label != null\n        ? false\n        : props?.label2 !== undefined || props?.header === undefined,\n  },\n  label2: {\n    type: \"slot\",\n    displayName: \"Header Content\",\n    defaultValue: \"Collapse Header\",\n    hidePlaceholder: true,\n    hidden: (props) =>\n      props.label != null\n        ? true\n        : props?.label2 === undefined && props?.header !== undefined,\n  },\n  extra: {\n    type: \"slot\",\n    hidePlaceholder: true,\n  },\n  showArrow: {\n    type: \"boolean\",\n    defaultValue: true,\n    description: `Whether to show animating arrow alongside header text`,\n    advanced: true,\n  },\n  headerClass: {\n    type: \"class\",\n    displayName: \"Header\",\n  },\n  children: {\n    type: \"slot\",\n    hidePlaceholder: true,\n    ...({ mergeWithParent: true } as any),\n    defaultValue: \"Collapsible text...\",\n  },\n};\n\nconst commonProps: Record<string, PropType<any>> = {\n  collapsible: {\n    displayName: \"Toggle Area\",\n    type: \"choice\",\n    defaultValueHint: \"header\",\n    description: `Specify the element that can be clicked to toggle a panel`,\n    options: [\"header\", \"icon\"],\n    advanced: true,\n    hidden: (ps) => Boolean(ps.disabled),\n  },\n  destroyInactivePanel: {\n    type: \"boolean\",\n    description: `Destroy/Unmount panel if inactive`,\n    advanced: true,\n  },\n  forceRender: {\n    type: \"boolean\",\n    description: `Force rendering of content in the panel, instead of lazy rendering it.`,\n    advanced: true,\n  },\n};\n\nexport function registerCollapse(loader?: Registerable) {\n  registerComponentHelper(loader, AntdSingleCollapse, {\n    name: singleCollapseComponentName,\n    displayName: \"Collapse\",\n    description: \"Accordion, but with a single collapsible block.\",\n    defaultStyles: {\n      width: \"stretch\",\n    },\n    props: {\n      open: {\n        editOnly: true,\n        displayName: \"Open\",\n        uncontrolledProp: \"defaultOpen\",\n        type: \"boolean\",\n        description: `Default open state of the collapse block`,\n      },\n      ...commonProps,\n      ...commonAccordionItemProps,\n      ...commonAccordionProps,\n    },\n    states: {\n      open: {\n        type: \"writable\",\n        valueProp: \"open\",\n        onChangeProp: \"onChange\",\n        variableType: \"boolean\",\n        ...singleCollapseHelpers.states.open,\n      },\n    },\n    componentHelpers: {\n      helpers: singleCollapseHelpers,\n      importName: \"singleCollapseHelpers\",\n      importPath: \"@plasmicpkgs/antd5/skinny/registerCollapse\",\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerCollapse\",\n    importName: \"AntdSingleCollapse\",\n  });\n\n  registerComponentHelper(loader, AntdAccordion, {\n    name: accordionComponentName,\n    displayName: \"Accordion\",\n    defaultStyles: {\n      width: \"stretch\",\n    },\n    props: {\n      activeKey: {\n        editOnly: true,\n        displayName: \"Active panel ID\",\n        uncontrolledProp: \"defaultActiveKey\",\n        type: \"string\",\n        description: `ID of Accordion item that is expanded by default.`,\n        advanced: true,\n      },\n      items: {\n        type: \"slot\",\n        hidePlaceholder: true,\n        allowedComponents: [accordionItemComponentName],\n        ...({ mergeWithParent: true } as any),\n        defaultValue: [\n          {\n            type: \"component\",\n            name: accordionItemComponentName,\n            props: {\n              id: 1,\n              label2: {\n                type: \"text\",\n                value: \"First Item\",\n              },\n              children: {\n                type: \"text\",\n                value: \"First Children\",\n              },\n            },\n          },\n          {\n            type: \"component\",\n            name: accordionItemComponentName,\n            props: {\n              id: 2,\n              label2: {\n                type: \"text\",\n                value: \"Second Item\",\n              },\n              children: {\n                type: \"text\",\n                value: \"Second Children\",\n              },\n            },\n          },\n        ],\n      },\n      ...commonProps,\n      ...commonAccordionProps,\n    },\n    states: {\n      activePanelId: {\n        type: \"writable\",\n        valueProp: \"activeKey\",\n        onChangeProp: \"onChange\",\n        variableType: \"text\",\n        ...accordionHelpers.states.activePanelId,\n      },\n    },\n    componentHelpers: {\n      helpers: accordionHelpers,\n      importName: \"accordionHelpers\",\n      importPath: \"@plasmicpkgs/antd5/skinny/registerCollapse\",\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerCollapse\",\n    importName: \"AntdAccordion\",\n  });\n\n  registerComponentHelper(loader, AntdAccordionItem, {\n    name: accordionItemComponentName,\n    displayName: \"Accordion Item\",\n    props: {\n      id: {\n        type: \"string\",\n        description: `Unique identifier for this item`,\n        required: true,\n      },\n      ...commonProps,\n      ...commonAccordionItemProps,\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerCollapse\",\n    importName: \"AntdAccordionItem\",\n    parentComponentName: accordionComponentName,\n  });\n}\n"],"names":["props"],"mappings":"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"}