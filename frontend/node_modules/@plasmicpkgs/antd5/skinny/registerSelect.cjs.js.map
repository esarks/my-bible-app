{"version":3,"file":"registerSelect.cjs.js","sources":["../src/registerSelect.tsx"],"sourcesContent":["import { Select } from \"antd\";\nimport React, { ComponentProps } from \"react\";\nimport {\n  optionComponentName,\n  optionGroupComponentName,\n  selectComponentName,\n} from \"./names\";\nimport { reactNodeToString } from \"./react-utils\";\nimport {\n  Registerable,\n  registerComponentHelper,\n  traverseReactEltTree,\n} from \"./utils\";\n\nexport const AntdOption: typeof Select.Option = Select.Option;\nexport const AntdOptionGroup: typeof Select.OptGroup = Select.OptGroup;\n\nexport function AntdSelect(\n  props: ComponentProps<typeof Select> & {\n    popupScopeClassName?: string;\n    popupClassName?: string;\n    defaultStylesClassName?: string;\n    useChildren?: boolean;\n  }\n) {\n  const {\n    popupClassName,\n    popupScopeClassName,\n    defaultStylesClassName,\n    suffixIcon,\n    mode,\n    useChildren,\n    ...rest\n  } = props;\n  const curated = { ...rest };\n  if (useChildren) {\n    curated.options = undefined;\n  }\n  return (\n    <Select\n      {...curated}\n      mode={!mode || (mode as any) === \"single\" ? undefined : mode}\n      popupClassName={`${defaultStylesClassName} ${popupScopeClassName} ${popupClassName}`}\n      optionFilterProp={curated.options ? \"label\" : undefined}\n      filterOption={(input, option) =>\n        (useChildren\n          ? reactNodeToString(option?.children)\n          : option?.label ?? \"\"\n        )\n          .toLowerCase()\n          .includes(input.toLowerCase())\n      }\n      {...(suffixIcon && { suffixIcon })}\n    />\n  );\n}\n\nexport function registerSelect(loader?: Registerable) {\n  registerComponentHelper(loader, AntdSelect, {\n    name: selectComponentName,\n    displayName: \"Select\",\n    props: {\n      options: {\n        type: \"array\",\n        hidden: (ps) => !!ps.useChildren,\n        itemType: {\n          type: \"object\",\n          nameFunc: (item: any) => item.label || item.value,\n          fields: {\n            type: {\n              type: \"choice\",\n              options: [\n                { value: \"option\", label: \"Option\" },\n                { value: \"option-group\", label: \"Option Group\" },\n              ],\n              defaultValue: \"option\",\n            },\n            value: {\n              type: \"string\",\n              hidden: (_ps: any, _ctx: any, { item }: any) =>\n                item.type !== \"option\",\n            },\n            label: \"string\",\n            options: {\n              type: \"array\",\n              hidden: (_ps: any, _ctx: any, { item }: any) => {\n                return item.type !== \"option-group\";\n              },\n              itemType: {\n                type: \"object\",\n                nameFunc: (item: any) => item.label || item.value,\n                fields: {\n                  value: \"string\",\n                  label: \"string\",\n                },\n              },\n            },\n          },\n        },\n        defaultValue: [\n          {\n            value: \"option1\",\n            label: \"Option 1\",\n            type: \"option\",\n          },\n          {\n            value: \"option2\",\n            label: \"Option 2\",\n            type: \"option\",\n          },\n        ],\n      },\n\n      useChildren: {\n        displayName: \"Use slot\",\n        type: \"boolean\",\n        defaultValueHint: false,\n        advanced: true,\n        description:\n          \"Instead of configuring a list of options, customize the contents of the Select by dragging and dropping options in the outline/canvas, inside the 'children' slot. Lets you use any content or formatting within the Options, and also use Option Groups.\",\n      },\n\n      children: {\n        type: \"slot\",\n        allowedComponents: [optionComponentName, optionGroupComponentName],\n        hidden: (ps) => !ps.useChildren,\n      },\n\n      placeholder: {\n        type: \"slot\",\n        defaultValue: \"Select...\",\n      },\n      suffixIcon: {\n        type: \"slot\",\n        hidePlaceholder: true,\n      },\n      open: {\n        type: \"boolean\",\n        editOnly: true,\n        uncontrolledProp: \"defaultOpen\",\n      },\n      value: {\n        type: \"choice\",\n        displayName: \"Selected value\",\n        editOnly: true,\n        uncontrolledProp: \"defaultValue\",\n        description: \"Initial selected option\",\n        multiSelect: (ps) => ps.mode === \"multiple\",\n        options: (ps) => {\n          const options = new Set<string>();\n          if (!ps.useChildren) {\n            const rec = (op: any) => {\n              if (typeof op === \"string\") {\n                return [{ value: op, label: op }];\n              } else if (\"options\" in op) {\n                return (op.options ?? []).flatMap((sub: any) => rec(sub));\n              } else {\n                return [{ value: op.value, label: op.label || op.value }];\n              }\n            };\n            return (ps.options ?? []).flatMap((o: any) => rec(o));\n          } else {\n            traverseReactEltTree(ps.children, (elt) => {\n              if (\n                elt?.type === Select.Option &&\n                typeof elt?.props?.value === \"string\"\n              ) {\n                options.add(elt.props.value);\n              }\n            });\n          }\n          return Array.from(options.keys());\n        },\n        hidden: (ps: any) => !!ps.__plasmicFormField,\n      },\n      mode: {\n        type: \"choice\",\n        options: [\"single\", \"multiple\", \"tags\"],\n        defaultValueHint: \"single\",\n        description:\n          \"Whether to allow single or multiple selection. Tags mode additionally allows selecting options outside the specified set of options.\",\n      },\n      size: {\n        type: \"choice\",\n        options: [\"small\", \"middle\", \"large\"],\n      },\n      disabled: {\n        type: \"boolean\",\n        defaultValueHint: false,\n      },\n      showSearch: {\n        type: \"boolean\",\n        defaultValueHint: false,\n        advanced: true,\n      },\n      status: {\n        type: \"choice\",\n        options: [\"error\", \"warning\"],\n        advanced: true,\n      },\n      bordered: {\n        type: \"boolean\",\n        defaultValueHint: true,\n      },\n      autoFocus: {\n        type: \"boolean\",\n        displayName: \"Focus automatically\",\n        defaultValueHint: false,\n        advanced: true,\n      },\n      onChange: {\n        type: \"eventHandler\",\n        argTypes: [\n          { name: \"value\", type: \"string\" },\n          { name: \"option\", type: \"object\" },\n        ],\n      } as any,\n      dropdownMatchSelectWidth: {\n        type: \"boolean\",\n        displayName: \"Should dropdown match trigger button width?\",\n        defaultValueHint: true,\n        advanced: true,\n      },\n      allowClear: {\n        type: \"boolean\",\n        displayName: \"Allow clearing the Select\",\n        defaultValueHint: false,\n        advanced: true,\n      },\n      triggerClassName: {\n        type: \"class\",\n        displayName: \"Trigger styles\",\n        noSelf: true,\n        selectors: [\n          {\n            selector: \":component .ant-select-selector.ant-select-selector\",\n            label: \"Base\",\n          },\n          {\n            selector: \":component .ant-select-selector:hover\",\n            label: \"Hovered\",\n          },\n        ],\n        advanced: true,\n      } as any,\n      popupScopeClassName: {\n        type: \"styleScopeClass\",\n        scopeName: \"popup\",\n      } as any,\n      popupClassName: {\n        type: \"class\",\n        displayName: \"Popup styles\",\n        selectors: [],\n        advanced: true,\n      } as any,\n      optionClassName: {\n        type: \"class\",\n        displayName: \"Option styles\",\n        noSelf: true,\n        selectors: [\n          {\n            selector: \":popup.ant-select-dropdown .ant-select-item-option\",\n            label: \"Base\",\n          },\n          {\n            selector:\n              \":popup.ant-select-dropdown .ant-select-item-option-active\",\n            label: \"Focused\",\n          },\n          {\n            selector:\n              \":popup.ant-select-dropdown .ant-select-item-option-selected\",\n            label: \"Selected\",\n          },\n        ],\n        advanced: true,\n      } as any,\n      placeholderClassName: {\n        type: \"class\",\n        displayName: \"Placeholder styles\",\n        selectors: [\n          {\n            selector:\n              \":component .ant-select-selector .ant-select-selection-placeholder\",\n            label: \"Base\",\n          },\n        ],\n        advanced: true,\n      } as any,\n      defaultStylesClassName: {\n        type: \"themeResetClass\",\n      } as any,\n    },\n    states: {\n      value: {\n        type: \"writable\",\n        valueProp: \"value\",\n        onChangeProp: \"onChange\",\n        variableType: \"text\",\n        hidden: (ps: any) => !!ps.__plasmicFormField,\n      },\n    },\n    ...({ trapsSelection: true } as any),\n    importPath: \"@plasmicpkgs/antd5/skinny/registerSelect\",\n    importName: \"AntdSelect\",\n  });\n\n  registerComponentHelper(loader, AntdOption, {\n    name: optionComponentName,\n    displayName: \"Option\",\n    parentComponentName: selectComponentName,\n    props: {\n      children: {\n        type: \"slot\",\n        defaultValue: \"Option\",\n        ...({ mergeWithParent: true } as any),\n      },\n      value: {\n        type: \"string\",\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerSelect\",\n    importName: \"AntdOption\",\n  });\n\n  registerComponentHelper(loader, AntdOptionGroup, {\n    name: optionGroupComponentName,\n    displayName: \"Option Group\",\n    parentComponentName: selectComponentName,\n    props: {\n      children: {\n        type: \"slot\",\n        defaultValue: [\n          {\n            type: \"component\",\n            name: \"plasmic-antd5-option\",\n            props: {\n              value: \"option1\",\n              children: {\n                type: \"text\",\n                value: \"Option 1\",\n              },\n            },\n          },\n          {\n            type: \"component\",\n            name: \"plasmic-antd5-option\",\n            props: {\n              value: \"option2\",\n              children: {\n                type: \"text\",\n                value: \"Option 1\",\n              },\n            },\n          },\n        ],\n      },\n      label: {\n        type: \"slot\",\n        defaultValue: \"Group label\",\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerSelect\",\n    importName: \"AntdOptionGroup\",\n  });\n}\n"],"names":["Select","React","_a","reactNodeToString","registerComponentHelper","selectComponentName","optionComponentName","optionGroupComponentName","traverseReactEltTree"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcO,MAAM,aAAmCA,WAAO,CAAA,OAAA;AAChD,MAAM,kBAA0CA,WAAO,CAAA,SAAA;AAEvD,SAAS,WACd,KAMA,EAAA;AACA,EAAA,MAQI,EAPF,GAAA,KAAA,EAAA;AAAA,IAAA,cAAA;AAAA,IACA,mBAAA;AAAA,IACA,sBAAA;AAAA,IACA,UAAA;AAAA,IACA,IAAA;AAAA,IACA,WAAA;AAAA,GA/BJ,GAiCM,EADC,EAAA,IAAA,GAAA,SAAA,CACD,EADC,EAAA;AAAA,IANH,gBAAA;AAAA,IACA,qBAAA;AAAA,IACA,wBAAA;AAAA,IACA,YAAA;AAAA,IACA,MAAA;AAAA,IACA,aAAA;AAAA,GAAA,CAAA,CAAA;AAGF,EAAA,MAAM,UAAU,cAAK,CAAA,EAAA,EAAA,IAAA,CAAA,CAAA;AACrB,EAAA,IAAI,WAAa,EAAA;AACf,IAAA,OAAA,CAAQ,OAAU,GAAA,KAAA,CAAA,CAAA;AAAA,GACpB;AACA,EACE,uBAAAC,sBAAA,CAAA,aAAA;AAAA,IAACD,WAAA;AAAA,IAAA,cAAA,CAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EACK,OADL,CAAA,EAAA;AAAA,MAEC,IAAM,EAAA,CAAC,IAAS,IAAA,IAAA,KAAiB,WAAW,KAAY,CAAA,GAAA,IAAA;AAAA,MACxD,cAAA,EAAgB,CAAG,EAAA,sBAAA,CAAA,CAAA,EAA0B,mBAAuB,CAAA,CAAA,EAAA,cAAA,CAAA,CAAA;AAAA,MACpE,gBAAA,EAAkB,OAAQ,CAAA,OAAA,GAAU,OAAU,GAAA,KAAA,CAAA;AAAA,MAC9C,YAAA,EAAc,CAAC,KAAA,EAAO,MAAQ,KAAA;AA5CpC,QAAAE,IAAAA,GAAAA,CAAAA;AA6CS,QAAA,OAAA,CAAA,WAAA,GACGC,4BAAkB,CAAA,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAQ,QAAQ,CAAA,GAAA,CAClCD,MAAA,MAAQ,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAA,KAAA,KAAR,IAAAA,GAAAA,GAAAA,GAAiB,IAElB,WAAY,EAAA,CACZ,QAAS,CAAA,KAAA,CAAM,aAAa,CAAA,CAAA;AAAA,OAAA;AAAA,KAE5B,CAAA,EAAA,UAAA,IAAc,EAAE,UAAW,EAAA,CAAA;AAAA,GAClC,CAAA;AAEJ,CAAA;AAEO,SAAS,eAAe,MAAuB,EAAA;AACpD,EAAAE,6BAAA,CAAwB,QAAQ,UAAY,EAAA,aAAA,CAAA,cAAA,CAAA;AAAA,IAC1C,IAAM,EAAAC,yBAAA;AAAA,IACN,WAAa,EAAA,QAAA;AAAA,IACb,KAAO,EAAA;AAAA,MACL,OAAS,EAAA;AAAA,QACP,IAAM,EAAA,OAAA;AAAA,QACN,MAAQ,EAAA,CAAC,EAAO,KAAA,CAAC,CAAC,EAAG,CAAA,WAAA;AAAA,QACrB,QAAU,EAAA;AAAA,UACR,IAAM,EAAA,QAAA;AAAA,UACN,QAAU,EAAA,CAAC,IAAc,KAAA,IAAA,CAAK,SAAS,IAAK,CAAA,KAAA;AAAA,UAC5C,MAAQ,EAAA;AAAA,YACN,IAAM,EAAA;AAAA,cACJ,IAAM,EAAA,QAAA;AAAA,cACN,OAAS,EAAA;AAAA,gBACP,EAAE,KAAA,EAAO,QAAU,EAAA,KAAA,EAAO,QAAS,EAAA;AAAA,gBACnC,EAAE,KAAA,EAAO,cAAgB,EAAA,KAAA,EAAO,cAAe,EAAA;AAAA,eACjD;AAAA,cACA,YAAc,EAAA,QAAA;AAAA,aAChB;AAAA,YACA,KAAO,EAAA;AAAA,cACL,IAAM,EAAA,QAAA;AAAA,cACN,MAAA,EAAQ,CAAC,GAAU,EAAA,IAAA,EAAW,EAAE,IAAK,EAAA,KACnC,KAAK,IAAS,KAAA,QAAA;AAAA,aAClB;AAAA,YACA,KAAO,EAAA,QAAA;AAAA,YACP,OAAS,EAAA;AAAA,cACP,IAAM,EAAA,OAAA;AAAA,cACN,QAAQ,CAAC,GAAA,EAAU,IAAW,EAAA,EAAE,MAAgB,KAAA;AAC9C,gBAAA,OAAO,KAAK,IAAS,KAAA,cAAA,CAAA;AAAA,eACvB;AAAA,cACA,QAAU,EAAA;AAAA,gBACR,IAAM,EAAA,QAAA;AAAA,gBACN,QAAU,EAAA,CAAC,IAAc,KAAA,IAAA,CAAK,SAAS,IAAK,CAAA,KAAA;AAAA,gBAC5C,MAAQ,EAAA;AAAA,kBACN,KAAO,EAAA,QAAA;AAAA,kBACP,KAAO,EAAA,QAAA;AAAA,iBACT;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,QACA,YAAc,EAAA;AAAA,UACZ;AAAA,YACE,KAAO,EAAA,SAAA;AAAA,YACP,KAAO,EAAA,UAAA;AAAA,YACP,IAAM,EAAA,QAAA;AAAA,WACR;AAAA,UACA;AAAA,YACE,KAAO,EAAA,SAAA;AAAA,YACP,KAAO,EAAA,UAAA;AAAA,YACP,IAAM,EAAA,QAAA;AAAA,WACR;AAAA,SACF;AAAA,OACF;AAAA,MAEA,WAAa,EAAA;AAAA,QACX,WAAa,EAAA,UAAA;AAAA,QACb,IAAM,EAAA,SAAA;AAAA,QACN,gBAAkB,EAAA,KAAA;AAAA,QAClB,QAAU,EAAA,IAAA;AAAA,QACV,WACE,EAAA,2PAAA;AAAA,OACJ;AAAA,MAEA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,MAAA;AAAA,QACN,iBAAA,EAAmB,CAACC,yBAAA,EAAqBC,8BAAwB,CAAA;AAAA,QACjE,MAAQ,EAAA,CAAC,EAAO,KAAA,CAAC,EAAG,CAAA,WAAA;AAAA,OACtB;AAAA,MAEA,WAAa,EAAA;AAAA,QACX,IAAM,EAAA,MAAA;AAAA,QACN,YAAc,EAAA,WAAA;AAAA,OAChB;AAAA,MACA,UAAY,EAAA;AAAA,QACV,IAAM,EAAA,MAAA;AAAA,QACN,eAAiB,EAAA,IAAA;AAAA,OACnB;AAAA,MACA,IAAM,EAAA;AAAA,QACJ,IAAM,EAAA,SAAA;AAAA,QACN,QAAU,EAAA,IAAA;AAAA,QACV,gBAAkB,EAAA,aAAA;AAAA,OACpB;AAAA,MACA,KAAO,EAAA;AAAA,QACL,IAAM,EAAA,QAAA;AAAA,QACN,WAAa,EAAA,gBAAA;AAAA,QACb,QAAU,EAAA,IAAA;AAAA,QACV,gBAAkB,EAAA,cAAA;AAAA,QAClB,WAAa,EAAA,yBAAA;AAAA,QACb,WAAa,EAAA,CAAC,EAAO,KAAA,EAAA,CAAG,IAAS,KAAA,UAAA;AAAA,QACjC,OAAA,EAAS,CAAC,EAAO,KAAA;AApJzB,UAAA,IAAA,EAAA,CAAA;AAqJU,UAAM,MAAA,OAAA,uBAAc,GAAY,EAAA,CAAA;AAChC,UAAI,IAAA,CAAC,GAAG,WAAa,EAAA;AACnB,YAAM,MAAA,GAAA,GAAM,CAAC,EAAY,KAAA;AAvJrC,cAAAL,IAAAA,GAAAA,CAAAA;AAwJc,cAAI,IAAA,OAAO,OAAO,QAAU,EAAA;AAC1B,gBAAA,OAAO,CAAC,EAAE,KAAA,EAAO,EAAI,EAAA,KAAA,EAAO,IAAI,CAAA,CAAA;AAAA,eAClC,MAAA,IAAW,aAAa,EAAI,EAAA;AAC1B,gBAAA,OAAA,CAAA,CAAQA,GAAA,GAAA,EAAA,CAAG,OAAH,KAAA,IAAA,GAAAA,GAAc,GAAA,EAAI,EAAA,OAAA,CAAQ,CAAC,GAAA,KAAa,GAAI,CAAA,GAAG,CAAC,CAAA,CAAA;AAAA,eACnD,MAAA;AACL,gBAAO,OAAA,CAAC,EAAE,KAAA,EAAO,EAAG,CAAA,KAAA,EAAO,OAAO,EAAG,CAAA,KAAA,IAAS,EAAG,CAAA,KAAA,EAAO,CAAA,CAAA;AAAA,eAC1D;AAAA,aACF,CAAA;AACA,YAAQ,OAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAG,OAAH,KAAA,IAAA,GAAA,EAAA,GAAc,EAAC,EAAG,QAAQ,CAAC,CAAA,KAAW,GAAI,CAAA,CAAC,CAAC,CAAA,CAAA;AAAA,WAC/C,MAAA;AACL,YAAqBM,0BAAA,CAAA,EAAA,CAAG,QAAU,EAAA,CAAC,GAAQ,KAAA;AAlKvD,cAAAN,IAAAA,GAAAA,CAAAA;AAmKc,cACE,IAAA,CAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,IAAS,MAAAF,WAAA,CAAO,MACrB,IAAA,QAAA,CAAOE,GAAA,GAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,KAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,GAAY,CAAA,KAAA,CAAA,KAAU,QAC7B,EAAA;AACA,gBAAQ,OAAA,CAAA,GAAA,CAAI,GAAI,CAAA,KAAA,CAAM,KAAK,CAAA,CAAA;AAAA,eAC7B;AAAA,aACD,CAAA,CAAA;AAAA,WACH;AACA,UAAA,OAAO,KAAM,CAAA,IAAA,CAAK,OAAQ,CAAA,IAAA,EAAM,CAAA,CAAA;AAAA,SAClC;AAAA,QACA,MAAQ,EAAA,CAAC,EAAY,KAAA,CAAC,CAAC,EAAG,CAAA,kBAAA;AAAA,OAC5B;AAAA,MACA,IAAM,EAAA;AAAA,QACJ,IAAM,EAAA,QAAA;AAAA,QACN,OAAS,EAAA,CAAC,QAAU,EAAA,UAAA,EAAY,MAAM,CAAA;AAAA,QACtC,gBAAkB,EAAA,QAAA;AAAA,QAClB,WACE,EAAA,sIAAA;AAAA,OACJ;AAAA,MACA,IAAM,EAAA;AAAA,QACJ,IAAM,EAAA,QAAA;AAAA,QACN,OAAS,EAAA,CAAC,OAAS,EAAA,QAAA,EAAU,OAAO,CAAA;AAAA,OACtC;AAAA,MACA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,SAAA;AAAA,QACN,gBAAkB,EAAA,KAAA;AAAA,OACpB;AAAA,MACA,UAAY,EAAA;AAAA,QACV,IAAM,EAAA,SAAA;AAAA,QACN,gBAAkB,EAAA,KAAA;AAAA,QAClB,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,MAAQ,EAAA;AAAA,QACN,IAAM,EAAA,QAAA;AAAA,QACN,OAAA,EAAS,CAAC,OAAA,EAAS,SAAS,CAAA;AAAA,QAC5B,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,SAAA;AAAA,QACN,gBAAkB,EAAA,IAAA;AAAA,OACpB;AAAA,MACA,SAAW,EAAA;AAAA,QACT,IAAM,EAAA,SAAA;AAAA,QACN,WAAa,EAAA,qBAAA;AAAA,QACb,gBAAkB,EAAA,KAAA;AAAA,QAClB,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,cAAA;AAAA,QACN,QAAU,EAAA;AAAA,UACR,EAAE,IAAA,EAAM,OAAS,EAAA,IAAA,EAAM,QAAS,EAAA;AAAA,UAChC,EAAE,IAAA,EAAM,QAAU,EAAA,IAAA,EAAM,QAAS,EAAA;AAAA,SACnC;AAAA,OACF;AAAA,MACA,wBAA0B,EAAA;AAAA,QACxB,IAAM,EAAA,SAAA;AAAA,QACN,WAAa,EAAA,6CAAA;AAAA,QACb,gBAAkB,EAAA,IAAA;AAAA,QAClB,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,UAAY,EAAA;AAAA,QACV,IAAM,EAAA,SAAA;AAAA,QACN,WAAa,EAAA,2BAAA;AAAA,QACb,gBAAkB,EAAA,KAAA;AAAA,QAClB,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,gBAAkB,EAAA;AAAA,QAChB,IAAM,EAAA,OAAA;AAAA,QACN,WAAa,EAAA,gBAAA;AAAA,QACb,MAAQ,EAAA,IAAA;AAAA,QACR,SAAW,EAAA;AAAA,UACT;AAAA,YACE,QAAU,EAAA,qDAAA;AAAA,YACV,KAAO,EAAA,MAAA;AAAA,WACT;AAAA,UACA;AAAA,YACE,QAAU,EAAA,uCAAA;AAAA,YACV,KAAO,EAAA,SAAA;AAAA,WACT;AAAA,SACF;AAAA,QACA,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,mBAAqB,EAAA;AAAA,QACnB,IAAM,EAAA,iBAAA;AAAA,QACN,SAAW,EAAA,OAAA;AAAA,OACb;AAAA,MACA,cAAgB,EAAA;AAAA,QACd,IAAM,EAAA,OAAA;AAAA,QACN,WAAa,EAAA,cAAA;AAAA,QACb,WAAW,EAAC;AAAA,QACZ,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,eAAiB,EAAA;AAAA,QACf,IAAM,EAAA,OAAA;AAAA,QACN,WAAa,EAAA,eAAA;AAAA,QACb,MAAQ,EAAA,IAAA;AAAA,QACR,SAAW,EAAA;AAAA,UACT;AAAA,YACE,QAAU,EAAA,oDAAA;AAAA,YACV,KAAO,EAAA,MAAA;AAAA,WACT;AAAA,UACA;AAAA,YACE,QACE,EAAA,2DAAA;AAAA,YACF,KAAO,EAAA,SAAA;AAAA,WACT;AAAA,UACA;AAAA,YACE,QACE,EAAA,6DAAA;AAAA,YACF,KAAO,EAAA,UAAA;AAAA,WACT;AAAA,SACF;AAAA,QACA,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,oBAAsB,EAAA;AAAA,QACpB,IAAM,EAAA,OAAA;AAAA,QACN,WAAa,EAAA,oBAAA;AAAA,QACb,SAAW,EAAA;AAAA,UACT;AAAA,YACE,QACE,EAAA,mEAAA;AAAA,YACF,KAAO,EAAA,MAAA;AAAA,WACT;AAAA,SACF;AAAA,QACA,QAAU,EAAA,IAAA;AAAA,OACZ;AAAA,MACA,sBAAwB,EAAA;AAAA,QACtB,IAAM,EAAA,iBAAA;AAAA,OACR;AAAA,KACF;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,KAAO,EAAA;AAAA,QACL,IAAM,EAAA,UAAA;AAAA,QACN,SAAW,EAAA,OAAA;AAAA,QACX,YAAc,EAAA,UAAA;AAAA,QACd,YAAc,EAAA,MAAA;AAAA,QACd,MAAQ,EAAA,CAAC,EAAY,KAAA,CAAC,CAAC,EAAG,CAAA,kBAAA;AAAA,OAC5B;AAAA,KACF;AAAA,GACI,EAAA,EAAE,cAAgB,EAAA,IAAA,EApPoB,CAAA,EAAA;AAAA,IAqP1C,UAAY,EAAA,0CAAA;AAAA,IACZ,UAAY,EAAA,YAAA;AAAA,GACb,CAAA,CAAA,CAAA;AAED,EAAAE,6BAAA,CAAwB,QAAQ,UAAY,EAAA;AAAA,IAC1C,IAAM,EAAAE,yBAAA;AAAA,IACN,WAAa,EAAA,QAAA;AAAA,IACb,mBAAqB,EAAAD,yBAAA;AAAA,IACrB,KAAO,EAAA;AAAA,MACL,QAAU,EAAA,cAAA,CAAA;AAAA,QACR,IAAM,EAAA,MAAA;AAAA,QACN,YAAc,EAAA,QAAA;AAAA,OACV,EAAA,EAAE,iBAAiB,IAAK,EAAA,CAAA;AAAA,MAE9B,KAAO,EAAA;AAAA,QACL,IAAM,EAAA,QAAA;AAAA,OACR;AAAA,KACF;AAAA,IACA,UAAY,EAAA,0CAAA;AAAA,IACZ,UAAY,EAAA,YAAA;AAAA,GACb,CAAA,CAAA;AAED,EAAAD,6BAAA,CAAwB,QAAQ,eAAiB,EAAA;AAAA,IAC/C,IAAM,EAAAG,8BAAA;AAAA,IACN,WAAa,EAAA,cAAA;AAAA,IACb,mBAAqB,EAAAF,yBAAA;AAAA,IACrB,KAAO,EAAA;AAAA,MACL,QAAU,EAAA;AAAA,QACR,IAAM,EAAA,MAAA;AAAA,QACN,YAAc,EAAA;AAAA,UACZ;AAAA,YACE,IAAM,EAAA,WAAA;AAAA,YACN,IAAM,EAAA,sBAAA;AAAA,YACN,KAAO,EAAA;AAAA,cACL,KAAO,EAAA,SAAA;AAAA,cACP,QAAU,EAAA;AAAA,gBACR,IAAM,EAAA,MAAA;AAAA,gBACN,KAAO,EAAA,UAAA;AAAA,eACT;AAAA,aACF;AAAA,WACF;AAAA,UACA;AAAA,YACE,IAAM,EAAA,WAAA;AAAA,YACN,IAAM,EAAA,sBAAA;AAAA,YACN,KAAO,EAAA;AAAA,cACL,KAAO,EAAA,SAAA;AAAA,cACP,QAAU,EAAA;AAAA,gBACR,IAAM,EAAA,MAAA;AAAA,gBACN,KAAO,EAAA,UAAA;AAAA,eACT;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,MACA,KAAO,EAAA;AAAA,QACL,IAAM,EAAA,MAAA;AAAA,QACN,YAAc,EAAA,aAAA;AAAA,OAChB;AAAA,KACF;AAAA,IACA,UAAY,EAAA,0CAAA;AAAA,IACZ,UAAY,EAAA,iBAAA;AAAA,GACb,CAAA,CAAA;AACH;;;;;;;"}