import React from 'react';
import { Steps } from 'antd';
import { r as registerComponentHelper } from './utils-5ebcaa63.esm.js';
import '@plasmicapp/host/registerComponent';
import '@plasmicapp/host/registerGlobalContext';

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
function AntdSteps(props) {
  return /* @__PURE__ */ React.createElement(Steps, __spreadValues({}, props));
}
function registerSteps(loader) {
  const statusOptions = ["wait", "process", "finish", "error"];
  registerComponentHelper(loader, AntdSteps, {
    name: "plasmic-antd5-steps",
    displayName: "Steps",
    props: {
      items: {
        type: "array",
        itemType: {
          type: "object",
          nameFunc: (item) => item.title,
          fields: {
            title: "string",
            description: "string",
            subTitle: "string",
            disabled: "boolean",
            status: {
              displayName: "Status",
              type: "choice",
              options: statusOptions,
              defaultValueHint: "wait"
            }
            // TODO icon: 'slot',
          }
        },
        defaultValue: [
          {
            title: "Applied",
            description: "Application has been submitted."
          },
          {
            title: "In Review",
            description: "Application is being reviewed."
          },
          {
            title: "Closed",
            description: "Final decision on the application."
          }
        ]
      },
      current: {
        type: "number",
        displayName: "Current step",
        defaultValue: 1
      },
      size: {
        type: "choice",
        options: ["small", "default"],
        description: "Set the size of steps",
        defaultValueHint: "default"
      },
      direction: {
        type: "choice",
        options: ["horizontal", "vertical"],
        description: "Direction of steps",
        defaultValueHint: "horizontal"
      },
      progressDot: {
        type: "boolean",
        displayName: "Dot style"
      },
      status: {
        displayName: "Status of current step",
        type: "choice",
        options: statusOptions,
        defaultValueHint: "process"
      },
      type: {
        type: "choice",
        options: ["default", "navigation", "inline"],
        defaultValueHint: "default"
      },
      percent: {
        advanced: true,
        type: "number",
        description: "Number between 0 to 100"
      },
      responsive: {
        advanced: true,
        type: "boolean",
        description: "Change to vertical when screen narrower than 532px"
      },
      onChange: {
        type: "eventHandler",
        argTypes: [
          {
            name: "step",
            type: "number"
          }
        ]
      }
    },
    states: {
      current: {
        type: "writable",
        valueProp: "current",
        onChangeProp: "onChange",
        variableType: "number"
      }
    },
    importPath: "@plasmicpkgs/antd5/skinny/registerSteps",
    importName: "AntdSteps"
  });
}

export { AntdSteps, registerSteps };
//# sourceMappingURL=registerSteps.esm.js.map
