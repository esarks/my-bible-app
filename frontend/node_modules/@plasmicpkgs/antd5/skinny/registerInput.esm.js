import { Input, InputNumber } from 'antd';
import { i as inputComponentName, t as textAreaComponentName, p as passwordComponentName, d as inputNumberComponentName } from './names-73583568.esm.js';
import { r as registerComponentHelper } from './utils-5ebcaa63.esm.js';
import '@plasmicapp/host/registerComponent';
import '@plasmicapp/host/registerGlobalContext';
import 'react';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const AntdInput = Input;
const AntdTextArea = Input.TextArea;
const AntdPassword = Input.Password;
const AntdInputNumber = InputNumber;
const inputHelpers = {
  states: {
    value: {
      onChangeArgsToValue: (e) => {
        return e.target.value;
      }
    }
  }
};
const COMMON_HELPERS_CONFIG = {
  helpers: inputHelpers,
  importName: "inputHelpers",
  importPath: "@plasmicpkgs/antd5/skinny/registerInput"
};
const COMMON_STATES = {
  value: {
    type: "writable",
    valueProp: "value",
    variableType: "text",
    onChangeProp: "onChange",
    hidden: (ps) => !!ps.__plasmicFormField
  }
};
const COMMON_DECORATOR_PROPS = {
  prefix: {
    type: "slot",
    hidePlaceholder: true
  },
  suffix: {
    type: "slot",
    hidePlaceholder: true
  },
  addonAfter: {
    type: "slot",
    hidePlaceholder: true
  },
  addonBefore: {
    type: "slot",
    hidePlaceholder: true
  }
};
const COMMON_ADVANCED_PROPS = {
  maxLength: {
    type: "number",
    advanced: true
  },
  bordered: {
    type: "boolean",
    advanced: true,
    defaultValueHint: true
  },
  allowClear: {
    type: "boolean",
    advanced: true
  },
  autoFocus: {
    type: "boolean",
    advanced: true
  },
  readOnly: {
    type: "boolean",
    advanced: true
  }
};
const COMMON_EVENT_HANDLERS = {
  onChange: {
    type: "eventHandler",
    argTypes: [
      {
        name: "event",
        type: "object"
      }
    ]
  },
  onPressEnter: {
    type: "eventHandler",
    argTypes: [
      {
        name: "event",
        type: "object"
      }
    ]
  }
};
const inputTypeOptions = [
  "text",
  "password",
  "number",
  "date",
  "datetime-local",
  "time",
  "email",
  "tel",
  "hidden"
];
function registerInput(loader) {
  registerComponentHelper(loader, AntdInput, __spreadProps(__spreadValues({
    name: inputComponentName,
    displayName: "Input",
    styleSections: ["visibility"],
    props: __spreadValues(__spreadValues(__spreadValues({
      value: {
        type: "string",
        hidden: (ps) => !!ps.__plasmicFormField
      },
      placeholder: {
        type: "string"
      },
      size: {
        type: "choice",
        options: ["large", "middle", "small"]
      },
      disabled: {
        type: "boolean"
      },
      type: {
        type: "choice",
        options: inputTypeOptions,
        defaultValueHint: "text"
      }
    }, COMMON_ADVANCED_PROPS), COMMON_DECORATOR_PROPS), COMMON_EVENT_HANDLERS),
    states: __spreadValues({}, COMMON_STATES)
  }, { trapsSelection: true }), {
    componentHelpers: COMMON_HELPERS_CONFIG,
    importPath: "@plasmicpkgs/antd5/skinny/registerInput",
    importName: "AntdInput"
  }));
}
function registerTextArea(loader) {
  registerComponentHelper(loader, AntdTextArea, {
    name: textAreaComponentName,
    parentComponentName: inputComponentName,
    displayName: "Text Area",
    styleSections: ["visibility"],
    props: __spreadValues({
      value: {
        type: "string",
        hidden: (ps) => !!ps.__plasmicFormField
      },
      placeholder: {
        type: "string"
      },
      disabled: {
        type: "boolean"
      },
      maxLength: {
        type: "number",
        advanced: true
      },
      bordered: {
        type: "boolean",
        advanced: true,
        defaultValueHint: true
      },
      autoSize: {
        type: "boolean",
        displayName: "Auto grow height?"
      }
    }, COMMON_EVENT_HANDLERS),
    states: __spreadValues({}, COMMON_STATES),
    componentHelpers: COMMON_HELPERS_CONFIG,
    importPath: "@plasmicpkgs/antd5/skinny/registerInput",
    importName: "AntdTextArea"
  });
}
function registerPasswordInput(loader) {
  registerComponentHelper(loader, AntdPassword, {
    name: passwordComponentName,
    parentComponentName: inputComponentName,
    displayName: "Password Input",
    styleSections: ["visibility"],
    props: __spreadValues({
      value: {
        type: "string",
        hidden: (ps) => !!ps.__plasmicFormField
      },
      placeholder: {
        type: "string"
      },
      disabled: {
        type: "boolean"
      },
      maxLength: {
        type: "number",
        advanced: true
      },
      bordered: {
        type: "boolean",
        advanced: true,
        defaultValueHint: true
      }
    }, COMMON_EVENT_HANDLERS),
    states: __spreadValues({}, COMMON_STATES),
    componentHelpers: COMMON_HELPERS_CONFIG,
    importPath: "@plasmicpkgs/antd5/skinny/registerInput",
    importName: "AntdPassword"
  });
}
function registerNumberInput(loader) {
  registerComponentHelper(loader, AntdInputNumber, __spreadProps(__spreadValues({
    name: inputNumberComponentName,
    parentComponentName: inputComponentName,
    displayName: "Number Input",
    styleSections: ["visibility"],
    props: __spreadProps(__spreadValues(__spreadValues(__spreadValues({
      value: {
        type: "number",
        hidden: (ps) => !!ps.__plasmicFormField
      },
      placeholder: {
        type: "string"
      },
      disabled: {
        type: "boolean"
      },
      max: {
        type: "number"
      },
      min: {
        type: "number"
      },
      step: {
        type: "number",
        helpText: "Increment or decrement step"
      },
      controls: {
        type: "boolean",
        displayName: "Show add/minus controls?",
        advanced: true
      },
      type: {
        type: "choice",
        options: inputTypeOptions,
        displayName: "Input type",
        defaultValue: "number",
        advanced: true
      }
    }, COMMON_DECORATOR_PROPS), COMMON_ADVANCED_PROPS), COMMON_EVENT_HANDLERS), {
      // onChange directly called with the number
      onChange: {
        type: "eventHandler",
        argTypes: [
          {
            name: "value",
            type: "number"
          }
        ]
      }
    }),
    states: __spreadValues({}, COMMON_STATES)
  }, { trapsSelection: true }), {
    // don't need component helpers
    importPath: "@plasmicpkgs/antd5/skinny/registerInput",
    importName: "AntdInputNumber"
  }));
}

export { AntdInput, AntdInputNumber, AntdPassword, AntdTextArea, inputHelpers, registerInput, registerNumberInput, registerPasswordInput, registerTextArea };
//# sourceMappingURL=registerInput.esm.js.map
