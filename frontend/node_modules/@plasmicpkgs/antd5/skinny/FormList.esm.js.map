{"version":3,"file":"FormList.esm.js","sources":["../src/form/FormList.tsx"],"sourcesContent":["import {\n  DataProvider,\n  repeatedElement,\n  usePlasmicCanvasContext,\n} from \"@plasmicapp/host\";\nimport { Form } from \"antd\";\nimport type { FormListOperation, FormListProps } from \"antd/es/form/FormList\";\nimport React from \"react\";\nimport {\n  InternalFormInstanceContext,\n  PathContext,\n  useFormInstanceMaybe,\n  useFormItemFullName,\n  useFormItemRelativeName,\n} from \"./contexts\";\n\nconst FormList = Form.List;\n\ntype FormListWrapperProps = Omit<FormListProps, \"children\"> & {\n  children: React.ReactNode;\n};\n\ntype FormListRenderFuncParams = Parameters<FormListProps[\"children\"]>;\n\nexport const FormListWrapper = React.forwardRef(function FormListWrapper(\n  props: FormListWrapperProps,\n  ref: React.Ref<FormListOperation>\n) {\n  const relativeFormItemName = useFormItemRelativeName(props.name);\n  const fullFormItemName = useFormItemFullName(props.name);\n  const operationsRef = React.useRef<FormListRenderFuncParams | undefined>(\n    undefined\n  );\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      add(defaultValue, insertIndex) {\n        if (operationsRef.current) {\n          const { add } = operationsRef.current[1];\n          add(defaultValue, insertIndex);\n        }\n      },\n      remove(index) {\n        if (operationsRef.current) {\n          const { remove } = operationsRef.current[1];\n          remove(index);\n        }\n      },\n      move(from, to) {\n        if (operationsRef.current) {\n          const { move } = operationsRef.current[1];\n          move(from, to);\n        }\n      },\n    }),\n    [operationsRef]\n  );\n  const inCanvas = !!usePlasmicCanvasContext();\n  if (inCanvas) {\n    const form = useFormInstanceMaybe();\n    const prevPropValues = React.useRef({\n      initialValue: props.initialValue,\n      name: props.name,\n    });\n    const { fireOnValuesChange, forceRemount } =\n      React.useContext(InternalFormInstanceContext) ?? {};\n    React.useEffect(() => {\n      if (prevPropValues.current.name !== props.name) {\n        forceRemount?.();\n      }\n      if (fullFormItemName) {\n        form?.setFieldValue(fullFormItemName, props.initialValue);\n        prevPropValues.current.initialValue = props.initialValue;\n        fireOnValuesChange?.();\n      }\n    }, [JSON.stringify(props.initialValue), JSON.stringify(fullFormItemName)]);\n  }\n  return (\n    <FormList {...props} name={relativeFormItemName ?? []}>\n      {(...args) => {\n        operationsRef.current = args;\n        return args[0].map((field, index) => (\n          <PathContext.Provider\n            value={{\n              relativePath: [field.name],\n              fullPath: [...(fullFormItemName ?? []), field.name],\n            }}\n          >\n            <DataProvider name={\"currentField\"} data={field}>\n              <DataProvider name={\"currentFieldIndex\"} data={index}>\n                {repeatedElement(index, props.children)}\n              </DataProvider>\n            </DataProvider>\n          </PathContext.Provider>\n        ));\n      }}\n    </FormList>\n  );\n});\n"],"names":["FormListWrapper"],"mappings":"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"}