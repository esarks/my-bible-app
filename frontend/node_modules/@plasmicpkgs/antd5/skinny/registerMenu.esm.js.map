{"version":3,"file":"registerMenu.esm.js","sources":["../src/registerMenu.tsx"],"sourcesContent":["import { Menu as AntdMenu } from \"antd\";\nimport { Registerable, registerComponentHelper } from \"./utils\";\n\nexport { AntdMenu };\nexport const AntdMenuDivider = AntdMenu.Divider;\nexport const AntdMenuItem = AntdMenu.Item;\nexport const AntdMenuItemGroup: typeof AntdMenu.ItemGroup = AntdMenu.ItemGroup;\nexport const AntdSubMenu = AntdMenu.SubMenu;\n\nconst allowedMenuComponents = [\n  \"plasmic-antd5-menu-item\",\n  \"plasmic-antd5-menu-divider\",\n  \"plasmic-antd5-submenu\",\n  \"plasmic-antd5-menu-item-group\",\n];\n\nexport const MENU_ITEM_TYPE = {\n  type: \"object\",\n  nameFunc: (item: any) => {\n    if (item.type === \"divider\") {\n      return \"Divider\";\n    }\n    return item.label || item.value;\n  },\n  fields: {\n    type: {\n      type: \"choice\",\n      options: [\n        { value: \"item\", label: \"Menu item\" },\n        { value: \"group\", label: \"Menu item group\" },\n        { value: \"submenu\", label: \"Sub-menu\" },\n        { value: \"divider\", label: \"Menu divider\" },\n      ],\n      defaultValue: \"item\",\n    },\n    key: {\n      type: \"string\",\n      displayName: \"Menu item key\",\n      description:\n        \"Key of the menu item; the onClick will receive this as the value to indicate which item was clicked.\",\n      hidden: (ps: any, ctx: any, { item }: any) => item.type !== \"item\",\n    },\n    label: {\n      type: \"string\",\n      description: \"Label of the menu item; will use the key if not specified.\",\n      hidden: (ps: any, ctx: any, { item }: any) => item.type === \"divider\",\n    },\n    children: {\n      type: \"array\",\n      displayName: \"Menu items\",\n      hidden: (ps: any, ctx: any, { item }: any) =>\n        item.type !== \"submenu\" && item.type !== \"group\",\n    },\n    onClick: {\n      type: \"eventHandler\",\n      displayName: \"Action\",\n      description: \"Action to perform when this item is selected\",\n      argTypes: [{ name: \"info\", type: \"object\" }],\n      hidden: (ps: any, ctx: any, { item }: any) => item.type !== \"item\",\n    },\n  },\n};\nexport const UNKEYED_MENU_ITEM_TYPE = {\n  ...MENU_ITEM_TYPE,\n  fields: Object.fromEntries(\n    Object.entries(MENU_ITEM_TYPE.fields).filter(([k]) => k !== \"key\")\n  ),\n};\n\n(MENU_ITEM_TYPE.fields.children as any).itemType = MENU_ITEM_TYPE;\n(UNKEYED_MENU_ITEM_TYPE.fields.children as any).itemType =\n  UNKEYED_MENU_ITEM_TYPE;\n\n/**\n * Note that the Menu component by itself isn't that useful.\n * It is supposed to be a stateful component, but we don't have state yet (for selected, open, etc.).\n *\n * Nor can you make it non-selectable yet and just make it be a list of clickable things.\n *\n * But we also can't get rid of it right now because it's used by Dropdown.\n *\n * Note also that we don't yet support the simpler `items` prop for configuration.\n */\nexport function registerMenu(loader?: Registerable) {\n  registerComponentHelper(loader, AntdMenu, {\n    name: \"plasmic-antd5-menu\",\n    displayName: \"Menu\",\n    props: {\n      expandIcon: {\n        type: \"slot\",\n        hidePlaceholder: true,\n      },\n      mode: {\n        type: \"choice\",\n        options: [\"horizontal\", \"vertical\", \"inline\"],\n        description: \"Type of menu\",\n        defaultValueHint: \"vertical\",\n      },\n      multiple: {\n        type: \"boolean\",\n        description: \"Allows selection of multiple items\",\n        defaultValueHint: false,\n      },\n      triggerSubMenuAction: {\n        type: \"choice\",\n        options: [\"hover\", \"click\"],\n        description: \"Which action can trigger submenu open/close\",\n        defaultValueHint: \"hover\",\n        advanced: true,\n      },\n      defaultSelectedKeys: {\n        type: 'array',\n        description: 'An array of Menu Item/s that will be selected when this component first loads, eg [\"home\", \"about\"]. Each item in the array should be one of the unique keys set in nested Menu Item component props. Useful when using the Menu component to build a website navigation bar.',\n        advanced: true,\n      },\n      //   menuScopeClassName: {\n      //     type: \"styleScopeClass\",\n      //     scopeName: \"menu\",\n      //   } as any,\n      //   menuItemClassName: {\n      //     type: \"class\",\n      //     displayName: \"Menu items\",\n      //     noSelf: true,\n      //     selectors: [\n      //         {\n      //             selector: \":menu .ant-menu-item\",\n      //             label: \"Base\",\n      //         },\n      //         {\n      //             selector: \":menu .ant-menu-item-selected\",\n      //             label: \"Selected\",\n      //         },\n      //     ],\n      //   } as any,\n      children: {\n        type: \"slot\",\n        allowedComponents: allowedMenuComponents,\n        defaultValue: [\n          {\n            type: \"component\",\n            name: \"plasmic-antd5-menu-item\",\n            props: {\n              key: \"menuItemKey1\",\n            },\n          },\n          {\n            type: \"component\",\n            name: \"plasmic-antd5-menu-item\",\n            props: {\n              key: \"menuItemKey2\",\n            },\n          },\n        ],\n      },\n      onSelect: {\n        type: \"eventHandler\",\n        argTypes: [{ name: \"key\", type: \"string\" }],\n      } as any,\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerMenu\",\n    importName: \"AntdMenu\",\n  });\n\n  registerComponentHelper(loader, AntdMenuItem, {\n    name: \"plasmic-antd5-menu-item\",\n    displayName: \"Menu Item\",\n    props: {\n      danger: {\n        type: \"boolean\",\n        description: \"Display the danger style\",\n        defaultValueHint: false,\n      },\n      disabled: {\n        type: \"boolean\",\n        description: \"Whether disabled select\",\n        defaultValueHint: false,\n      },\n      key: {\n        type: \"string\",\n        displayName: \"Unique key\",\n        description:\n          \"Unique ID of the menu item. Used to determine which item is selected.\",\n        defaultValue: \"menuItemKey\",\n      },\n      title: {\n        type: \"string\",\n        description: \"Set display title for collapsed item\",\n      },\n      children: {\n        type: \"slot\",\n        defaultValue: [\n          {\n            type: \"text\",\n            value: \"Menu item\",\n          },\n        ],\n        ...({ mergeWithParent: true } as any),\n      },\n      onClick: {\n        type: \"eventHandler\",\n        argTypes: [],\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerMenu\",\n    importName: \"AntdMenuItem\",\n    parentComponentName: \"plasmic-antd5-menu\",\n  });\n\n  registerComponentHelper(loader, AntdMenuItemGroup, {\n    name: \"plasmic-antd5-menu-item-group\",\n    displayName: \"Item Group\",\n    props: {\n      title: {\n        type: \"slot\",\n        defaultValue: [\n          {\n            type: \"text\",\n            value: \"Group\",\n          },\n        ],\n      },\n      children: {\n        type: \"slot\",\n        allowedComponents: allowedMenuComponents,\n        defaultValue: [\n          {\n            type: \"component\",\n            name: \"plasmic-antd5-menu-item\",\n          },\n        ],\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerMenu\",\n    importName: \"AntdMenuItemGroup\",\n    parentComponentName: \"plasmic-antd5-menu\",\n  });\n\n  registerComponentHelper(loader, AntdMenuDivider, {\n    name: \"plasmic-antd5-menu-divider\",\n    displayName: \"Menu Divider\",\n    props: {\n      dashed: {\n        type: \"boolean\",\n        description: \"Whether line is dashed\",\n        defaultValueHint: false,\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerMenu\",\n    importName: \"AntdMenuDivider\",\n    parentComponentName: \"plasmic-antd5-menu\",\n  });\n\n  registerComponentHelper(loader, AntdSubMenu, {\n    name: \"plasmic-antd5-submenu\",\n    displayName: \"Sub Menu\",\n    props: {\n      disabled: {\n        type: \"boolean\",\n        description: \"Whether sub-menu is disabled\",\n        defaultValueHint: false,\n      },\n      key: {\n        type: \"string\",\n        displayName: \"Unique key\",\n        description:\n          \"Unique ID of the sub-menu. Used to determine which item is selected.\",\n        advanced: true,\n      },\n      title: {\n        type: \"slot\",\n        defaultValue: [\n          {\n            type: \"text\",\n            value: \"Sub-menu\",\n          },\n        ],\n      },\n      popupClassName: {\n        type: \"class\",\n        displayName: \"Sidemenu Popup\",\n      },\n      children: {\n        type: \"slot\",\n        allowedComponents: allowedMenuComponents,\n        defaultValue: [1, 2].map((i) => ({\n          type: \"component\",\n          name: \"plasmic-antd5-menu-item\",\n          props: {\n            key: `subMenuItemKey${i}`,\n            children: [\n              {\n                type: \"text\",\n                value: `Sub-menu item ${i}`,\n              },\n            ],\n          },\n        })),\n      },\n    },\n    importPath: \"@plasmicpkgs/antd5/skinny/registerMenu\",\n    importName: \"AntdSubMenu\",\n    parentComponentName: \"plasmic-antd5-menu\",\n  });\n}\n"],"names":["AntdMenu"],"mappings":"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"}